{"version": "2.0.0", "agency": "NASA", "measurementType": {"method": "linesOfCode"}, "releases": [{"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "CODE is a framework for the control and observation of resources, services, and applications. The technology supports the secure and scalable transmission of observed information to other programs, and it enables the secure execution of actions on remote computer systems. ", "identifier": "ARC-14672-1", "laborHours": 0, "name": "CODE-A Software Framework For Control and Observation In Distributed Environments", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://www.nas.nasa.gov/Resources/Software/Open-Source/Downloads/Code/UsageAgreement-1_0b1.txt", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://www.nas.nasa.gov/Resources/Software/Open-Source/code.html", "tags": ["Open Source", "nlp:coding", "Data Servers Processing and Handling", "nlp:distributed parameter system", "nlp:software engineering", "NASA", "ARC", "nlp:computer systems program", "nlp:information system", "nlp:computer", "nlp:applications programs (computers)", "nlp:computer program", "nlp:computer technique", "nlp:computer programming"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "MST offers a simulation framework to support research in autonomy for remote exploration. The system allows developers to test models in a high-fidelity simulation and then evaluate system performance against a set of integrated, standardized simulations.", "identifier": "ARC-14932-1", "laborHours": 0, "name": "Mission Simulation Toolkit (MST)", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://ti.arc.nasa.gov/opensource/nosa/mission-simulation-toolkit/", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://ti.arc.nasa.gov/opensource/projects/mission-simulation-toolkit/", "tags": ["Open Source", "nlp:performance prediction", "nlp:simulation", "nlp:computerized simulation", "nlp:flight simulation", "nlp:systems analysi", "NASA", "nlp:systems engineering", "ARC", "Autonomous Systems", "nlp:mathematical model", "nlp:autonomy", "nlp:model", "nlp:systems simulation"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "Livingstone 2 is a reusable artificial intelligence (AI) software system designed to assist spacecraft, life support systems, chemical plants, or other complex systems in operating robustly with minimal human supervision, even in the face of hardware failures or unexpected events. The technology diagnoses the current state of a spacecraft or other system and recommends commands or repair actions that will allow the system to continue operations. A re-engineered version of the Livingstone diagnosis system that was flight-tested onboard the Deep Space One spacecraft in 1999, Livingstone 2 contains significant enhancements to robustness, performance, and usability. Skunkworks is a suite of software tools that support the rapid deployment of model-based representations of complex systems for Livingstone2 via a visual model builder/tester and two graphical user interface tools that provide status information during testing.", "identifier": "ARC-14725-1", "laborHours": 0, "name": "Livingstone 2 (System for Automated Diagnosis and Discrete Control of Complex Systems) and Skunkworks (Suite of Supporting Development and Runtime Tools)", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://ti.arc.nasa.gov/opensource/nosa/livingstone2/", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://ti.arc.nasa.gov/opensource/projects/livingstone2/", "tags": ["Open Source", "nlp:human-computer interface", "nlp:complex system", "nlp:control systems design", "nlp:software engineering", "NASA", "ARC", "Autonomous Systems", "nlp:software development tool", "nlp:computer systems program", "nlp:applications programs (computers)", "nlp:automatic control", "nlp:computer program", "nlp:artificial intelligence"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "Java Pathfinder (JPF) is a model checker for Java. The technology takes a Java program and \"executes\" it in a way that explores all possible executions/interleavings of the threads in the program. This allows JPF to detect certain bugs (e.g., deadlocks and assertion violations) that may be missed during testing. ", "identifier": "ARC-15388-1", "laborHours": 0, "name": "Java Pathfinder (JPF), Version 2.0", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://babelfish.arc.nasa.gov/trac/jpf/wiki/install/repositories", "tags": ["Open Source", "nlp:dynamic model", "Data and Image Processing", "nlp:program verification (computers)", "NASA", "nlp:computer program", "ARC", "nlp:atmospheric model", "nlp:technology", "nlp:mathematical model", "nlp:scale model", "nlp:reliability", "nlp:java (programming language)", "nlp:computer programming"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "CAPO analyzes a Fortran program and inserts OpenMP directives into the code to improve its performance on a parallel machine. The tool relies on accurate inter-procedural data-dependence information currently provided by CAPTools, which was developed at the University of Greenwich.", "identifier": "ARC-14487-1", "laborHours": 0, "name": "CAPTools-based Automatic Parallelizer Using OpenMP (CAPO)", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://software.nasa.gov/software/ARC-14487-1", "tags": ["Open Source", "nlp:fortran", "nlp:performance prediction", "nlp:coding", "nlp:subroutine", "Data Servers Processing and Handling", "nlp:machine tool", "NASA", "nlp:parallel processing (computers)", "ARC", "nlp:parallel programming", "nlp:information system", "nlp:applications programs (computers)", "nlp:computer program"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "SLAB is a software-based, real-time, virtual acoustic-environment rendering system designed to study spatial hearing in environments such as concert halls, listening rooms, virtual reality, aviation spatial information displays, and video game sound effects. ", "identifier": "ARC-14991-1", "laborHours": 0, "name": "Sound Lab (SLAB), Version 5", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://ti.arc.nasa.gov/opensource/nosa/slab-spatial-audio-renderer", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://ti.arc.nasa.gov/opensource/projects/slab-spatial-audio-renderer/", "tags": ["Open Source", "nlp:auditory perception", "nlp:real time operation", "nlp:hearing", "nlp:computer graphic", "nlp:software engineering", "NASA", "ARC", "System Testing", "nlp:virtual reality", "nlp:game theory", "nlp:slab", "nlp:computer program", "nlp:display device"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "Libibvpp is a C++ wrapper around libibverbs, which is part of the OpenFabrics software suite.", "identifier": "ARC-16075-1", "laborHours": 0, "name": "Libibvpp", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://ti.arc.nasa.gov/opensource/nosa/Libibvpp/", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://ti.arc.nasa.gov/opensource/projects/libibvpp/", "tags": ["Open Source", "nlp:stability", "nlp:c++ (programming language)", "Data and Image Processing", "NASA", "ARC", "nlp:software development tool", "nlp:computer systems program", "nlp:circuit", "nlp:reliability", "nlp:computer program", "nlp:radiation", "nlp:boundary layer", "nlp:computer programming"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "Mariana is an algorithm that efficiently optimizes the hyperparameters for support vector machines for regression and classification. It currently uses simulated annealing for optimization but can be extended to use a variety of stochastic optimization techniques, including Markov Chain Monte Carlo, Sequential Monte Carlo, and genetic algorithms. ", "identifier": "ARC-16070-1", "laborHours": 0, "name": "Mariana: Text Classification System", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://ti.arc.nasa.gov/opensource/nosa/mariana/", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://ti.arc.nasa.gov/opensource/projects/mariana/", "tags": ["Open Source", "nlp:markov chain", "nlp:algorithm", "nlp:vector analysi", "Data and Image Processing", "nlp:genetic algorithm", "NASA", "nlp:monte carlo method", "ARC", "nlp:vectors (mathematics)", "nlp:machine learning", "nlp:classification", "nlp:regression analysi", "nlp:optimization"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "GMP serializes datatypes between XML and ANSI C data structures to support CFD applications. The library currently provides a description of geometric configurations, general moving-body scenarios (prescribed and/or 6-DOF), and control surface settings. ", "identifier": "ARC-15193-1", "laborHours": 0, "name": "Geometry Manipulation Protocol (GMP) for ComputationalFluid Dynamics (CFD) Applications, Version 1.0", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://ti.arc.nasa.gov/opensource/nosa/gmp/", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://ti.arc.nasa.gov/opensource/projects/gmp/", "tags": ["Open Source", "nlp:surface propertie", "nlp:protocol (computers)", "nlp:three dimensional bodie", "nlp:computational fluid dynamic", "Data and Image Processing", "nlp:library", "NASA", "nlp:rigid structure", "ARC", "nlp:aerodynamic configuration"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "The Constellation PRACA I-1 system is a modified version of an open-source, Web-based defect tracking tool called Bugzilla. Bugzilla allows software developers to document and track outstanding bugs in their products; in the Constellation PRACA I-1 system, these core capabilities have been extended to provide the necessary functionality and usability defined in the PRACA processing requirements.", "identifier": "ARC-16033-1", "laborHours": 0, "name": "Constellation PRACA Extension of the Bugzilla Application", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://software.nasa.gov/software/ARC-16033-1", "tags": ["Open Source", "nlp:crystal defect", "nlp:data processing equipment", "Data and Image Processing", "nlp:software engineering", "NASA", "nlp:program verification (computers)", "ARC", "nlp:software development tool", "nlp:computer systems program", "nlp:defect", "nlp:applications programs (computers)", "nlp:computer program", "nlp:computer programming"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "nu-Anomica is an anomaly detector that can run faster than traditional OC-SVMs. The technology can handle large training sets and works with a well-defined target function. The program utilizes the OSU SVMs code (which is a MATLAB version of Lib-SVMs) as the baseline.", "identifier": "ARC-16346-1", "laborHours": 0, "name": "nu-Anomica (Previously Sparse One Class Support Vector Machines (SOC-SVMs))", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://ti.arc.nasa.gov/m/opensource/nu-anomica/nosa.pdf", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://ti.arc.nasa.gov/opensource/projects/nu-anomica/", "tags": ["Open Source", "nlp:target acquisition", "nlp:target", "nlp:symbol", "nlp:vector analysi", "nlp:functions (mathematics)", "Data and Image Processing", "NASA", "nlp:vectors (mathematics)", "ARC", "nlp:detector", "nlp:education", "nlp:applications programs (computers)", "nlp:computer program"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "SequenceMiner was developed to address the problem of detecting and describing anomalies in large sets of high-dimensional symbol sequences. The technology performs unsupervised clustering (grouping) of sequences using the normalized longest common subsequence (LCS) as a similarity measure, followed by a detailed analysis of outliers to detect anomalies. SequenceMiner utilizes a new hybrid algorithm for computing the LCS that has been shown to outperform existing algorithms by a factor of five.", "identifier": "ARC-16053-1", "laborHours": 0, "name": "SequenceMiner-Anomaly Detection in Large Sets of High-Dimensional Symbol Sequences", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://software.nasa.gov/faq", "name": "Pending Release"}], "usageType": "openSource"}, "repositoryURL": "https://ti.arc.nasa.gov/opensource/projects/sequenceminer/", "tags": ["Open Source", "nlp:symbol", "nlp:sequential analysi", "nlp:computation", "nlp:algorithm", "nlp:detection", "nlp:anomaly", "nlp:problem solving", "Data and Image Processing", "NASA", "nlp:set theory", "ARC", "nlp:sequencing", "nlp:cluster analysi"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "VERVE is a 3D visualization system that provides situational awareness, science analysis tools, and data understanding capabilities for robotics researchers and exploration science operations. The technology is highly modular and extensible and includes a 3D scene-graph database, an interactive 3D viewer, and associated graphical user interfaces to OSGI plugin-based applications.", "identifier": "ARC-16457-1A", "laborHours": 0, "name": "Visual Environment for Remote Virtual Exploration (VERVE), Version 2", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://sourceforge.net/p/irg-verve/wiki/VERVE%20Wiki%20Home/", "tags": ["Open Source", "nlp:data base", "nlp:remote control", "nlp:graphs (charts)", "nlp:human-computer interface", "nlp:robotic", "nlp:scientific visualization", "nlp:computer graphic", "Data and Image Processing", "NASA", "ARC", "nlp:virtual reality", "nlp:situational awarenes", "nlp:graphical user interface"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "NGT is a collection of automated processing tools that can transform raw geospatial raster data from remote sensing instruments into useful cartographic products, including visible image base maps and topographic models. ", "identifier": "ARC-16341-1A", "laborHours": 0, "name": "Neo-Geography Toolkit (NGT), Version 2", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://www.apache.org/licenses/LICENSE-2.0", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://ti.arc.nasa.gov/tech/asr/intelligent-robotics/ngt/stereo/", "tags": ["Open Source", "nlp:data base", "nlp:mapping", "nlp:computer aided mapping", "nlp:data processing", "Environmental Science (Earth, Air, Space, Exoplanet)", "NASA", "nlp:geography", "ARC", "nlp:digital data", "nlp:remote sensing", "nlp:data acquisition", "nlp:image processing", "nlp:map"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "IKOS is a kernel for the construction of open-static analyzers based on Patrick Cousot and Radhia Cousot's theory of abstract interpretation, which states that computations can be abstracted and reduced to a generalized set of objects and still exhibit the same critical properties of the parent program. By reducing the set of objects through abstraction, IKOS is scalable to large complex computer programs and presents a sound approach to verification of such programs. ", "identifier": "ARC-16789-1", "laborHours": 0, "name": "Inference Kernel for Open Static (IKOS) Analyzers: A High-Performance Static Analysis Engine to Build Automated Code Analysis Tools for the Formal Verification of Critical Software Properties", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://ti.arc.nasa.gov/m/opensource/downloads/ikos/IKOS_NASA_Open_Source_Agreement.pdf", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://ti.arc.nasa.gov/opensource/ikos/", "tags": ["Open Source", "nlp:performance prediction", "nlp:computation", "nlp:kernel function", "Data and Image Processing", "nlp:program verification (computers)", "NASA", "ARC", "nlp:computer systems program", "nlp:computer", "nlp:computer aided design", "nlp:computer program", "nlp:computer technique", "nlp:computer programming"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "RAPID is a software reference implementation framework for remote operations. The technology promotes interoperability between robot software modules and includes a standard programming interface and data distribution middleware. RAPID facilitates integration of experimental robot software modules created by a distributed development team; improves the compatibility and reusability of robotic functions; and offers speed prototype robot development in a wide range of configurations and environments.", "identifier": "ARC-16368-1A", "laborHours": 0, "name": "Robot Application Programming Interface Delegate (RAPID), Version 2", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://rapid.nasa.gov/index.html", "tags": ["Open Source", "nlp:programming environment", "nlp:module", "nlp:software engineering", "nlp:robot", "NASA", "ARC", "Autonomous Systems", "nlp:computer systems program", "nlp:interoperability", "nlp:applications programs (computers)", "nlp:computer program", "nlp:prototype", "nlp:computer programming"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-11-05"}, "description": "PathDroid is an extension of the open sourced Java Pathfinder (JPF) verification framework that supports checking binary Android applications for absence of software defects such as unhandled exceptions and deadlocks.\r\nPathDroid let users run such applications on development platforms, without the need for hardware-in-the-loop or availability of sources.\r\n", "identifier": "ARC-17293-1", "laborHours": 0, "name": "PathDroid", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://www.apache.org/licenses/LICENSE-2.0", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://ti.arc.nasa.gov/opensource/projects/pathdroid/", "tags": ["Open Source", "nlp:hardware", "nlp:software engineering", "nlp:program verification (computers)", "NASA", "nlp:computer program", "ARC", "nlp:software development tool", "System Testing", "nlp:defect", "nlp:computer", "nlp:applications programs (computers)", "nlp:java (programming language)", "nlp:computer programming"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-12-11"}, "description": "Block GP is a Gaussian Process regression framework for multimodal data, that can be an order of magnitude more scalable than existing state-of-the-art nonlinear regression algorithms. The framework builds local Gaussian Processes on semantically meaningful partitions of the data and provides higher prediction accuracy than a single global model with very high confidence. The method relies on approximating the covariance matrix of the entire input space by smaller covariance matrices that can be modeled independently, and\r\ncan therefore be parallelized for faster execution. \r\n", "identifier": "ARC-16864-1", "laborHours": 0, "name": "Scalable Gaussian Process Regression", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://ti.arc.nasa.gov/m/opensource/nosa/block-gp.pdf", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://ti.arc.nasa.gov/opensource/projects/block-gp/", "tags": ["Open Source", "nlp:covariance", "nlp:algorithm", "nlp:stochastic processe", "nlp:prediction", "Data and Image Processing", "NASA", "ARC", "nlp:prediction analysis technique", "nlp:mathematical model", "nlp:regression analysi", "nlp:matrices (mathematics)", "nlp:statistical analysi", "nlp:random processe"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2015-03-05"}, "description": "Java Pathfinder core system (jpf-core), is a model checker for Java bytecode. The technology takes a binary Java program and executes it in a user configurable way to detect defects such as deadlocks and unhandled exceptions, providing significantly higher confidence in correct program behavior than conventional testing.", "identifier": "ARC-17487-1", "laborHours": 0, "name": "Java Pathfinder (JPF) core system", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://javapathfinder.sourceforge.net/NOSA-1.3-JPF.txt", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://babelfish.arc.nasa.gov/hg/jpf/jpf-core", "tags": ["Open Source", "nlp:bionic", "nlp:evaluation", "nlp:crystal defect", "Data and Image Processing", "nlp:systems analysi", "NASA", "nlp:computer program", "ARC", "nlp:systems engineering", "nlp:aircraft model", "nlp:mathematical model", "nlp:defect", "nlp:java (programming language)"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "Decision trees are commonly used in artificial intelligence and statistical pattern recognition. A tree is \"grown\" from data using a recursive-partitioning algorithm. IND re-implements parts of existing standard prediction algorithms, offers experimental control suites, and also introduces new, more sophisticated methods for growing decision trees.", "identifier": "ARC-14529-1", "laborHours": 0, "name": "IND 2.1-Creation and Manipulation of Decision Trees from Data", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://ti.arc.nasa.gov/opensource/nosa/ind/", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://ti.arc.nasa.gov/opensource/projects/ind/", "tags": ["Open Source", "nlp:algorithm", "nlp:pattern recognition", "nlp:decision theory", "Data Servers Processing and Handling", "nlp:prediction", "nlp:trees (mathematics)", "NASA", "nlp:data structure", "ARC", "nlp:prediction analysis technique", "nlp:decision making", "nlp:cybernetic", "nlp:artificial intelligence"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2015-03-05"}, "description": "JPF-NAS is developed to provide support for model checking distributed applications.   It relies on the multiprocess support included in Java Pathfinder (JPF) which provides basic functionality to verify the bytecode of distributed applications. JPF-NAS is implemented as a JPF extension which models interprocess communication mechanisms. It uses a form of partial order reduction to explore all possible executions of a distributed Java application. Moreover, JPF-NAS provides a functionality to check the given distributed application under test against possible network failures which can occur at the operating system or the hardware layer.", "identifier": "ARC-17301-1", "laborHours": 0, "name": "JPF-NAS, an extension of Java Pathfinder that provides support for model checking distributed systems", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://babelfish.arc.nasa.gov/hg/jpf/jpf-nas/file/46d377d1a6f2/LICENSE-2.0.txt", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://babelfish.arc.nasa.gov/hg/jpf/jpf-nas", "tags": ["Open Source", "nlp:computer systems performance", "nlp:system failure", "nlp:communication network", "nlp:operating systems (computers)", "nlp:computer network", "NASA", "nlp:data transmission", "ARC", "nlp:failure analysi", "System Testing", "nlp:computer", "nlp:java (programming language)", "nlp:interprocessor communication"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2015-03-05"}, "description": "MFS (Multi-Fidelity Simulator) is a pluggable framework for creating an air traffic flow simulator at multiple levels of fidelity. The framework is designed to allow low-fidelity simulations of the entire US Airspace to be completed very quickly (on the order of seconds). The framework allows higher-fidelity plugins to be added to allow higher-fidelity simulations to occur in certain regions of the airspace concurrently with the low-fidelity simulation of the full airspace.", "identifier": "ARC-17449-1", "laborHours": 0, "name": "MFSim - Multi-fidelity Simulation", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://www.apache.org/licenses/LICENSE-2.0", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://ti.arc.nasa.gov/opensource/projects/mfsim/", "tags": ["Open Source", "nlp:airspace", "nlp:air flow", "nlp:simulator", "nlp:air traffic control", "nlp:simulation", "nlp:flight simulation", "nlp:computerized simulation", "nlp:traffic", "Aeronautics", "NASA", "ARC", "nlp:control simulation", "nlp:systems simulation"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "Surfer examines the pool of potential grid resources and extracts the highest-ranking resources that meet user-specified constraints and preferences. The technology has been implemented as a grid service that is compliant with an Open Grid Services Infrastructure (OGSI), and it can also be embedded directly into Java applications through its application programming interface or into non-java applications through its XML-based command-line interface.", "identifier": "ARC-15295-1", "laborHours": 0, "name": "Surfer: An Extensible Pull-Based Framework For Resource Selection and Ranking", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://ti.arc.nasa.gov/opensource/nosa/surfer", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://ti.arc.nasa.gov/opensource/projects/surfer/", "tags": ["Open Source", "nlp:on-line system", "nlp:programming environment", "nlp:interactive control", "nlp:human-computer interface", "nlp:interface", "nlp:command and control", "Data and Image Processing", "NASA", "ARC", "nlp:computational grid", "nlp:java (programming language)", "nlp:document markup language", "nlp:computer programming"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "Pour is a general-purpose information service framework for periodic, on-demand, and user-specified information reconciliation. The technology is designed to accommodate a wide variety of information types with support for high-volume, low-frequency periodic updates, user-specified updates, and automatic updates collected on demand when needed. ", "identifier": "ARC-15468-1", "laborHours": 0, "name": "Pour: A Framework for Periodic, On-Demand, and User-Specified Information Reconciliation", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://ti.arc.nasa.gov/opensource/nosa/pour/", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://ti.arc.nasa.gov/opensource/projects/pour/", "tags": ["Open Source", "nlp:support system", "nlp:information dissemination", "nlp:frequency", "nlp:information management", "Data and Image Processing", "nlp:user requirement", "NASA", "nlp:data transmission", "ARC", "nlp:information system", "nlp:information flow", "nlp:information retrieval", "nlp:information theory"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "Swim is a software information service for the grid built on top of the NASA-developed Pour framework. Software information is periodically gathered from native package managers on FreeBSD, Solaris, and IRIX as well as the RPM, Perl, and Python package managers on multiple platforms. ", "identifier": "ARC-15469-1", "laborHours": 0, "name": "Swim: A Software Information Metacatalog for the Grid", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://ti.arc.nasa.gov/opensource/nosa/swim", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://ti.arc.nasa.gov/opensource/projects/swim/", "tags": ["Open Source", "nlp:information dissemination", "Data and Image Processing", "nlp:software engineering", "NASA", "nlp:nasa program", "ARC", "nlp:software development tool", "nlp:computer systems program", "nlp:information system", "nlp:computational grid", "nlp:applications programs (computers)", "nlp:computer program", "nlp:computer programming"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "Ballast is a tool for balancing user load across Secure Shell Handler (SSH) servers. The system includes a load-balancing client, a lightweight data server, scripts for collecting system load, and scripts for analyzing user behavior. Because Ballast is invoked as part of the SSH login process, it has access to user names. This capability, which is not available in traditional approaches, enables Ballast to perform user-specific load balancing. In addition, Ballast is easy to install, induces near-zero overhead, and has fault-tolerant features in its architectures that will eliminate single points of failure.", "identifier": "ARC-16443-1", "laborHours": 0, "name": "Ballast: Balancing Load Across Systems", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/pkolano/ballast/blob/6697df8c89b344d54cea11a6bdd8d3076ed136cc/COPYING", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/pkolano/ballast", "tags": ["Open Source", "nlp:fault tolerance", "nlp:failure", "Data Servers Processing and Handling", "nlp:architecture (computers)", "nlp:systems analysi", "NASA", "nlp:failure analysi", "ARC", "nlp:distributed processing", "nlp:systems engineering", "nlp:computer", "nlp:balancing", "nlp:loads (forces)"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "Dyper protects a site from unauthorized network flows. The tool offers dynamic perimeter enforcement by providing a general-purpose mechanism for maintaining least-privilege network security policies while still supporting the full utilization of multiport protocols. Dyper requires no changes to software or practices outside of the perimeter and only minimal changes inside.", "identifier": "ARC-16444-1", "laborHours": 0, "name": "Dyper: Dynamic Perimeter Enforcement", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://sourceforge.net/directory/license:nasalicense/", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://sourceforge.net/projects/dyper/", "tags": ["Open Source", "nlp:protocol (computers)", "nlp:security", "nlp:network", "Data Servers Processing and Handling", "nlp:computer network", "NASA", "ARC", "nlp:software development tool", "nlp:policy", "nlp:computer systems program", "nlp:computer program", "nlp:computer information security", "nlp:network analysi"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "JavaGenes is a genetic algorithm code written in Java. It evolves graphs using genetic software techniques and has applications in designing drugs, circuits, or any other system that is easily represented by graphs. ", "identifier": "ARC-14293-1", "laborHours": 0, "name": "JavaGenes Genetic Graphs", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://ti.arc.nasa.gov/opensource/nosa/javagenes/", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://ti.arc.nasa.gov/opensource/projects/javagenes/", "tags": ["Open Source", "nlp:symbol", "nlp:graph theory", "nlp:graphs (charts)", "nlp:algorithm", "nlp:coding", "Data Servers Processing and Handling", "nlp:software engineering", "NASA", "ARC", "nlp:computer systems program", "nlp:circuit", "nlp:applications programs (computers)", "nlp:computer program"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "JavaGenes-Scheduler is a general purpose evolutionary system designed to compare techniques for scheduling observations. It was originally developed for scheduling observations made by Earth-observing satellites. JavaGenes-Scheduler uses a simple, earliest-first scheduler to insert observations into the timeline in permutation order.", "identifier": "ARC-15103-1", "laborHours": 0, "name": "JavaGenes-Scheduler: Evolutionary Software for Earth Observing Satellite Scheduling", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://ti.arc.nasa.gov/opensource/nosa/javagenes/", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://ti.arc.nasa.gov/opensource/projects/javagenes/", "tags": ["Open Source", "nlp:earth observing system (eos)", "nlp:scheduling", "Data Servers Processing and Handling", "nlp:earth observations (from space)", "nlp:systems analysi", "NASA", "nlp:satellite instrument", "ARC", "nlp:software development tool", "nlp:satellite observation", "nlp:earth (planet)", "nlp:computer program", "nlp:satellite communication"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2016-07-07"}, "description": "Open MCT is an open source and web-based mission control framework for visualization of data on desktop and mobile devices. Open MCT is designed for analysis, visualization, operation, and support of spacecraft missions. Open MCT provides an extensible plugin system allowing it to be integrated with existing ground systems, and adapted to support multiple missions as well as non-space applications.", "identifier": "ARC-15256-1D", "laborHours": 0, "name": "Open Mission Control Technologies (Open MCT)", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/openmct/blob/master/LICENSES.md", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/openmct/", "tags": ["Open Source", "nlp:data system", "nlp:space mission", "nlp:ground operational support system", "nlp:scientific visualization", "nlp:optic", "nlp:ground based control", "NASA", "nlp:ground support system", "ARC", "nlp:spacecraft control", "nlp:mission planning", "Operations", "nlp:spacecraft environment"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-11-12"}, "description": "The X-Plane Connect Toolbox enables users to receive real-time information on one or more simulated vehicles state from the X-Plane flight simulator, and control vehicles running in the X-Plane simulation environment. The toolbox can be used to record simulated flight data, visualize flight profiles, create out-the-window visuals, test autopilots, and test control algorithms. Additionally, the toolbox enables the display of ghost traffic flying predefined flight paths in the simulated airspace, and the visualization of flight plans in the form of waypoints. The toolbox allows custom built or third party autopilot programs to interface with X-Plane through MATLAB, C, C++, Java, or Python . Code examples are included in the open source distribution. The toolbox uses a network communication protocol, allowing X-Plane and the client program to run on different computers.", "identifier": "ARC-17185-1", "laborHours": 0, "name": "X-Plane Communication Toolbox (XPC)", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/XPlaneConnect/blob/master/license.pdf", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/XPlaneConnect/", "tags": ["Open Source", "nlp:real time operation", "nlp:algorithm", "nlp:flight control", "nlp:simulator", "nlp:flight simulation", "nlp:computerized simulation", "nlp:simulation", "nlp:flight simulator", "Aeronautics", "NASA", "ARC", "nlp:control simulation", "nlp:flight path"]}, {"contact": {"email": "afrc-ipo-softwarecatalogue@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2016-03-14"}, "description": "In the analysis of radiation, it is helpful to be able to predict the heat transfer rate and the spectral distribution of the emitted energy. Presented here is a set of routines written in Microsoft Visual Basic for Applications (VBA) and incorporating functions specific to Microsoft Excel that are useful for predicting the radiative behavior of heated surfaces. These routines include functions for calculating important engineering quantities of primary importance to engineers and scientists such as radiative flux and spectral distributions. In addition, the routines also provide the capability to use such information to determine surface temperatures from spectral intensities and for calculating the sensitivity of these temperature measurements to unknowns in the input parameters.", "identifier": "DRC-015-017", "laborHours": 0, "name": "Blackbody VBA Excel Functions", "organization": "DFRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://software.nasa.gov/software/DRC-015-017", "tags": ["Open Source", "Materials and Processes", "nlp:surface temperature", "nlp:thermal radiation", "nlp:heat flux", "nlp:radiation measurement", "nlp:temperature measurement", "DFRC", "NASA", "nlp:spectral energy distribution", "nlp:radiant flux density", "nlp:heat transfer", "nlp:radiative heat transfer", "nlp:black body radiation"]}, {"contact": {"email": "afrc-ipo-softwarecatalogue@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2016-07-12"}, "description": "This is an easy-to-use MATLAB based finite element modeling and simulation tool for aeroservoelastic analysis of rectangular wings with trailing-edge control surfaces. It includes a tutorial on structural finite element modeling (FEM_Tutorial.m) using elements such as 12 DOF plates and 6 DOF beams. The aero tutorial (DLM_VLM_Tutorial.m) shows how to code doublet lattice and vortex lattice, with symmetry capability. Together the finite element and aero tutorials can be used to compare to experimental studies such as ground vibration testing, cantilever beam analysis, as well as wind tunnel testing. The primary code, EZASE.m, links structures and aero together in a commented way to produce a wing in flutter which can be controlled. The wing may include control surfaces or they can be excluded. A state space model with control surface inputs and accelerometer outputs can be produced. This model is used to design a PID control system and is tested using margin studies and pole plots. Other visualization methods such as V-g plots determined using the K-method are also included. The code is commented for Graduate and Undergraduate students of aeroservoelasticity who want to know the basic concepts of medium fidelity aeroservoelastic modeling. Not all methods are coded to industry standards. But students of the field including practicing engineers may find it useful for basic understanding; theoretical manuals for industry level codes tend to leave out many of the coding details. All of the details of the code are open sourced here and most of it is referenced at the top of the file to its source paper or book section. Two AIAA publications with one focusing on V&V with experimental wind tunnel test and ground vibration test data are also included.", "identifier": "DRC-014-036", "laborHours": 0, "name": "EZASE  Easy Aeroservoelasticity", "organization": "DFRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://software.nasa.gov/software/DRC-014-036", "tags": ["Open Source", "nlp:aeroelasticity", "nlp:vibration damping", "nlp:three dimensional model", "nlp:computerized simulation", "DFRC", "Aeronautics", "NASA", "nlp:control surface", "nlp:unsteady aerodynamic", "nlp:mathematical model", "nlp:flutter analysi", "nlp:wind tunnel test", "nlp:flutter"]}, {"contact": {"email": "grc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-10-30"}, "description": "Tool for Turbine Engine Closed-loop Transient Analysis (TTECTrA)\r\n\r\nThe Tool for Turbine Engine Closed-loop Transient Analysis (TTECTrA) is a tool, developed in the Mathworks(R) Matlab/Simulink enviornment, intended to extend systems analysis by providing an estimate of the transient performance/capability of a conceptual engine design.  The TTECTrA tool is capable of designing a basic turbofan engine controller, with transient protection, based on the user's engine model and constraints.  TTECTrA is built in the Mathworks Matlab/Simulink environment and relies on the Matlab Control Systems Toolbox to provide additional functionality and streamline the control design process.", "identifier": "LEW-19177-1", "laborHours": 0, "name": "Tool for Turbine Engine Closed-loop Transient Analysis (TTECTrA)", "organization": "GRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/TTECTrA", "tags": ["Open Source", "nlp:performance prediction", "nlp:controller", "nlp:control equipment", "nlp:control systems design", "nlp:systems analysi", "Aeronautics", "NASA", "nlp:turbine engine", "nlp:feedback control", "nlp:systems engineering", "nlp:transient response", "nlp:turbofan engine", "GRC"]}, {"contact": {"email": "grc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2016-03-22"}, "description": "Photographic gallery type application containing imagery and descriptions from the GRC image archive. Photos and data cover the period from 1941-1979.  The software has been compiled and bundled as an iOS app for the iPad and intended for release through the Apple App Store.", "identifier": "LEW-18993-1", "laborHours": 0, "name": "NASA Glenn Research Center: The Early Years for iPad", "organization": "GRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://itunes.apple.com/WebObjects/MZStore.woa/wa/viewEula?id=562903295", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://www.nasa.gov/centers/glenn/multimedia/grchistory.html", "tags": ["Open Source", "nlp:satellite imagery", "nlp:photointerpretation", "nlp:image analysi", "nlp:software engineering", "Aeronautics", "NASA", "nlp:computer program", "nlp:imagery", "nlp:data acquisition", "nlp:image processing", "GRC", "nlp:imaging technique", "nlp:aerial photography"]}, {"contact": {"email": "grc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2016-03-22"}, "description": "Augmented reality application intended to highlight NASA Glenn's research efforts in the area of flywheel energy storage systems.  The app utilizes a printed optical target, available on the GRC Flywheel Program brochure and through the NASA Glenn web portal, to present users with 3D views of flywheel hardware and space applications.  Additional video and imagery are also inlcuded in the application package. The software has been compiled and bundled as an iOS app for the iPad and intended for release through the Apple App Store.", "identifier": "LEW-19133-1", "laborHours": 0, "name": "NASA Flywheel for iPad", "organization": "GRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://itunes.apple.com/WebObjects/MZStore.woa/wa/viewEula?cc=us&id=804737215", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://www.nasa.gov/centers/glenn/multimedia/applied_science/flywheel", "tags": ["Open Source", "nlp:flywheel", "nlp:file maintenance (computers)", "nlp:hardware", "nlp:energy storage", "NASA", "nlp:nasa program", "nlp:computer systems program", "Propulsion", "nlp:virtual reality", "nlp:applications programs (computers)", "nlp:computer program", "GRC", "nlp:image processing"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "The Hierarchical Data Format Earth Observing System (HDF-EOS) Data Extractor (HEEX) is a tool that enables users to extract HDF-EOS data to binary or ASCII data formats in HTML or XML index. The software can be used for both HDF-EOS2 and HDF-EOS5, and it automatically recognizes the two formats.", "identifier": "GSC-15009-1", "laborHours": 0, "name": "Hierarchical Data Format Earth Observing System (HDF-EOS)Data Extractor (HEEX)", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.gsfc.nasa.gov/documents/NASA_Open_Source_Agreement_1.3.txt", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://software.nasa.gov/software/GSC-15011-1", "tags": ["Open Source", "nlp:data base", "nlp:data system", "nlp:earth observing system (eos)", "GSFC", "nlp:binary data", "Data Servers Processing and Handling", "nlp:format", "nlp:data processing", "NASA", "nlp:software development tool", "nlp:computer systems program", "nlp:computer program", "nlp:document markup language"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "PARAMESH offers parallel support with adaptive mesh capability for a large class of models on distributed memory machines. This package of Fortran 90 subroutines provides an application developer with an easy route to extend an existing serial code using a logically Cartesian structured mesh into a parallel code with adaptive mesh refinement.", "identifier": "GSC-14626-1", "laborHours": 0, "name": "Parallel Adaptive Mesh Refinement Library (PARAMESH)", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/paramesh/index.php", "tags": ["Open Source", "nlp:fortran", "nlp:coding", "GSFC", "nlp:subroutine", "Design and Integration Tools", "nlp:cartesian coordinate", "nlp:library", "NASA", "nlp:mathematical model", "nlp:computational grid", "nlp:applications programs (computers)", "nlp:memory (computers)", "nlp:computer program"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "TIPSOD is a software application designed for interactive, animated, 4D (space and time) visualization of satellite orbits. The technology is implemented in Java 3D and is an extension to the existing Satellite Situation Center Web (SSCWeb) 2D static orbit graphics. Please visit the following URL for additional information: http://opensource.gsfc.nasa.gov/projects/tipsod/index.php", "identifier": "GSC-14732-1", "laborHours": 0, "name": "Tool For Interactive Plotting, Sonification, and 3D Orbit Display (TIPSOD)", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/tipsod/index.php", "tags": ["Open Source", "nlp:technology utilization", "nlp:satellite orbit", "nlp:real time operation", "GSFC", "nlp:scientific visualization", "nlp:computer graphic", "Data and Image Processing", "NASA", "nlp:computer program", "nlp:software development tool", "nlp:java (programming language)", "nlp:graphical user interface", "nlp:display device"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "The MATLAB-Zemax toolkit is a set of MATLAB scripts and functions that enable rapid transfer of optical system and performance data from Zemax optical software into the MATLAB environment. Typical applications include: extracting prescription data into MATLAB to confirm consistency of various delivered models; perturbing the models and performing various analyses in support of integrated modeling activities; and enabling a MATLAB-driven optical model for integrated system-level modeling of wavefront sensing and control. The toolkit can be downloaded at: http://opensource.gsfc.nasa.gov/projects/Matlab_Zemax/index.php", "identifier": "GSC-15151-1", "laborHours": 0, "name": "MATLAB-Zemax Toolkit", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.gsfc.nasa.gov/projects/Matlab_Zemax/matlab_zemax.doc", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/Matlab_Zemax/index.php", "tags": ["Open Source", "nlp:performance prediction", "GSFC", "nlp:remote sensing", "Data and Image Processing", "nlp:systems analysi", "NASA", "nlp:software engineering", "nlp:software development tool", "nlp:computer systems program", "nlp:mathematical model", "nlp:applications programs (computers)", "nlp:model", "nlp:computer program"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "ALIAS supports radiometric and geometric multispectral image processing for the Advanced Land Imager (ALI) instrument onboard NASA's Earth Observing-1 (EO-1) satellite. The radiometric subsystem characterizes and (where possible) corrects: detector operability; gain; bias; coherent, impulse, and random noise; signal-to-noise ratios; saturation levels; striping and banding; and the stability of detector performance. Geometric processing functions support sensor alignment calibrations; sensor chip assembly alignments; modulation transfer function characterizations; image-to-image characterizations; and geodetic accuracy assessments. Please visit the following URL for more information: http://opensource.gsfc.nasa.gov/projects/Alias/index.php", "identifier": "GSC-15185-1", "laborHours": 0, "name": "Advanced Land Image Assessment System (ALIAS)", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.gsfc.nasa.gov/projects/Alias/ALIAS_NOSA.doc", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/Alias/", "tags": ["Open Source", "nlp:modulation transfer function", "nlp:earth observing system (eos)", "nlp:radiometric correction", "GSFC", "nlp:satellite-borne instrument", "nlp:characterization", "Environmental Science (Earth, Air, Space, Exoplanet)", "NASA", "nlp:satellite instrument", "nlp:imagery", "nlp:landsat satellite", "nlp:calibrating", "nlp:measuring instrument"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "The CDAWeb software and the CDAWeb service built on this software have been developed and continue to be enhanced and maintained by the Space Physics Data Facility. The technology has supported NASA/Office of Space Science programs dealing with the connections between the Sun and the Earth. CDAWeb software is essentially a set of Interactive Data Language (IDL) scripts that act as the engine of the system. Please visit: http://cdaweb.gsfc.nasa.gov/cdaweb/istp_public/", "identifier": "GSC-14292-1", "laborHours": 0, "name": "Coordinated Data Analysis Workshop Web (CDAWeb)", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://cdaweb.gsfc.nasa.gov/about.html", "tags": ["Open Source", "nlp:nasa space program", "nlp:data system", "GSFC", "Data Servers Processing and Handling", "nlp:software engineering", "nlp:solar terrestrial interaction", "NASA", "nlp:nasa program", "nlp:conference", "nlp:computer systems program", "nlp:aerospace science", "nlp:computer program", "nlp:earth science"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "The Earth Observing System Clearing House (ECHO) affords the earth science community more flexibility in accessing and sharing data and services. As a metadata clearinghouse, ECHO supports iterative query data access. As a service broker, ECHO decentralizes data-manipulation tools and supports the interoperability of distributed functions. For more information, please visit: http://ti.arc.nasa.gov/opensource/projects/echo/", "identifier": "GSC-14726-1", "laborHours": 0, "name": "Earth Observing System (EOS) Clearing House (ECHO)", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://www.example.com", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://api.echo.nasa.gov/legacy-services/apis.html", "tags": ["Open Source", "nlp:earth observing system (eos)", "nlp:data system", "nlp:query language", "nlp:information management", "GSFC", "Data Servers Processing and Handling", "nlp:data processing", "nlp:data reduction", "NASA", "nlp:data management", "nlp:data structure", "nlp:information system", "nlp:data base management system"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "These Web services provide a distributed programming interface to a portion of the Space Physics Data Facility (SPDF) software. The technology conforms to all applicable Web service specifications of the World Wide Web Consortium. Please visit the following URL for additional information: http://spdf.gsfc.nasa.gov/", "identifier": "GSC-14730-1", "laborHours": 0, "name": "Space Physics Data Facility (SPDF) Web Services", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "ftp://spdf.gsfc.nasa.gov/", "tags": ["Open Source", "nlp:specification", "nlp:data system", "nlp:human-computer interface", "GSFC", "nlp:world wide web", "nlp:interface", "nlp:software engineering", "Environmental Science (Earth, Air, Space, Exoplanet)", "NASA", "nlp:computer systems program", "nlp:information system", "nlp:computer program", "nlp:computer programming"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "The WindowsEQFlux computer program converts solar-cell damage resulting from hard-particle radiation into the equivalent fluence on MeV electrons. Please visit the following URL for more information: http://opensource.gsfc.nasa.gov/projects/eqflux/index.php", "identifier": "GSC-14791-1", "laborHours": 0, "name": "General EQFlux", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/eqflux/index.php", "tags": ["Open Source", "nlp:electron", "nlp:radiation measurement", "GSFC", "nlp:damage", "nlp:radiation belt", "nlp:radiation damage", "Environmental Science (Earth, Air, Space, Exoplanet)", "NASA", "nlp:computer technique", "nlp:solar cell", "nlp:computer program", "nlp:radiation effect", "nlp:electron radiation"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "The Earth Observing System Data Gateway (EDG) provides the earth science community with a single interface that will search for data granules from distributed data archives. The innovation enables users to explore, discover, and order available data from geographically distributed providers. For more information, please visit: http://opensource.gsfc.nasa.gov/projects/edg/index.php#software", "identifier": "GSC-14938-1", "laborHours": 0, "name": "Earth Observing System (EOS) Data Gateway (EDG)", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/edg/index.php", "tags": ["Open Source", "nlp:earth observing system (eos)", "nlp:data system", "nlp:data base", "GSFC", "Data Servers Processing and Handling", "nlp:data processing", "nlp:data reduction", "nlp:user requirement", "NASA", "nlp:data management", "nlp:information system", "nlp:data transmission", "nlp:data acquisition"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "S4PM is a set of Perl scripts that implement a data-driven processing system that executes science algorithms automatically as new data arrive. S4PM includes a graphical user interface for monitoring algorithms and the overall system for failures. The Perl scripts can currently process data from the Moderate Resolution Imaging Spectroradiometer and the Atmospheric Infrared Sounder, but the technology can be extended to process data from other missions if desired. Please visit the following URL for more information: http://opensource.gsfc.nasa.gov/projects/s4pm/", "identifier": "GSC-14841-1", "laborHours": 0, "name": "Simple, Scalable, Script-Based Science Processor for Missions (S4PM)", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://sourceforge.net/projects/s4pm", "tags": ["Open Source", "nlp:data system", "nlp:algorithm", "GSFC", "nlp:data processing", "nlp:data processing equipment", "nlp:user requirement", "NASA", "nlp:data management", "Autonomous Systems", "nlp:distributed processing", "nlp:information system", "nlp:graphical user interface", "nlp:imaging technique"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "This software program takes an XML representation of the contents of a Hierarchical Data Format-Earth Observing System (HDF-EOS) file and recreates the file from that description. Please visit the following URL for additional information: http://opensource.gsfc.nasa.gov/projects/xml2he/index.php", "identifier": "GSC-15017-1", "laborHours": 0, "name": "XML to HDF-EOS Convertor", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.gsfc.nasa.gov/projects/xml2he/xml2he_NOSA_1.3O.rtf", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/xml2he/index.php", "tags": ["Open Source", "nlp:earth observing system (eos)", "nlp:data system", "GSFC", "nlp:format", "Data and Image Processing", "nlp:software engineering", "NASA", "nlp:data management", "nlp:software development tool", "nlp:computer systems program", "nlp:information system", "nlp:applications programs (computers)", "nlp:computer program"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "This Java-language software plug-in to HDFView provides an interface for two versions of hierarchical data formats (HDF 4 and HDF 5). Please visit the following URL for more information: http://opensource.gsfc.nasa.gov/projects/HDF/index.php", "identifier": "GSC-14948-1", "laborHours": 0, "name": "HDFView Plugin", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.gsfc.nasa.gov/projects/HDF/HDFNOSA.rtf", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/HDF/index.php", "tags": ["Open Source", "nlp:high level language", "GSFC", "nlp:interface", "nlp:format", "nlp:software engineering", "Environmental Science (Earth, Air, Space, Exoplanet)", "NASA", "nlp:computer program", "nlp:computer systems program", "nlp:information system", "nlp:java (programming language)", "nlp:machine oriented language", "nlp:computer programming"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "NASA.rb (formerly fUnit) is a collection of Fortran modules that provide a framework for automating the construction, execution, and reporting of unit tests for Fortran software applications. Support is provided for several aspects of unit testing that are peculiar to scientific technical computing including distributing jparallel applications and parameterized behavior.", "identifier": "GSC-15137-1", "laborHours": 0, "name": "NASA.rb (formerly fUnit)", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.gsfc.nasa.gov/projects/FUNIT/SUA%20Open%20Source%20FUNIT%20GSC15137.doc", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/FUNIT/", "tags": ["Open Source", "nlp:fortran", "GSFC", "Design and Integration Tools", "nlp:module", "nlp:software engineering", "nlp:program verification (computers)", "NASA", "nlp:software development tool", "nlp:computer", "nlp:applications programs (computers)", "nlp:computer program", "nlp:construction", "nlp:computer programming"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "NFMW reads weather forecast models outputs; subsets the data to the region of interest; interpolates the data to the specified size; generates a visualization of the data using colors, contour lines, or arrows; and sends the visualization to the client. More information can be found at: http://opensource.gsfc.nasa.gov/projects/NFMW/", "identifier": "GSC-15276-1", "laborHours": 0, "name": "NASA Forecast Model Web (NFMW) Map Service", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.gsfc.nasa.gov/projects/NFMW/nfmw_nosa.doc", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/NFMW/index.php", "tags": ["Open Source", "nlp:on-line system", "nlp:mapping", "nlp:contour", "GSFC", "nlp:scientific visualization", "Environmental Science (Earth, Air, Space, Exoplanet)", "NASA", "nlp:weather forecasting", "nlp:atmospheric model", "nlp:relief map", "nlp:map", "nlp:meteorological service", "nlp:meteorological chart"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "This toolkit is a set of MATLAB scripts and functions that enable rapid transfer of optical system and performance data from Oslo optical software into the MATLAB environment. Typical applications include: extracting prescription data into MATLAB to confirm consistency of various delivered models; perturbing the models and performing various analyses in support of integrated modeling activities; and enabling a MATLAB-driven optical model for integrated system-level modeling of wavefront sensing and control. The toolkit can be downloaded at http://opensource.gsfc.nasa.gov/projects/Matlab/index.php", "identifier": "GSC-15138-1", "laborHours": 0, "name": "MATLAB-Oslo Toolkit", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.gsfc.nasa.gov/projects/Matlab/Matlab_nosa.doc", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/Matlab/index.php", "tags": ["Open Source", "nlp:performance prediction", "GSFC", "nlp:remote sensing", "Data and Image Processing", "nlp:systems analysi", "NASA", "nlp:software engineering", "nlp:software development tool", "nlp:computer systems program", "nlp:mathematical model", "nlp:applications programs (computers)", "nlp:model", "nlp:computer program"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "The User-friendly Metadata (UFM) tool functions as a filter. The tool accepts an ODL file as input and generates a simple HTML representation of the ODL as output. Command-line options provide a user with the ability to modify the program's functionality. Please visit: http://opensource.gsfc.nasa.gov/projects/UFM/index.php", "identifier": "GSC-15014-1", "laborHours": 0, "name": "User-Friendly Metadata", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.gsfc.nasa.gov/projects/UFM/User%20Friendly%20Metadata", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/UFM/index.php", "tags": ["Open Source", "nlp:on-line system", "nlp:file maintenance (computers)", "nlp:on-line programming", "GSFC", "Data Servers Processing and Handling", "nlp:input/output routine", "NASA", "nlp:software development tool", "nlp:electronic filter", "nlp:filter", "nlp:user manuals (computer programs)", "nlp:computer program", "nlp:document markup language"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "This software allows generators of HDF-EOS data products to encode product requirement specifications in XML. The tool will then mechanically check product files against those requirements. For more information, please visit: http://opensource.gsfc.nasa.gov/projects/Validator/index.php", "identifier": "GSC-15015-1", "laborHours": 0, "name": "HDF-EOS5 Validator", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.gsfc.nasa.gov/projects/Validator/validator_NOSA_1.3.rtf", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/Validator/index.php", "tags": ["Open Source", "nlp:specification", "GSFC", "Data Servers Processing and Handling", "nlp:software engineering", "NASA", "nlp:data management", "nlp:software development tool", "nlp:computer systems program", "nlp:information system", "nlp:computer program", "nlp:document markup language", "nlp:management information system", "nlp:computer programming"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "HDF-EOS Metadata Updater (HEMU) enables users to modify metadata inside an HDF-EOS file (either HDF-EOS2 and HDF-EOS5). The tool can be used to extract metadata from a dataset to a text file that can then be modified with any text editor; replace metadata with text from an external file; or update metadata with text from an external file. For more information, please visit: http://opensource.gsfc.nasa.gov/projects/hemu/index.php", "identifier": "GSC-15010-1", "laborHours": 0, "name": "Hierarchical Data Format Earth Observing System (HDF-EOS) Metadata Updater (HEMU)", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.gsfc.nasa.gov/projects/hemu/hemu_NOSA_1.3.rtf", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/hemu/index.php", "tags": ["Open Source", "nlp:file maintenance (computers)", "nlp:data base", "nlp:earth observing system (eos)", "GSFC", "Data Servers Processing and Handling", "nlp:format", "nlp:data processing", "nlp:user requirement", "NASA", "nlp:data management", "nlp:information system", "nlp:text", "nlp:information retrieval"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "An XML standard has been developed for the HDF-EOS5 file format using document-type definitions and schemas. Users can transform HDF5 files into XML format and vice versa. For more information, please visit: http://opensource.gsfc.nasa.gov/projects/XML_DTD_Schemas/index.php", "identifier": "GSC-15016-1", "laborHours": 0, "name": "Hierarchical Data Format Earth Observing System (HDF-EOS) XML Document-Type Definitions and Schemas", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.gsfc.nasa.gov/projects/XML_DTD_Schemas/XML_DTD_Schemas_NOSA_1.3.rtf", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/XML_DTD_Schemas/index.php", "tags": ["Open Source", "nlp:data base", "nlp:data system", "nlp:information management", "GSFC", "Data Servers Processing and Handling", "nlp:format", "nlp:user requirement", "nlp:systems analysi", "NASA", "nlp:data management", "nlp:information system", "nlp:standard", "nlp:information retrieval"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "This shell script chains together existing data usability group tools to: extract ODL metadata from an HDF-EOS file; convert the metadata to XML; reformat the XML into HTML; publish the HTML and the original HDF-EOS file to a Web server and an OPeNDAP server; and reformat the XML and submit it to the Earth Observing System Clearing House (ECHO). For more information, please visit: http://opensource.gsfc.nasa.gov/projects/heserve/index.php", "identifier": "GSC-15011-1", "laborHours": 0, "name": "Hierarchical Data Format Earth Observing System (HDF-EOS) Web Server", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.gsfc.nasa.gov/projects/heserve/heserve_NOSA_1.3.rtf", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/heserve/index.php", "tags": ["Open Source", "nlp:earth observing system (eos)", "nlp:data system", "nlp:file maintenance (computers)", "nlp:data base", "GSFC", "Data Servers Processing and Handling", "nlp:format", "nlp:data processing", "NASA", "nlp:data management", "nlp:information system", "nlp:document markup language", "nlp:data acquisition"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "This command-line Java-based utility converts ODL Hierarchical Data Format-Earth Observing Satellite (HDFEOS) metadata file to an HDFEOS XML file. The tool utilizes an all-Java ODL library that includes a syntax and grammar parser. The software can be downloaded at: http://opensource.gsfc.nasa.gov/projects/ODL_XML/index.php", "identifier": "GSC-15013-1", "laborHours": 0, "name": "ODL-to-XML Converter", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.gsfc.nasa.gov/projects/ODL_XML/ODL_2_XML_NOSA_1.3.rtf", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/ODL_XML/index.php", "tags": ["Open Source", "nlp:earth observing system (eos)", "nlp:syntax", "GSFC", "nlp:format", "Data and Image Processing", "nlp:library", "NASA", "nlp:data management", "nlp:software development tool", "nlp:computer program", "nlp:software engineering", "nlp:java (programming language)", "nlp:document markup language"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "This C-language computer program accepts a set of scientific data/metadata from an Earth Observing System (EOS) satellite and converts it from the format in which it was created and delivered into another format for data processing and exchange on Earth. The converter can be downloaded at: http://www.hdfeos.org/software/convert_hdfeos5.php", "identifier": "GSC-15007-1", "laborHours": 0, "name": "Hierarchical Data Format-Earth Observing System (HDF-EOS) to NetCDF Converter", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.gsfc.nasa.gov/projects/hdfeos2netcdf/hdfeos2netcdf_NOSA_1.3.rtf", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/hdfeos2netcdf/index.php", "tags": ["Open Source", "nlp:earth observing system (eos)", "nlp:data system", "GSFC", "nlp:data processing", "Data and Image Processing", "nlp:format", "NASA", "nlp:data management", "nlp:data processing equipment", "nlp:computer systems design", "nlp:computer systems program", "nlp:data transfer (computers)", "nlp:computer program"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "Designed to support a prototype validation network for the Global Precipitation Measurement (GPM) spaceflight mission, this space and ground radar comparison software collects data from the Precipitation Radar instrument flying on the Tropical Rainfall Measuring Mission (TRMM) spacecraft. Please visit the following URL for additional information: http://opensource.gsfc.nasa.gov/projects/GPM/", "identifier": "GSC-15469-1", "laborHours": 0, "name": "Global Precipitation Space and Ground Radar Comparison Software", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.gsfc.nasa.gov/projects/GPM/GPM_NOSA.doc", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/GPM/index.php", "tags": ["Open Source", "GSFC", "nlp:ground truth", "Environmental Science (Earth, Air, Space, Exoplanet)", "NASA", "nlp:spacecraft instrument", "nlp:meteorological radar", "nlp:ground based control", "nlp:radar data", "nlp:proving", "nlp:precipitation (meteorology)", "nlp:measuring instrument", "nlp:rain", "nlp:trmm satellite"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "GEOS-5 is a next-generation circulation model. Developed using the Earth System Modeling Framework (ESMF) for its internal architecture, the technology represents a new paradigm for systems development. Please visit the following URL for more information: http://opensource.gsfc.nasa.gov/projects/GEOS-5/", "identifier": "GSC-15354-1", "laborHours": 0, "name": "GEOS-5 Global Change Master Modeling Software", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.gsfc.nasa.gov/projects/GEOS-5/GEOS-5_NOSA.doc", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/GEOS-5/", "tags": ["Open Source", "GSFC", "nlp:architecture (computers)", "nlp:dynamic model", "nlp:software engineering", "Environmental Science (Earth, Air, Space, Exoplanet)", "NASA", "nlp:software development tool", "nlp:atmospheric model", "nlp:computer systems program", "nlp:mathematical model", "nlp:information system", "nlp:computer program", "nlp:computer programming"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "This toolkit is a set of MATLAB scripts and functions that enable rapid transfer of optical system and performance data from Code V optical software into the MATLAB environment. Typical applications include: extracting prescription data into MATLAB to confirm consistency of various delivered models; perturbing the models and performing various analyses such as ray tracing or generation of point-spread functions in support of integrated modeling activities; and enabling a MATLAB-driven optical model for integrated system-level modeling of wavefront sensing and control. The toolkit can be downloaded at: http://opensource.gsfc.nasa.gov/projects/Matlab_Code_V/index.php", "identifier": "GSC-15140-1", "laborHours": 0, "name": "MATLAB-Code V Toolkit", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.gsfc.nasa.gov/projects/Matlab_Code_V/matlab_code_v_nosa.doc", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/Matlab_Code_V/index.php", "tags": ["Open Source", "GSFC", "nlp:computerized simulation", "Data and Image Processing", "nlp:software engineering", "NASA", "nlp:systems analysi", "nlp:software development tool", "nlp:ray tracing", "nlp:computer systems program", "nlp:mathematical model", "nlp:applications programs (computers)", "nlp:model", "nlp:computer program"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "This program translates an XML representation of Hierarchical Data Format-Earth Observing System (HDF-EOS) ODL metadata back to the ODL format. Please visit the following URL for additional information: http://opensource.gsfc.nasa.gov/projects/xml2odl/index.php", "identifier": "GSC-15006-1", "laborHours": 0, "name": "XML to ODL Convertor", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.gsfc.nasa.gov/projects/xml2odl/xml2odl_NOSA_1.3.rtf", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/xml2odl/index.php", "tags": ["Open Source", "nlp:earth observing system (eos)", "nlp:data system", "nlp:information management", "GSFC", "nlp:format", "Data and Image Processing", "nlp:systems analysi", "NASA", "nlp:data processing", "nlp:data management", "nlp:information system", "nlp:earth (planet)", "nlp:computer program"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "GMAT is a software system for trajectory optimization, mission analysis, trajectory estimation, and prediction. Analysts use GMAT to design spacecraft trajectories, optimize maneuvers, perform orbit determination, visualize and communicate mission parameters, and understand a mission&apos;s trade space. GMAT contains models of real-world objects such as spacecraft and thrusters, as well as analysis \"objects\" such as plots and reports. These objects are used in the mission sequence wherein the user employs commands supported by the system to model missions and perform estimation. Please visit the following URL for additional information: http://opensource.gsfc.nasa.gov/projects/GMAT/index.php", "identifier": "GSC-16228-1", "laborHours": 0, "name": "General Mission Analysis Tool (GMAT), Version 2011A", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://sourceforge.net/p/gmat/git/ci/GMAT-R2016a/tree/License.txt", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://sourceforge.net/projects/gmat/files/GMAT/GMAT-R2011a", "tags": ["Open Source", "nlp:spacecraft trajectory", "nlp:orbit calculation", "GSFC", "nlp:trajectory analysi", "nlp:trajectory optimization", "Design and Integration Tools", "nlp:spacecraft maneuver", "nlp:space flight", "nlp:spacecraft orbit", "NASA", "nlp:software development tool", "nlp:mission planning", "nlp:computer program"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2015-02-05"}, "description": "The ut-assert unit test tools provide a unit test framework and a collection of utilities that are designed to facilitate unit testing. These tools implement an assertion-based testing philosophy that requires the developer to explicitly write verification statements that assert whether a condition is true or false.  This approach is much different than the Flight Software Branch's historical approach to unit testing that creates a log file that requires developer analysis in order to determine whether a test passed or failed. In order to use the tools a developer populates the framework with their unit tests and links with the ut-asssert library to create an executable. ", "identifier": "GSC-16689-1", "laborHours": 0, "name": "Assert-Based Unit Test Tools", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.gsfc.nasa.gov/projects/ut-assert/ut-assert_nosa.pdf", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/ut-assert/index.php", "tags": ["Open Source", "GSFC", "nlp:evaluation", "Design and Integration Tools", "nlp:program verification (computers)", "nlp:flight test", "NASA", "nlp:software engineering", "nlp:software development tool", "nlp:computer systems program", "nlp:computer program", "nlp:electronic equipment test", "nlp:performance test", "nlp:computer programming"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2015-02-05"}, "description": "This software interface provides a social and collaborative environment to allow end-users such as GEOSS users to discover, visualize, and access Earth Science information on demand from simple browsers and allow them to share the resulting products with their friends and/or Community of Interest through social networks.", "identifier": "GSC-17162-1", "laborHours": 0, "name": "Open GeoSocial Consumer Application", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.gsfc.nasa.gov/projects/gsca/apache_license.pdf", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/gsca/index.php", "tags": ["Open Source", "nlp:human-computer interface", "GSFC", "Data Servers Processing and Handling", "nlp:interface", "nlp:software engineering", "nlp:computer network", "NASA", "nlp:user requirement", "nlp:computer systems program", "nlp:information system", "nlp:applications programs (computers)", "nlp:computer program", "nlp:earth science"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "The SBN serves as a plug-in to the cFE framework to transfer messages across process/processor interfaces. The technology has three primary functions: to establish and maintain a connection to each peer over available process/processor interfaces; to distribute and maintain a subscription message database for each peer; and to distribute messages to peers that have subscribed to message identifiers.", "identifier": "GSC-16917-1", "laborHours": 0, "name": "Core Flight System (CFS) Software Bus Network (SBN) Application, Version 1.0", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://sourceforge.net/projects/cfs-sbn", "tags": ["Open Source", "nlp:data base", "Vehicle Management (Space/Air/Ground)", "GSFC", "nlp:network", "nlp:data processing equipment", "nlp:software engineering", "nlp:computer network", "NASA", "nlp:distributed processing", "nlp:computer systems program", "nlp:channels (data transmission)", "nlp:applications programs (computers)", "nlp:computer program"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2015-02-05"}, "description": "This capability allows for the generation of vectors by reading the Global Flood Monitoring data, processing the data and generating aTopoJSON encoded file for visualization on the web.", "identifier": "GSC-17169-1", "laborHours": 0, "name": "Vectorization of Global Flood Monitoring System using Topojson", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.gsfc.nasa.gov/projects/vgfms/apache_license.pdf", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/vgfms/index.php", "tags": ["Open Source", "nlp:data system", "GSFC", "nlp:scientific visualization", "nlp:vector analysi", "nlp:world wide web", "nlp:data processing", "Data and Image Processing", "NASA", "nlp:vectors (mathematics)", "nlp:data management", "nlp:monitor", "nlp:flood", "nlp:data acquisition"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "The CFDP application provides the capability to transmit and receive files to/from the ground. Tables are used to allow flexibility in specifying directory priorities and configurations.", "identifier": "GSC-16125-1", "laborHours": 0, "name": "Core Flight System (CFS) CFDP Version 2", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://sourceforge.net/projects/cfs-cfdp", "tags": ["Open Source", "nlp:file maintenance (computers)", "nlp:ground test", "nlp:aircraft configuration", "Vehicle Management (Space/Air/Ground)", "GSFC", "nlp:flight control", "nlp:flexibility", "nlp:automatic flight control", "nlp:flight test", "NASA", "nlp:systems engineering", "nlp:ground based control", "nlp:applications programs (computers)"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "Checksum (CS) is one of the reusable applications that make up the Core Flight System (CFS). The technology performs memory integrity management by verifying the contents of critical flight memory regions. Unexpected changes in memory (i.e., due to an SEU) are reported to ground operators.", "identifier": "GSC-15996-1", "laborHours": 0, "name": "Core Flight System (CFS) Checksum Application Version 2", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://sourceforge.net/projects/cfs-cs", "tags": ["Open Source", "nlp:technology utilization", "Vehicle Management (Space/Air/Ground)", "GSFC", "nlp:computer storage device", "NASA", "nlp:management system", "nlp:memory (computers)", "nlp:magnetic core"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "The DS application provides the ability to store data (i.e., messages) into files. Tables are used to provide the flexibility for specifying messages.", "identifier": "GSC-16126-1", "laborHours": 0, "name": "Core Flight System (CFS) Data Storage (DS) Application Version 2", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://sourceforge.net/projects/cfs-ds", "tags": ["Open Source", "nlp:message", "nlp:data system", "Vehicle Management (Space/Air/Ground)", "GSFC", "nlp:tables (data)", "nlp:data processing equipment", "nlp:data processing", "nlp:computer storage device", "NASA", "nlp:data management", "nlp:digital data", "nlp:message processing", "nlp:data storage"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "The CFS Housekeeping application provides the ability to organize data from various packets into new packets in order to best utilize the telemetry bandwidth available for a mission.", "identifier": "GSC-16127-1", "laborHours": 0, "name": "Core Flight System (CFS) Housekeeping (HK) Application Version 2", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://sourceforge.net/projects/cfs-hk", "tags": ["Open Source", "nlp:space mission", "Vehicle Management (Space/Air/Ground)", "GSFC", "nlp:data processing", "nlp:data reduction", "nlp:flight test", "NASA", "nlp:bandwidth", "nlp:radio telemetry", "nlp:data transmission", "nlp:telemetry", "nlp:biotelemetry", "nlp:packets (communication)"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "FM provides the user commands to perform the following operations: copy file, move file, rename file, delete file(s), close file, concatenate file, decompress file, delete directory contents, create directory, remove directory, obtain file information, obtain open file listing, and obtain directory listings.", "identifier": "GSC-16007-1", "laborHours": 0, "name": "Core Flight System (CFS) File Manager (FM) Application Version 2", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://sourceforge.net/projects/cfs-fm", "tags": ["Open Source", "nlp:systems management", "nlp:information management", "Vehicle Management (Space/Air/Ground)", "GSFC", "nlp:command and control", "nlp:user requirement", "nlp:information", "NASA", "nlp:systems engineering", "nlp:information system", "nlp:applications programs (computers)", "nlp:information retrieval", "nlp:user manuals (computer programs)"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "The Memory Dwell application telemeters the contents of table-defined addresses at a table-defined dwell rate. Addresses can be processed using symbols if the target processor/operating system includes symbols.", "identifier": "GSC-16012-1", "laborHours": 0, "name": "Core Flight System (CFS) Memory Dwell Application Version 2", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://sourceforge.net/projects/cfs-md", "tags": ["Open Source", "nlp:symbol", "nlp:target acquisition", "Vehicle Management (Space/Air/Ground)", "GSFC", "nlp:computer component", "nlp:operating systems (computers)", "nlp:data processing equipment", "nlp:computer storage device", "NASA", "nlp:magnetic storage", "nlp:data storage", "nlp:memory (computers)", "nlp:central processing unit"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "The Limit Checker (LC) application is responsible for monitoring telemetry values.", "identifier": "GSC-16010-1", "laborHours": 0, "name": "Core Flight System (CFS) Limit Checker (LC) Application Version 2", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://sourceforge.net/projects/cfs-lc", "tags": ["Open Source", "nlp:computation", "Vehicle Management (Space/Air/Ground)", "GSFC", "nlp:systems analysi", "NASA", "nlp:systems engineering", "nlp:telemetry", "nlp:biotelemetry"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "The plug-and-play CFS Health and Safety application is compatible with the Core Flight Executive (cFE) and uses the Operating System Abstraction Layer (OSAL), both of which were developed by Goddard Space Flight Center in order to provide a reusable, platform-independent, mission-independent, layered architecture for hosting applications. The technology can be used for any government or commercial spacecraft. Please visit the following URL for additional information: http://sourceforge.net/projects/coreflightexec/files/cFE-6.1.1/", "identifier": "GSC-16151-1", "laborHours": 0, "name": "Core Flight System (CFS) Health and Safety Application Version 2", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://sourceforge.net/projects/cfs-hs", "tags": ["Open Source", "nlp:technology utilization", "nlp:space mission", "Vehicle Management (Space/Air/Ground)", "GSFC", "nlp:manned space flight", "nlp:architecture (computers)", "nlp:space flight", "NASA", "nlp:systems engineering", "nlp:aerospace engineering", "nlp:information system", "nlp:systems health monitoring", "nlp:applications programs (computers)"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "The CFS SC application provides the ability to execute onboard absolute-time and relative-time command sequences. The technology offers a generic implementation that can be configured by a user to fit the needs of a specific mission.", "identifier": "GSC-16009-1", "laborHours": 0, "name": "Core Flight System (CFS) Stored Command (SC) Application Version 2", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://sourceforge.net/projects/cfs-sc", "tags": ["Open Source", "nlp:technology utilization", "nlp:real time operation", "nlp:space mission", "nlp:human-computer interface", "Vehicle Management (Space/Air/Ground)", "GSFC", "nlp:command and control", "nlp:user requirement", "NASA", "nlp:systems engineering", "nlp:mission planning", "nlp:sequencing", "nlp:applications programs (computers)"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "The Scheduler application uses a one-second major timeframe, which is divided into a designer-determined collection of equally divided minor timeframes. The technology is configurable and table-driven to provide greater flexibility.", "identifier": "GSC-16123-1", "laborHours": 0, "name": "Core Flight System (CFS) Scheduler Application Version 2", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://sourceforge.net/projects/cfs-sch", "tags": ["Open Source", "nlp:technology utilization", "nlp:avionic", "Vehicle Management (Space/Air/Ground)", "GSFC", "nlp:flight control", "nlp:flexibility", "nlp:automatic flight control", "nlp:flight test", "NASA", "nlp:systems engineering", "nlp:technology assessment", "nlp:applications programs (computers)", "nlp:data acquisition"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "ILIADS 3.0 provides the data management capabilities to access CxP-vetted lunar data sets from the LMMP-provided Data Portal and the LMMP-provided OnMoon lunar data product server. (LMMP stands for Lunar Mapping and Modeling Project.) It also provides specific quantitative analysis functions to meet the stated LMMP Level 3 functional and performance requirements specifications that were approved by the CxP.", "identifier": "GSC-16210-1", "laborHours": 0, "name": "Integrated Lunar Information Architecture for Decision Support (ILIADS), Version 3.0", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.gsfc.nasa.gov/projects/ILIADS/GSC-16210_NOSA.pdf", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/ILIADS/index.php", "tags": ["Open Source", "nlp:support system", "nlp:data system", "nlp:specification", "nlp:data base", "nlp:information management", "GSFC", "Design and Integration Tools", "nlp:architecture (computers)", "NASA", "nlp:data management", "nlp:data base management system", "nlp:decision making", "nlp:management information system"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "The Goddard Satellite Data Simulation Unit (SDSU) is a comprehensive unified system of multi-sensor satellite instrumental simulators. Skill of weather forecasting models can be evaluated in terms of satellite-observed multi-sensor radiance levels. Alternatively, the remote sensing community can more readily utilize atmospheric model simulations to develop and test their retrieval algorithms for application of Earth science.", "identifier": "GSC-15874-1", "laborHours": 0, "name": "Goddard Satellite Data Simulation Unit", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.gsfc.nasa.gov/projects/G-SDSU/G-SDSU_NOSA.pdf", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/G-SDSU/", "tags": ["Open Source", "nlp:algorithm", "GSFC", "Design and Integration Tools", "nlp:computerized simulation", "nlp:remote sensing", "nlp:simulation", "nlp:weather forecasting", "NASA", "nlp:satellite instrument", "nlp:atmospheric model", "nlp:forecasting", "nlp:remote sensor", "nlp:earth science"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "This technology is a front end to the Climate Model Output Rewriter (CMOR2) software package. The technology converts a variety of standard data formats (e.g., netcdf3, netcdf4, Grads control files, and MATLAB data files) to allow publication on the Earth System Grid Federation (ESGF) data node.", "identifier": "GSC-16848-1", "laborHours": 0, "name": "Obs4MIPS", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.gsfc.nasa.gov/projects/obs4mips/obs4MIPS_NOSA.pdf", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/obs4mips/index.php", "tags": ["Open Source", "nlp:file maintenance (computers)", "nlp:data system", "nlp:data base", "GSFC", "nlp:format", "nlp:data processing", "Environmental Science (Earth, Air, Space, Exoplanet)", "NASA", "nlp:data management", "nlp:data reduction", "nlp:computer systems program", "nlp:climate", "nlp:computer program"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "This software enables easy comparison of ground- and space-based radar observations for validation purposes. It can be accessed at: http://opensource.gsfc.nasa.gov/projects/GSRadar/", "identifier": "GSC-15738-1", "laborHours": 0, "name": "Ground and Space Radar Volume Matching and Comparison Software", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.gsfc.nasa.gov/projects/GSRadar/GS_Radar_NOSA.pdf", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/GSRadar/", "tags": ["Open Source", "GSFC", "nlp:radar transmission", "Data and Image Processing", "nlp:ground based control", "NASA", "nlp:software engineering", "nlp:radar tracking", "nlp:comparison", "nlp:software development tool", "nlp:radar data", "nlp:proving", "nlp:radar", "nlp:computer program"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "Based on MATLAB and Java, the flexible Orbit-Determination Toolbox is intended primarily for the advanced mission analysis that might be performed in the concept exploration, proposal, and early design phases. Visit the following URL for more information: http://opensource.gsfc.nasa.gov/projects/ODTBX/", "identifier": "GSC-15728-1", "laborHours": 0, "name": "Orbit-Determination Toolbox", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.gsfc.nasa.gov/projects/ODTBX/ODTBX_NOSA.pdf", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/ODTBX", "tags": ["Open Source", "nlp:orbit calculation", "nlp:satellite orbit", "nlp:space mission", "GSFC", "nlp:space exploration", "nlp:orbital mechanic", "Aeronautics", "NASA", "nlp:systems engineering", "nlp:spacecraft orbit", "nlp:mission planning", "nlp:java (programming language)", "nlp:design analysi"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "This version of HSEG is not subject to patent restrictions. Please visit the following URL for additional information: http://opensource.gsfc.nasa.gov/projects/HSEG/", "identifier": "GSC-15855-1", "laborHours": 0, "name": "Core Hierarchical Segmentation (HSEG) Software Package", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.gsfc.nasa.gov/projects/HSEG/HSEG_NOSA.pdf", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/HSEG/", "tags": ["Open Source", "GSFC", "nlp:computer programming", "Data and Image Processing", "nlp:core", "NASA", "nlp:software development tool", "nlp:computer systems program", "nlp:circuit", "nlp:applications programs (computers)", "nlp:reliability", "nlp:computer program", "nlp:information theory", "nlp:segment"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "ViSBARD provides a way of visualizing multiple vector and scalar quantities as measured by many spacecraft at once. The data are displayed three-dimensionally; may be displayed either as connected lines or as points; and allow the rapid determination of vector configurations, correlations between many measurements at multiple points, and global relationships. Please visit the following URL for additional information: http://opensource.gsfc.nasa.gov/projects/visbard/index.php", "identifier": "GSC-15744-1", "laborHours": 0, "name": "Visual System for Browsing, Analysis, and Retrieval of Data (ViSBARD)", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://sourceforge.net/projects/visbard/", "tags": ["Open Source", "nlp:on-line system", "nlp:data system", "GSFC", "nlp:vector analysi", "nlp:data processing", "Data and Image Processing", "nlp:data reduction", "NASA", "nlp:systems analysi", "nlp:digital data", "nlp:information system", "nlp:data retrieval", "nlp:correlation"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "This software performs lossless hyper-spectral and multi-spectral data compression. It can be downloaded at: http://opensource.gsfc.nasa.gov/projects/LHD/", "identifier": "GSC-15992-1", "laborHours": 0, "name": "Lossless Hyper-/Multi-Spectral Data Compression Software", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.gsfc.nasa.gov/projects/LHD/LHD_NOSA.pdf", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/LHD/", "tags": ["Open Source", "nlp:data system", "GSFC", "nlp:data flow analysi", "nlp:data processing", "Data and Image Processing", "nlp:software engineering", "NASA", "nlp:data reduction", "nlp:software development tool", "nlp:data sampling", "nlp:data compression", "nlp:computer systems program", "nlp:computer program"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "Simple, Scalable, Script-based, Science Processing (S4P) Archive (S4PA) is a disk-based archiving system for remote sensing data. The tool can be used for new data transfer, data preprocessing, metadata generation, and data archival. Services provided include data access control, data subscription, metadata publication, and data recovery. All data are archived on readily available disk drives, with FTP and HTTP being the primary modes of data access. S4PA includes a graphical user interface for monitoring and re-configuring system operation. Please visit: http://disc.sci.gsfc.nasa.gov/additional/techlab/s4pa", "identifier": "GSC-15877-1", "laborHours": 0, "name": "Simple, Scalable, Script-based Science Processing Archive (S4PA)", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://disc.gsfc.nasa.gov/additional/techlab/s4pa/S4PA-3.40.2.tar.gz", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://disc.sci.gsfc.nasa.gov/additional/techlab/s4pa", "tags": ["Open Source", "nlp:remote control", "nlp:data system", "nlp:human-computer interface", "GSFC", "Data Servers Processing and Handling", "nlp:remote sensing", "nlp:data processing", "nlp:access control", "NASA", "nlp:data management", "nlp:data processing equipment", "nlp:automatic control", "nlp:data acquisition"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2015-02-05"}, "description": "The General Mission Analysis Tool (GMAT) is the worlds only enterprise, multi-mission, open source software system for space mission design, optimization, and navigation. The system supports missions in flight regimes ranging from low Earth orbit to lunar, libration point, and deep space missions. GMAT is developed by a team of NASA, private industry, public, and private contributors and is used for real-world mission support, engineering studies, as a tool for education, and public engagement.\r\n\r\nGMAT contains models of real world objects such as spacecraft and thrusters, and analysis \"objects\" such as propagators, plots, and reports. These objects are used in a mission sequence in which the user employs commands supported by the system to model mission events and perform estimation.\r\n\r\nFor a complete list of new features, compatibility changes, and bug fixes, see the Release Notes.  Below are just some of the new capabilities contained in this release. \r\nProduction quality orbit determination (Operational Certification expected in November, 2016)\r\nCode 500 ephemeris propagator\r\nSTK ephemeris file output\r\nWrite command to save GMAT configurations during execution\r\nInclude macro to load GMAT configurations from external sources during execution\r\nMany new built in math functions and parameters\r\n130 pages of new user documentation\r\n", "identifier": "GSC-17177-1", "laborHours": 0, "name": "General Mission Analysis Tool (GMAT) v.R2016a", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://sourceforge.net/p/gmat/git/ci/GMAT-R2016a/tree/License.txt", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://sourceforge.net/projects/gmat/files/GMAT/GMAT-R2012a", "tags": ["Open Source", "nlp:parameterization", "GSFC", "Design and Integration Tools", "nlp:parameter identification", "nlp:systems analysi", "NASA", "nlp:systems engineering", "nlp:software development tool", "nlp:computer systems program", "nlp:applications programs (computers)", "nlp:space navigation", "nlp:computer program", "nlp:design analysi"]}, {"contact": {"email": "jpl_ott@jpl.nasa.gov"}, "date": {"metadataLastUpdated": "2016-11-10"}, "description": "HORIZON 5 is an extensible framework for data management systems. It is packaged with the following components SIP/AIP: The Open Archival Information System (OAIS) specification defines the framework for information capturing to information distribution. ", "identifier": "NPO-49540-1", "laborHours": 0, "name": "HORIZON 5 - Framework for distributed data management and product generation workflow", "organization": "JPL", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://software.nasa.gov/software/NPO-49540-1", "tags": ["Open Source", "nlp:specification", "nlp:data system", "nlp:information management", "NASA", "nlp:data management", "nlp:systems engineering", "nlp:management system", "nlp:information system", "nlp:data base management system", "Business Systems and Project Management", "nlp:information retrieval", "JPL", "nlp:management information system"]}, {"contact": {"email": "jpl_ott@jpl.nasa.gov"}, "date": {"metadataLastUpdated": "2016-11-10"}, "description": "The RedShift mobile app lets operations staff on the MSL project follow the operations schedule of tactical and strategic meetings. RedShift is an application for iOS and Android that presents the meeting agenda for MSL strategic and tactical meeting events that are a part of the operations workflow.", "identifier": "NPO-50256-1", "laborHours": 0, "name": "RedShift: mobile app for following the tactical and strategic operations meeting schedule", "organization": "JPL", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://software.nasa.gov/software/NPO-50256-1", "tags": ["Open Source", "nlp:project planning", "nlp:flight operation", "nlp:scheduling", "nlp:operations research", "nlp:schedule", "NASA", "nlp:conference", "nlp:systems engineering", "Business Systems and Project Management", "nlp:project management", "JPL", "nlp:red shift", "nlp:optimization"]}, {"contact": {"email": "jpl_ott@jpl.nasa.gov"}, "date": {"metadataLastUpdated": "2016-11-10"}, "description": "Implements the open webification API and provides ReSTful web services for planetary image data in commonly-used formats.  Exposes content of planetary image data through meaningful URLs and enables creation of applications on diverse platforms.", "identifier": "NPO-48378-1", "laborHours": 0, "name": "Juneberry Web Service Software", "organization": "JPL", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://software.nasa.gov/software/NPO-48378-1", "tags": ["Open Source", "Data Servers Processing and Handling", "nlp:image analysi", "nlp:software engineering", "nlp:data transmission", "NASA", "nlp:computer program", "nlp:software development tool", "nlp:imagery", "nlp:computer", "nlp:applications programs (computers)", "JPL", "nlp:image processing", "nlp:computer programming"]}, {"contact": {"email": "jpl_ott@jpl.nasa.gov"}, "date": {"metadataLastUpdated": "2016-11-10"}, "description": "JPL has provided the underlying infrastructure to share data increasing the study power associated with capturing and comparing information. The infrastructure provides software services including data processing and management (eCAS), biomarker data management (BMDB), specimen data management (ERNE), and a portal to link the system together and provide access. These are software built on top of the Apache OODT software services.", "identifier": "NPO-48644-1", "laborHours": 0, "name": "The EDRN Knowledge Environment", "organization": "JPL", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://software.nasa.gov/software/NPO-48644-1", "tags": ["Open Source", "nlp:data system", "nlp:information management", "Data Servers Processing and Handling", "nlp:data processing", "nlp:data processing equipment", "NASA", "nlp:data management", "nlp:computer systems program", "nlp:information system", "nlp:data base management system", "JPL", "nlp:data acquisition", "nlp:management information system"]}, {"contact": {"email": "jpl_ott@jpl.nasa.gov"}, "date": {"metadataLastUpdated": "2016-11-10"}, "description": "We have developed a machine learning solution called DEMUD (Discovery through Eigenbasis Modeling of Uninteresting Data). DEMUD works by building a model U of the uninteresting class and then identifying items that are maximally anomalous (and therefore likely to be interesting) with respect to that model.\r\n", "identifier": "NPO-48877-1", "laborHours": 0, "name": "DEMUD: Discovery through Eigenbasis Modeling of Uninteresting Data", "organization": "JPL", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/wkiri/DEMUD/blob/master/LICENSE", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/wkiri/DEMUD", "tags": ["Open Source", "Data Servers Processing and Handling", "nlp:dynamic model", "NASA", "nlp:atmospheric model", "nlp:mathematical model", "nlp:model", "JPL", "nlp:boundary layer"]}, {"contact": {"email": "jpl_ott@jpl.nasa.gov"}, "date": {"metadataLastUpdated": "2016-11-10"}, "description": "DTNTAP is a userspace Ethernet driver with the potential to expedite DTN deployment by providing a transition mechanism for legacy IP (Internet Protocol) applications to run alongside delay and disruption tolerant applications in large scale communication networks. By presenting an Ethernet-like interface, DTNTAP gives application developers access to many of the benefits of DTN without having to become immediately proficient at a new programming API.", "identifier": "NPO-48906-1", "laborHours": 0, "name": "DTNTAP", "organization": "JPL", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://software.nasa.gov/software/NPO-48906-1", "tags": ["Open Source", "nlp:telecommunication", "nlp:protocol (computers)", "nlp:communication network", "Data Servers Processing and Handling", "nlp:access control", "nlp:computer network", "NASA", "nlp:data transmission", "nlp:local area network", "JPL", "nlp:internet", "nlp:interprocessor communication", "nlp:deployment"]}, {"contact": {"email": "jpl_ott@jpl.nasa.gov"}, "date": {"metadataLastUpdated": "2016-11-10"}, "description": "Unlike all Internet mechanisms for security distribution (e.g., certificate authorities), DTKA operates over the extremely long signal propagation times and interrupted links that characterize communication with interplanetary spacecraft. It has no single point of failure and cannot be \"spoofed\" by an attacker's subversion of any single key authority machine (or even two key authority machines, in most configurations.  ", "identifier": "NPO-49413-1", "laborHours": 0, "name": "DTKA, a Prototype Implementation of Delay-Tolerant Security Key Distribution", "organization": "JPL", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://software.nasa.gov/software/NPO-49413-1", "tags": ["Open Source", "nlp:time lag", "nlp:failure", "nlp:spacecraft communication", "nlp:telecommunication", "nlp:delay", "Data Servers Processing and Handling", "nlp:data transmission", "NASA", "nlp:time signal", "nlp:failure analysi", "nlp:data link", "JPL", "nlp:prototype"]}, {"contact": {"email": "jpl_ott@jpl.nasa.gov"}, "date": {"metadataLastUpdated": "2016-11-10"}, "description": "Juneplum is implemented as a Java servlet webapp and can be directly deployed into the same servlet engine that Hyrax frontend lives in. With Juneplum, any data product served by OPeNDAP is made simultaneously accessible in a fully ReSTful way.", "identifier": "NPO-49868-1", "laborHours": 0, "name": "Juneplum - ReSTful Web Access of OPeNDAP Hyrax Back End Server", "organization": "JPL", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://software.nasa.gov/software/NPO-49868-1", "tags": ["Open Source", "nlp:engine test", "nlp:java (programming language)", "Data Servers Processing and Handling", "nlp:tables (data)", "nlp:access control", "nlp:data reduction", "nlp:aircraft engine", "NASA", "nlp:data transmission", "nlp:engine design", "nlp:product development", "JPL", "nlp:data acquisition"]}, {"contact": {"email": "jpl_ott@jpl.nasa.gov"}, "date": {"metadataLastUpdated": "2016-11-10"}, "description": "EDGE uses Apache Solr for fast indexed search backend.  Inventory data stored in PO.DAAC's Oracle server is being incrementally indexed avery 15 minutes.  Apache Solr provides optimal search solution to all data it managements.  By offloading data from Oracle, this eliminates Denial of Service (DoS) attacks against the core data management backend.  To further ensure reliable serving of data, EDGE's Apache Solr uses Master and Slave model.  The Master instance is for data indexing.  ", "identifier": "NPO-49884-1", "laborHours": 0, "name": "EDGE - The Extensible Data Gateway Environment", "organization": "JPL", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/dataplumber/edge/blob/master/LICENSE", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/dataplumber/edge", "tags": ["Open Source", "nlp:data base", "nlp:inventory control", "nlp:data system", "nlp:gates (circuits)", "nlp:information management", "nlp:inventory", "Data Servers Processing and Handling", "NASA", "nlp:data management", "nlp:mathematical model", "nlp:data base management system", "nlp:information retrieval", "JPL"]}, {"contact": {"email": "jpl_ott@jpl.nasa.gov"}, "date": {"metadataLastUpdated": "2016-11-10"}, "description": "NEXUS provides a bridge between science data and horizontal-scaling data analysis. It provides a workflow to divide science artifacts into small data tiles to store in a cloud-scaled database where they can be quickly retrieved through a high performance spatial search registry. Through spatial index, NEXUS provides fast access to all relevant data tiles where each tile fits into RAM for fast in-memory computation. ", "identifier": "NPO-50157-1", "laborHours": 0, "name": "NEXUS: Deep Data Platform", "organization": "JPL", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://software.nasa.gov/software/NPO-50157-1", "tags": ["Open Source", "nlp:data base", "nlp:computation", "nlp:searching", "Data Servers Processing and Handling", "nlp:random acces", "nlp:data processing", "nlp:data reduction", "nlp:random access memory", "NASA", "nlp:computer storage device", "nlp:data storage", "nlp:memory (computers)", "JPL"]}, {"contact": {"email": "jpl_ott@jpl.nasa.gov"}, "date": {"metadataLastUpdated": "2016-11-10"}, "description": "UAVSAR backscatter data contain both geometric and radiometric distortions due to underlying topography and the radar viewing geometry. Currently, backscatter variation due to topography is the single largest error source when estimating biomass over steep or hilly terrain. Thus, proper calibration normalizes the backscatter images so that only contributions from the parameters of interest remain. ", "identifier": "NPO-47969-1", "laborHours": 0, "name": "Radiometric Calibration of UAVSAR Images", "organization": "JPL", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://software.nasa.gov/software/NPO-47969-1", "tags": ["Open Source", "nlp:radar imagery", "nlp:radiometric correction", "nlp:backscattering", "nlp:calibrating", "nlp:topography", "Data and Image Processing", "nlp:terrain analysi", "NASA", "nlp:synthetic aperture radar", "nlp:radar data", "JPL", "nlp:terrain", "nlp:geometric rectification (imagery)"]}, {"contact": {"email": "jpl_ott@jpl.nasa.gov"}, "date": {"metadataLastUpdated": "2016-11-10"}, "description": "Just as web search involves more than matching phrases, spectral search is more challenging than simply matching the shape of the spectrum.  The background substrate and illumination changes can cause the same signature to appear very different across scenes.  Here, the search service uses an adaptive matched-filter approach that compensates for the context and background characteristics of each scene.  ", "identifier": "NPO-49004-1", "laborHours": 0, "name": "A Web-based Search Service to Support Imaging Spectrometer Instrument Operations.", "organization": "JPL", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://software.nasa.gov/software/NPO-49004-1", "tags": ["Open Source", "nlp:spectrum analysi", "nlp:shape", "nlp:infrared spectrometer", "Data and Image Processing", "nlp:signature", "NASA", "nlp:imaging spectrometer", "nlp:spectral signature", "nlp:optical filter", "JPL", "nlp:imaging technique", "nlp:spectrum", "nlp:spectrometer"]}, {"contact": {"email": "jpl_ott@jpl.nasa.gov"}, "date": {"metadataLastUpdated": "2016-11-10"}, "description": "The GNEIMO methods and algorithms build up on the Spatial Operator Algebra (SOA) multibody dynamics framework. The specific problems addressed in this work are velocity intialization techniques that are consistent with the CICMD equipartition priniciple, techniques for nulling momentum drift, analysis and solutions for the flying ice-cube effect, and performance of integration schemes. ", "identifier": "NPO-48712-1", "laborHours": 0, "name": "GNEIMO Advanced Techniques for Constrained Internal Coordinate Molecular Dynamics", "organization": "JPL", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://software.nasa.gov/software/NPO-48712-1", "tags": ["Open Source", "nlp:drift rate", "nlp:algorithm", "nlp:dynamic structural analysi", "nlp:problem solving", "nlp:computational fluid dynamic", "Data and Image Processing", "nlp:numerical integration", "NASA", "nlp:measure and integration", "nlp:algebra", "nlp:numerical analysi", "JPL", "nlp:operators (mathematics)"]}, {"contact": {"email": "jpl_ott@jpl.nasa.gov"}, "date": {"metadataLastUpdated": "2016-11-10"}, "description": "The primary purpose of the Level 2 retrieval software is to derive estimates of the column averaged atmospheric CO2 dry air mole fraction, XCO2, and other Level 2 data products from the spectra returned by the OCO-2 mission. Where XCO2 is defined as the ratio of the column abundances of CO2 and the column abundance of dry air.", "identifier": "NPO-49044-1", "laborHours": 0, "name": "The OCO-2 Level 2 Retrieval Algorithm", "organization": "JPL", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://disc.gsfc.nasa.gov/OCO-2", "tags": ["Open Source", "nlp:spectrum analysi", "nlp:algorithm", "nlp:carbon dioxide concentration", "nlp:data processing", "Data and Image Processing", "NASA", "nlp:computer program", "nlp:abundance", "nlp:carbon dioxide", "nlp:estimate", "JPL", "nlp:air", "nlp:atmospheric composition"]}, {"contact": {"email": "jpl_ott@jpl.nasa.gov"}, "date": {"metadataLastUpdated": "2016-11-10"}, "description": "The software known as the The Imagery Exchange (TIE) 0.4 is an extension of the HORIZON 5 framework. It delivers horizontal scaling solutions for image capturing to automate the generation of the Meta Raster Format (MRF) imagery products. ", "identifier": "NPO-49883-1", "laborHours": 0, "name": "TIE 0.4 - The Imagery Exchange for the NASA Global Imagery Browse Services (GIBS) Project", "organization": "JPL", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa-gibs/tie/blob/master/LICENSE", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa-gibs/tie", "tags": ["Open Source", "nlp:satellite imagery", "nlp:image", "nlp:format", "Data and Image Processing", "nlp:software engineering", "NASA", "nlp:computer program", "nlp:software development tool", "nlp:computer systems program", "nlp:imagery", "nlp:applications programs (computers)", "JPL", "nlp:image processing"]}, {"contact": {"email": "jpl_ott@jpl.nasa.gov"}, "date": {"metadataLastUpdated": "2016-11-10"}, "description": "SMART supports a high-level system trade study on a complex mission, such as a potential Mars Sample Return (MSR) mission, in an intuitive and quantitative manner. SMART offers a unique capability of handling correlated redundancies and accurately evaluate the probability of mission success as well as its sensitivity to the reliability of mission components. ", "identifier": "NPO-49732-1", "laborHours": 0, "name": "Space Mission Architecture and Risk Analysis Tool (SMART)", "organization": "JPL", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://software.nasa.gov/software/NPO-49732-1", "tags": ["Open Source", "nlp:probability theory", "nlp:space mission", "Design and Integration Tools", "nlp:reliability analysi", "nlp:systems analysi", "NASA", "nlp:systems engineering", "nlp:mission planning", "nlp:redundancy", "nlp:reliability", "nlp:mars sample return mission", "JPL", "nlp:risk"]}, {"contact": {"email": "jpl_ott@jpl.nasa.gov"}, "date": {"metadataLastUpdated": "2016-11-10"}, "description": "Provides software developers, peer reviewers, testers, and quality assurance personnel with an interactive tool that facilitates searching for patterns, confirm compliance or non-compliance with coding guidelines and coding standards, identify suspicious code fragments, etc. Cobra uses a lexical analyzer for C to scan in source code. ", "identifier": "NPO-50050-1", "laborHours": 0, "name": "Cobra: A Code Browser and Analyzer -- an extendable, interactive tool for the analysis of C code", "organization": "JPL", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://software.nasa.gov/software/NPO-50050-1", "tags": ["Open Source", "nlp:symbol", "nlp:computer program integrity", "nlp:coding", "nlp:quality control", "Design and Integration Tools", "nlp:computer programming", "nlp:software engineering", "NASA", "nlp:computer program", "nlp:software development tool", "nlp:standard", "JPL", "nlp:c (programming language)"]}, {"contact": {"email": "jpl_ott@jpl.nasa.gov"}, "date": {"metadataLastUpdated": "2016-11-10"}, "description": "The primary motivation for the development of this software was to separate the analysis part of the problem from the data-specific part. This allows the exact same software to be used for multiple missions as needed; the only requirement for new mission input is the creation of a translator specific to that data source. Provides an API and for developing tools for astronomical data analysis. ", "identifier": "NPO-50136-1", "laborHours": 0, "name": "OMINAS (OPEN-SOURCE MODULAR IMAGE NAVIGATION AND ANALYSIS SYSTEM) astronomical data processing software", "organization": "JPL", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://software.nasa.gov/software/NPO-50136-1", "tags": ["Open Source", "nlp:data system", "nlp:navigation", "Design and Integration Tools", "nlp:light source", "nlp:data processing", "nlp:software engineering", "NASA", "nlp:computer program", "nlp:software development tool", "nlp:computer systems program", "nlp:applications programs (computers)", "JPL", "nlp:image processing"]}, {"contact": {"email": "jpl_ott@jpl.nasa.gov"}, "date": {"metadataLastUpdated": "2016-11-10"}, "description": "SysML is a standard, visual, and general-purpose system modeling language developed by the Object Management Group (OMG). MagicDraw from NoMagic is used as a modelling tool.", "identifier": "NPO-50126-1", "laborHours": 0, "name": "SysML System Model for the Thirty Meter Telescope (TMT)", "organization": "JPL", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/Open-MBEE/TMT-SysML-Model/blob/master/COPYRIGHT", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/Open-MBEE/TMT-SysML-Model", "tags": ["Open Source", "nlp:programming language", "nlp:language", "Design and Integration Tools", "nlp:dynamic model", "nlp:systems analysi", "NASA", "nlp:systems engineering", "nlp:management system", "nlp:mathematical model", "nlp:model", "JPL", "nlp:telescope", "nlp:object-oriented programming"]}, {"contact": {"email": "jpl_ott@jpl.nasa.gov"}, "date": {"metadataLastUpdated": "2016-11-10"}, "description": "JPL's Integrated Model-Centric Engineering (IMCE) initiative developed ontologies for Model-Based Systems Engineering (MBSE) to support JPL's MBSE practices and methodologies. The IMCE ontologies have been carefully engineered to provide support for scalable query and reasoning according to the semantics of the Ontology Web Language (OWL) standard in such a way that these ontologies can be mapped as extensions of the Unified Modeling Language (UML) & Systems Modeling Language (SysML) standards. ", "identifier": "NPO-49756-1", "laborHours": 0, "name": "IMCE Ontological Modeling Framework", "organization": "JPL", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.profileGenerator.application/blob/master/licenses.sbt", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/JPL-IMCE", "tags": ["Open Source", "nlp:programming language", "nlp:computation", "nlp:query language", "nlp:semantic", "Design and Integration Tools", "NASA", "nlp:mathematical model", "nlp:standard", "nlp:model", "nlp:procedure", "JPL", "nlp:document markup language", "nlp:linguistic"]}, {"contact": {"email": "jpl_ott@jpl.nasa.gov"}, "date": {"metadataLastUpdated": "2016-11-10"}, "description": "EarthKit provides a framework for collaboration among researchers in Earth science. It provides a set of software tools for sharing any user's research environment via the web and managing workflows that run in the cloud. By leveraging cloud computing services in this novel way, EarthKit can instantly replicate a reesarch computing environment (software, data, operating system environment and hardware).", "identifier": "NPO-49145-1", "laborHours": 0, "name": "EarthKit", "organization": "JPL", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://software.nasa.gov/software/NPO-49145-1", "tags": ["Open Source", "nlp:clouds (meteorology)", "nlp:software engineering", "Environmental Science (Earth, Air, Space, Exoplanet)", "NASA", "nlp:computer program", "nlp:software development tool", "nlp:distributed processing", "nlp:computer systems program", "nlp:computer", "nlp:applications programs (computers)", "JPL", "nlp:earth science", "nlp:data acquisition"]}, {"contact": {"email": "jpl_ott@jpl.nasa.gov"}, "date": {"metadataLastUpdated": "2016-11-10"}, "description": "Automates the deployment of nowcasting and forecasting hydrologic simulations and ingests satellite observations (through data assimilation). Allows coupling of other environmental models. Also facilitates delivery of data products to users via a GIS-enabled database.  users of project outputs through CCAFS network of partners. Our project objectives, and approach are integral with the goals of SERVIR.", "identifier": "NPO-49821-1", "laborHours": 0, "name": "Regional Hydrologic Extremes Assessment System (RHEAS) software framework", "organization": "JPL", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/RHEAS/blob/master/LICENSE", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/RHEAS", "tags": ["Open Source", "nlp:data base", "nlp:data system", "nlp:data integration", "nlp:geographic information system", "nlp:computerized simulation", "nlp:data processing", "Environmental Science (Earth, Air, Space, Exoplanet)", "NASA", "nlp:computer program", "nlp:satellite observation", "JPL", "nlp:assimilation", "nlp:deployment"]}, {"contact": {"email": "jpl_ott@jpl.nasa.gov"}, "date": {"metadataLastUpdated": "2016-11-10"}, "description": "The File Exchange Interface (FEI) service offers secure file transaction, store, transport, and management services. The latest distribution, FEI5 software code name Komodo, is a complete redesign from its predecessors by adopting the latest computing technologies and standards. ", "identifier": "NPO-47089-1", "laborHours": 0, "name": "File Exchange Interface 5 - New enhancements to NTR 40075", "organization": "JPL", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://software.nasa.gov/software/NPO-47089-1", "tags": ["Open Source", "nlp:file maintenance (computers)", "nlp:human-computer interface", "nlp:interface", "Data and Image Processing", "nlp:software engineering", "NASA", "nlp:computer program", "nlp:computer network", "nlp:computer systems program", "nlp:standard", "nlp:applications programs (computers)", "nlp:augmentation", "JPL"]}, {"contact": {"email": "jpl_ott@jpl.nasa.gov"}, "date": {"metadataLastUpdated": "2016-11-10"}, "description": "Ndarts is designed as a general purpose dynamics library that can be used for the modeling of robotic platforms, space vehicles, molecular dynamics and such applications. All NASA space vehicles use such capabilities. ", "identifier": "NPO-47703-1", "laborHours": 0, "name": "Ndarts", "organization": "JPL", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://software.nasa.gov/software/NPO-47703-1", "tags": ["Open Source", "nlp:molecular dynamic", "nlp:nasa space program", "Vehicle Management (Space/Air/Ground)", "nlp:launch vehicle", "nlp:computational fluid dynamic", "nlp:library", "NASA", "nlp:nasa program", "nlp:spacecraft", "nlp:aerospace vehicle", "nlp:model", "JPL", "nlp:fluid dynamic"]}, {"contact": {"email": "jpl_ott@jpl.nasa.gov"}, "date": {"metadataLastUpdated": "2016-11-10"}, "description": "One of the big efforts of NASA is the observation of planet earth from space. Global climate change is a prime example. Extending Athena from the county level to the global level would give a simulation tool for examining how populations and countries might respond to global cllimate change and/or new policies related to controlling climate change. ", "identifier": "NPO-47857-1", "laborHours": 0, "name": "Athena", "organization": "JPL", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://software.nasa.gov/software/NPO-47857-1", "tags": ["Open Source", "nlp:nasa space program", "nlp:man environment interaction", "nlp:simulation", "nlp:climate change", "nlp:earth observations (from space)", "NASA", "nlp:nasa program", "nlp:policy", "nlp:earth (planet)", "Business Systems and Project Management", "nlp:population", "nlp:climatology", "JPL"]}, {"contact": {"email": "jpl_ott@jpl.nasa.gov"}, "date": {"metadataLastUpdated": "2016-11-10"}, "description": "The Physical Oceanography Distributed Active Archive Center (PO.DAAC) is the center for oceanographic data for the NASA Earth Science Data and Information System (ESDIS). The primary function of PO.DAAC is to ingest, validate, archive, and distribute oceanographic artifacts.", "identifier": "NPO-47934-1", "laborHours": 0, "name": "Oceanographic Data Management And Archive System", "organization": "JPL", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://software.nasa.gov/software/NPO-47934-1", "tags": ["Open Source", "nlp:data base", "nlp:data system", "nlp:information management", "nlp:oceanography", "Data Servers Processing and Handling", "nlp:data processing", "NASA", "nlp:data management", "nlp:nasa program", "nlp:information system", "JPL", "nlp:earth science", "nlp:management information system"]}, {"contact": {"email": "larc-sra@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "Written in Java and C++ and based on the Airborne Coordinated Conflict Detection and Resolution mathematical framework, CD3D and CR3D are prototype implementations of state-based conflict-detection and conflict-resolution algorithms for a 3D airspace.", "identifier": "LAR-17878-1", "laborHours": 0, "name": "ACCoRDs Conflict-Detection (CD3D)/Conflict-Resolution (CR3D) Algorithms", "organization": "LaRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://shemesh.larc.nasa.gov/people/cam/ACCoRD/", "tags": ["Open Source", "nlp:algorithm", "nlp:resolution", "nlp:state estimation", "nlp:detection", "nlp:steady state", "nlp:c++ (programming language)", "NASA", "Autonomous Systems", "nlp:solid state device", "nlp:high resolution", "LaRC", "nlp:java (programming language)", "nlp:prototype"]}, {"contact": {"email": "larc-sra@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "Conflict prevention information has been assembled into prevention bands that advise a crew on maneuvers that should not be taken, helping to ensure that an aircraft's path is free of conflicts with other aircraft.", "identifier": "LAR-17874-1", "laborHours": 0, "name": "Conflict Prevention Bands", "organization": "LaRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://shemesh.larc.nasa.gov/fm/fm-atm-codes.html", "tags": ["Open Source", "nlp:spacecrew", "nlp:military aircraft", "nlp:aircraft performance", "nlp:aircraft equipment", "NASA", "Autonomous Systems", "nlp:collision avoidance", "nlp:flight crew", "nlp:commercial aircraft", "LaRC", "nlp:aircraft control", "nlp:flight path", "nlp:prevention"]}, {"contact": {"email": "larc-sra@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "Stratway modifies a four-dimensional (latitude, longitude, altitude, and time) flight plan to ensure a conflict-free trajectory. This type of resolution is strategic in that it resolves conflicts over long time horizons, perhaps over several hours.", "identifier": "LAR-17876-1", "laborHours": 0, "name": "Strategic Conflict Resolution (Stratway)", "organization": "LaRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://software.nasa.gov/software/lar-17876-1", "tags": ["Open Source", "nlp:flight plan", "nlp:trajectory analysi", "nlp:resolution", "nlp:time dependence", "nlp:high altitude", "nlp:latitude", "NASA", "Autonomous Systems", "nlp:trajectory", "nlp:high resolution", "LaRC", "nlp:flight path", "nlp:flight altitude"]}, {"contact": {"email": "c.l.rumsey@nasa.gov"}, "date": {"metadataLastUpdated": "2017-08-23"}, "description": "CFL3D is a structured-grid, cell-centered, upwind-biased, Reynolds-averaged Navier-Stokes (RANS) code. It can be run in parallel on multiple grid zones with point-matched, patched, overset, or embedded connectivities. Both multigrid and mesh sequencing are available in time-accurate or steady-state modes. ", "identifier": "LAR-16003-1", "laborHours": 0, "name": "Computational Fluids Laboratory 3-Dimensional (CFL3D)", "organization": "LaRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/CFL3D/blob/master/LICENSE", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/CFL3D", "tags": ["nlp:navier-stokes equation", "U.S. Release Only", "nlp:time dependence", "nlp:computational fluid dynamic", "nlp:multigrid method", "Design and Integration Tools", "nlp:steady state", "NASA", "nlp:computer program", "nlp:unstructured grids (mathematics)", "nlp:computational grid", "LaRC", "nlp:high reynolds number", "nlp:grid generation (mathematics)"]}, {"contact": {"email": "larc-sra@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "The fUnit software provides a framework for unit-testing Fortran 90, 95, and 2003 code.", "identifier": "LAR-17081-1", "laborHours": 0, "name": "Fortran Unit Testing Framework (fUnit v1.0)", "organization": "LaRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://sourceforge.net/directory/license:bsd/", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://sourceforge.net/projects/fortranxunit/", "tags": ["Open Source", "nlp:fortran", "nlp:computer program integrity", "nlp:programming environment", "Data Servers Processing and Handling", "nlp:software engineering", "nlp:program verification (computers)", "NASA", "nlp:software development tool", "nlp:computer systems program", "nlp:applications programs (computers)", "LaRC", "nlp:computer program", "nlp:computer programming"]}, {"contact": {"email": "larc-sra@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "ROBUS-2 is a time-division, multiple-access broadcast communication system that uses a time-indexed communication schedule for medium-access control. The technology provides guaranteed fault-tolerant services that include: message broadcast (Byzantine Agreement), dynamic communication schedule update, time reference (clock synchronization), and distributed diagnosis (group membership).", "identifier": "LAR-17264-1", "laborHours": 0, "name": "ROBUS-2 Fault-Tolerant Broadcast Communication System for Modular Avionics", "organization": "LaRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://ti.arc.nasa.gov/opensource/nosa/robus-2/", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://ti.arc.nasa.gov/opensource/projects/robus-2/", "tags": ["Open Source", "nlp:message", "nlp:fault tolerance", "nlp:real time operation", "nlp:synchronism", "nlp:access control", "NASA", "nlp:time division multiplexing", "nlp:broadcasting", "nlp:clock", "nlp:message processing", "nlp:time measurement", "LaRC", "Operations"]}, {"contact": {"email": "larc-sra@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "This sensitivity task employs the Monte Carlo method. Thousands of simulations are run with randomly varied input parameters, and then statistical correlations are computed to determine the sensitivity of output parameters to each input parameter.", "identifier": "LAR-17546-1", "laborHours": 0, "name": "Tolerance Domain Specific Language", "organization": "LaRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/kleb/nasarb/blob/master/uq4sim/License.txt", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/kleb/nasarb/blob/master/uq4sim", "tags": ["Open Source", "nlp:simulation", "nlp:computerized simulation", "nlp:parameter identification", "Data and Image Processing", "NASA", "nlp:monte carlo method", "nlp:digital simulation", "nlp:tolerances (mechanics)", "LaRC", "nlp:domain", "nlp:sensitivity analysi", "nlp:sensitivity", "nlp:correlation"]}, {"contact": {"email": "larc-sra@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "This open-source Java software helps develop electronic standards (E-Standards) for mass properties engineering. An E-Standard is a highly descriptive dataset that includes standardizing functions for data manipulation, interrogation, and formatting. With this tool, any number of users can interface with the proposed E-Standard datasets and still seamlessly utilize their own software methods.", "identifier": "LAR-17635-1", "laborHours": 0, "name": "Java Program to Promote an Open-Source E Standard for Mass Properties Engineering", "organization": "LaRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://ti.arc.nasa.gov/opensource//nosa/mpexjava", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://ti.arc.nasa.gov/opensource/projects/e-standards-mass-properties-engineering/", "tags": ["Open Source", "nlp:java (programming language)", "Data and Image Processing", "nlp:software engineering", "NASA", "nlp:data reduction", "nlp:software development tool", "nlp:computer systems program", "nlp:standard", "nlp:applications programs (computers)", "LaRC", "nlp:computer program", "nlp:computer technique", "nlp:computer programming"]}, {"contact": {"email": "larc-sra@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "This Excel plugin written in VB.net allows rapid post-processing of thermal analysis data from text files or from SINDA-formatted SAV files. The software can be adapted to other data formats as well.", "identifier": "LAR-18314-1", "laborHours": 0, "name": "FilePlottingTools", "organization": "LaRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://fileplottingtools.larc.nasa.gov/", "tags": ["Open Source", "nlp:data processing", "Data and Image Processing", "nlp:format", "NASA", "nlp:software engineering", "nlp:software development tool", "nlp:data management", "nlp:computer systems program", "nlp:digital data", "nlp:data processing equipment", "nlp:applications programs (computers)", "LaRC", "nlp:computer program"]}, {"contact": {"email": "larc-sra@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "This software is a flight dynamics simulation of a transport aircraft. It implements general rigid body equations of motion for the vehicle dynamics and draws aerodynamic forces from a standard coefficient expansion implemented as table lookups. Dynamics of actuator servos and bandwidth of sensors are also included. The simulation is coded in Simulink, a model-based environment using a commercial simulation package from Mathworks, Inc. The software is not stand-alone; it must be run from inside this commercial environment, making use of numerical libraries for basic operations as well as the overall time-stepping and numerical integration routines.", "identifier": "LAR-17625-1", "laborHours": 0, "name": "Flight Dynamics Simulation of a Generic Transport Model", "organization": "LaRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/GTM_DesignSim/blob/master/gtm_design/LicenseAgreement.pdf", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/GTM_DesignSim/", "tags": ["Open Source", "nlp:flight control", "Design and Integration Tools", "nlp:dynamic model", "nlp:control systems design", "nlp:computerized simulation", "nlp:simulation", "NASA", "nlp:aircraft model", "nlp:aircraft design", "nlp:control simulation", "nlp:transport aircraft", "LaRC", "nlp:aircraft control"]}, {"contact": {"email": "larc-sra@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2016-09-20"}, "description": "This toolbox generates shapefiles from the most recently acquired Landsat 8, Landsat 8 Surface Reflectance, and Sentinel-2 imagery over the Winam Gulf in Kenya depicting locations where water hyacinth in most likely present.", "identifier": "LAR-18869-1", "laborHours": 0, "name": "Surface Aquatic Vegetation Detection Tool (SAVDT)", "organization": "LaRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/NASA-DEVELOP/SAVDT/blob/master/LICENSE.md", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/NASA-DEVELOP/SAVDT", "tags": ["Open Source", "nlp:reflectance", "nlp:satellite imagery", "nlp:water resource", "nlp:surface propertie", "nlp:detection", "nlp:earth surface", "nlp:remote sensing", "Data and Image Processing", "nlp:water", "NASA", "nlp:position (location)", "LaRC", "nlp:vegetation"]}, {"contact": {"email": "larc-sra@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2016-10-12"}, "description": "Modified Snowmelt Runoff Model for Forecasting Water Availability in Chile (M-SRM) models daily stream flow of snowmelt runoff as a function of temperature, elevation, snow-covered area, precipitation rate, and experimentally determined coefficients. Using MODIS and TRMM data, the software provides tools for synthesizing daily fractional snow cover and daily precipitation measurements. M-SRM provides daily stream flow estimates for three months beyond the start of the growing season.", "identifier": "LAR-18602-1", "laborHours": 0, "name": "Modified Snowmelt Runoff Model For Forecasting Water Availability in Chile", "organization": "LaRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/NASA-DEVELOP/M-SRM/blob/master/LICENSE.md", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/NASA-DEVELOP/M-SRM", "tags": ["Open Source", "nlp:snow", "nlp:hydrology", "nlp:drainage", "nlp:snow cover", "nlp:hydrology model", "Data and Image Processing", "nlp:elevation", "NASA", "nlp:forecasting", "nlp:precipitation (meteorology)", "nlp:hydrometeorology", "LaRC", "nlp:water flow"]}, {"contact": {"email": "msfc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-15"}, "description": "Created using the commercial math analysis software MATLAB, TASC enables the easy computation of nonlinear J-integral solutions for surface-cracked plates in tension by accessing and interpolating between the 600 nonlinear surface crack solutions documented in NASA/TP-2011-217480. The only required inputs to the program are the surface crack dimensions, plate cross-section dimensions, and material properties. TASC provides a convenient and easy-to-use interface for the solution set that allows a novice user to obtain a fast and reliable fracture toughness solution. ", "identifier": "MFS-33082-1", "laborHours": 0, "name": "Tool for Analysis of Surface Cracks (TASC)", "organization": "MSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://sourceforge.net/projects/tascnasa/files/TASC_NASA_Open_Source_Agreement.pdf/download", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://sourceforge.net/projects/tascnasa/", "tags": ["Open Source", "Materials and Processes", "nlp:crack propagation", "nlp:crack geometry", "nlp:geometry", "nlp:stress analysi", "nlp:plates (structural members)", "NASA", "nlp:tensile stres", "nlp:yield point", "nlp:crack", "MSFC", "nlp:computer program", "nlp:structural analysi"]}, {"contact": {"email": "msfc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2015-06-02"}, "description": "A set of libraries used in the development of software applications.  libSPRITE was specifically designed for real-time systems that operate on a single computational node (but may be multi-core) to systematically address common coding errors, provide for multi-threaded programming to produce the exact same results regardless of the number of cores on the host compute node, and offer support for in-operation reconfigurability (parameter and control flow modifications). Components include engineering unit encoders, math functions, a task scheduler built on top of pthreads, a publish/subscribe data distribution system, and a Lua scripting language interface.", "identifier": "MFS-33231-1", "laborHours": 0, "name": "libSPRITE", "organization": "MSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/libSPRITE/blob/master/license.pdf", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/libSPRITE/", "tags": ["Open Source", "nlp:coding", "nlp:scheduling", "Data Servers Processing and Handling", "nlp:c++ (programming language)", "nlp:computerized simulation", "NASA", "nlp:error", "nlp:systems engineering", "nlp:error analysi", "MSFC", "nlp:applications programs (computers)", "nlp:computer program", "nlp:systems simulation"]}, {"contact": {"email": "rodney.martin@nasa.gov"}, "date": {"metadataLastUpdated": "2017-08-23"}, "description": "ACCEPT is an open source machine learning code for model development to support both regression and detection modules, including fidelity analysis.", "identifier": "NASA-ACCEPT", "laborHours": 0, "name": "Adverse Condition & Critical Event Prediction Toolbox (ACCEPT)", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://c3.nasa.gov/dashlink/static/media/algorithm/ACCEPT_osrelease_1.6.tar.gz", "tags": ["machine learning", "detection", "nlp:detection", "nlp:simulation", "nlp:prediction", "nlp:module", "nlp:systems analysi", "NASA", "nlp:prediction analysis technique", "model development", "nlp:atmospheric model", "nlp:mathematical model", "nlp:regression analysi", "regression", "nlp:computer program"]}, {"contact": {"email": "jason.duley@nasa.gov"}, "date": {"metadataLastUpdated": "2017-08-23"}, "description": "The IVHM Project in the Aviation Safety Program has funded research in electrical power system (EPS) health management. This problem domain contains both discrete and continuous behavior, and thus is directly relevant for the hybrid diagnostic tool HyDE. In FY2007 work was performed to expand the HyDE diagnosis model of the ADAPT system. The work completed resulted in a HyDE model with the capability to diagnose five times the number of ADAPT components than was previously tested. The expanded diagnosis model passed a corresponding set of new ADAPT fault injection scenario tests with no incorrect faults reported. The time required for the HyDE diagnostic system to isolate the fault varied widely between tests; this variance was reduced by tuning of the HyDE input parameters. These results and other diagnostic design tradeoffs are discussed. Finally, possible future improvements for both the HyDE diagnostic model and HyDE itself are presented.", "identifier": "NASA-Advanced_Diagnostics_Prognostics_Testbed_(ADAPT)", "laborHours": 0, "name": "Advanced Diagnostics and Prognostics Testbed (ADAPT)", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://dashlink.arc.nasa.gov/static/dashlink/media/dataset/Exp_BN.tar.gz", "tags": ["nlp:fault tolerance", "nlp:real time operation", "electrical power system", "IVHM", "testbed", "nlp:diagnosi", "nlp:electric power supplie", "nlp:systems analysi", "NASA", "nlp:systems engineering", "diagnostics", "nlp:fault detection", "ADAPT", "nlp:systems health monitoring", "nlp:mathematical model", "nlp:design analysi", "prognostics"]}, {"contact": {"email": "patrick.hogan@nasa.gov"}, "date": {"metadataLastUpdated": "2017-08-17"}, "description": "An educational web application that visualizes the effects of climate change on agriculture using a large collection of global agriculture and weather station data.", "identifier": "ARC-AgroSphere", "laborHours": 0, "name": "NASA WorldWind Research: AgroSphere", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/NASAWorldWindResearch/AgroSphere/blob/master/LICENSE", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/NASAWorldWindResearch/AgroSphere", "tags": ["atmosphere", "nlp:weather", "nlp:climate", "worldwind", "nlp:world wide web", "nlp:climate change", "nlp:environment effect", "weather", "NASA", "nlp:nasa program", "globe", "nlp:meteorology", "climate", "nlp:agriculture", "agriculture", "nlp:climatology", "weather-data", "nlp:data acquisition"]}, {"contact": {"email": "patrick.hogan@nasa.gov"}, "date": {"metadataLastUpdated": "2017-08-17"}, "description": "Open framework for urban infrastructure management", "identifier": "ARC-CitySmart", "laborHours": 0, "name": "NASA WorldWind Research: CitySmart", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://software.nasa.gov/faq", "name": "Pending Release"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/NASAWorldWindResearch/CitySmart", "tags": ["nlp:nasa space program", "nlp:research management", "nlp:information management", "framework", "urban infrastructure management", "nlp:management", "NASA", "nlp:nasa program", "nlp:systems engineering", "nlp:engineering management", "nlp:management method", "nlp:management information system", "nlp:management planning"]}, {"contact": {"email": "patrick.hogan@nasa.gov"}, "date": {"metadataLastUpdated": "2017-08-17"}, "description": "WorldWind Earth application visualizes weather data and performs animation by extending the NASA WorldWind JAVA Client", "identifier": "ARC-WxOps-WorldWind", "laborHours": 0, "name": "NASA WorldWind Research: WxOps-WorldWind", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://worldwind.arc.nasa.gov/LICENSE.html", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/NASAWorldWindResearch/WxOps-WorldWind", "tags": ["nlp:weather", "nlp:meteorological parameter", "nlp:earth observations (from space)", "nlp:geomagnetism", "NASA", "nlp:nasa program", "nlp:satellite observation", "nlp:meteorology", "nlp:precipitation (meteorology)", "WorldWind", "nlp:java (programming language)", "nlp:data acquisition"]}, {"contact": {"email": "christopher.d.durbin@nasa.gov"}, "date": {"metadataLastUpdated": "2017-08-23"}, "description": "The Common Metadata Repository (CMR) is an earth science metadata repository for NASA EOSDIS data. The CMR Search API provides access to this metadata.", "laborHours": 0, "name": "Common-Metadata-Repository", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/Common-Metadata-Repository/blob/master/LICENSE", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/Common-Metadata-Repository", "tags": ["nlp:earth observing system (eos)", "nlp:data system", "nlp:nasa space program", "nlp:earth observations (from space)", "NASA", "EOSDIS", "nlp:nasa program", "nlp:data management", "CMR", "nlp:information retrieval", "nlp:data acquisition", "nlp:earth science", "nlp:geology"]}, {"contact": {"email": "tamar.e.cohen@nasa.gov"}, "date": {"metadataLastUpdated": "2017-08-23"}, "description": "geocamUtilWeb is a set of utilities used by Django web apps in the GeoCam Share app collection.", "laborHours": 0, "name": "georef_geocamutilweb", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/georef_geocamutilweb/blob/master/LICENSE", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/georef_geocamutilweb", "tags": ["nlp:bending theory", "nlp:electromotive force", "GeoCam", "nlp:scattering function", "nlp:barium oxide", "NASA", "nlp:systems engineering", "ARC", "nlp:phosphorus compound", "georef", "nlp:phase control", "nlp:reliability", "nlp:data acquisition", "nlp:optimization"]}, {"contact": {"email": "tamar.e.cohen@nasa.gov"}, "date": {"metadataLastUpdated": "2017-08-23"}, "description": "georef repository", "laborHours": 0, "name": "georef", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/georef/blob/master/LICENSE-2.0.txt", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/georef", "tags": ["nlp:igneous rock", "nlp:petrology", "nlp:mineral", "nlp:meteoritic composition", "GeoCam", "NASA", "ARC", "nlp:abundance", "nlp:mathematical model", "georef", "nlp:tectonic", "nlp:computer program", "nlp:biological evolution", "nlp:mechanical property"]}, {"contact": {"email": "tamar.e.cohen@nasa.gov"}, "date": {"metadataLastUpdated": "2017-08-23"}, "description": "georef_deploy repository", "laborHours": 0, "name": "georef_deploy", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/georef_deploy/blob/master/LICENSE", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/georef_deploy", "tags": ["nlp:stability", "GeoCam", "NASA", "nlp:conference", "ARC", "nlp:circuit", "georef", "nlp:reliability", "nlp:environment", "nlp:boundary layer", "nlp:radiation"]}, {"contact": {"email": "tamar.e.cohen@nasa.gov"}, "date": {"metadataLastUpdated": "2017-08-23"}, "description": "georef_geocamtiepoint repository", "laborHours": 0, "name": "georef_geocamtiepoint", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/georef_geocamtiepoint/blob/master/LICENSE", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/georef_geocamtiepoint", "tags": ["nlp:igneous rock", "nlp:petrology", "nlp:mineral", "nlp:meteoritic composition", "GeoCam", "NASA", "ARC", "nlp:abundance", "nlp:mathematical model", "georef", "nlp:tectonic", "nlp:computer program", "nlp:biological evolution", "nlp:mechanical property"]}, {"contact": {"email": "tamar.e.cohen@nasa.gov"}, "date": {"metadataLastUpdated": "2017-08-23"}, "description": "The Image Registration module is intended to help automate the process of registering images to the correct location on the ground. It consists of two main components: A - Fetching RGB satellite imagery of Earth to use for comparison. B - Searching for the correct image registration parameters.", "laborHours": 0, "name": "georef_imageregistration", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/georef_imageregistration/blob/master/LICENSE", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/georef_imageregistration", "tags": ["nlp:satellite imagery", "nlp:meteorological satellite", "GeoCam", "nlp:earth observations (from space)", "nlp:image analysi", "nlp:remote sensing", "NASA", "nlp:pattern registration", "ARC", "nlp:position (location)", "nlp:satellite observation", "georef", "nlp:imagery", "nlp:image processing"]}, {"contact": {"email": "peter.l.richards@nasa.gov"}, "date": {"metadataLastUpdated": "2017-08-23"}, "description": "An interactive demo of the Open MCT mission control software", "laborHours": 0, "name": "Open Mission Control Demo (OpenMCT)", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/openmct/blob/master/LICENSES.md", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/openmct-demo", "tags": ["Open Source", "nlp:space mission", "demo", "nlp:flight control", "nlp:software engineering", "nlp:ground based control", "NASA", "ARC", "nlp:spacecraft control", "nlp:software development tool", "MCT", "nlp:computer systems program", "nlp:mission planning", "nlp:environmental control", "nlp:computer program", "Operations"]}, {"contact": {"email": "calin.duma@nasa.gov"}, "date": {"metadataLastUpdated": "2017-08-23"}, "description": "CMR-OpenSearch is a web application developed by NASA EOSDIS to enable data discovery, search, and access across the CMR Earth Science data holdings via the OpenSearch standard. ", "laborHours": 0, "name": "cmr-opensearch", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/cmr-opensearch/blob/master/LICENSE", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/cmr-opensearch", "tags": ["nlp:geology", "nlp:earth observing system (eos)", "nlp:data system", "nlp:nasa space program", "Earth Science", "nlp:earth observations (from space)", "NASA", "EOSDIS", "OpenSearch", "nlp:nasa program", "CMR", "search", "nlp:standard", "nlp:information retrieval", "nlp:earth science", "nlp:data acquisition"]}, {"contact": {"email": "calin.duma@nasa.gov"}, "date": {"metadataLastUpdated": "2017-08-23"}, "description": "CMR-CSW is a web application developed by NASA EOSDIS to enable data discovery, search, and access across the CMR Earth Science data holdings via the OpenGIS Catalogue Service for the Web (CSW) standard.", "laborHours": 0, "name": "cmr-csw", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/cmr-csw/blob/master/LICENSE", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/cmr-csw", "tags": ["nlp:earth observing system (eos)", "nlp:data system", "nlp:nasa space program", "Earth Science", "CSW", "nlp:earth observations (from space)", "nlp:catalogs (publications)", "NASA", "EOSDIS", "nlp:nasa program", "OpenGIS", "CMR", "search", "nlp:standard", "nlp:information retrieval", "nlp:earth science", "nlp:data acquisition"]}, {"contact": {"email": "peter.l.richards@nasa.gov"}, "date": {"metadataLastUpdated": "2017-08-23"}, "description": "A tutorial for OpenMCT that guides you through integrating historical and realtime telemetry.", "laborHours": 0, "name": "Open Mission Control Tutorial (OpenMCT)", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/openmct/blob/master/LICENSES.md", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/openmct-tutorial", "tags": ["Open Source", "nlp:space mission", "tutorial", "nlp:control equipment", "nlp:telemetry", "nlp:satellite ground support", "nlp:ground based control", "NASA", "nlp:systems engineering", "ARC", "nlp:spacecraft control", "nlp:mission planning", "MCT", "nlp:environmental control", "nlp:control theory", "Operations"]}, {"contact": {"email": "bill.wohler@nasa.gov"}, "date": {"metadataLastUpdated": "2017-07-13"}, "description": "Kepler Science Data Processing Pipeline", "laborHours": 0, "name": "kepler-pipeline", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/kepler-pipeline/blob/master/README.md", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/kepler-pipeline", "tags": ["nlp:data system", "nlp:optical data processing", "nlp:image", "nlp:data flow analysi", "nlp:data processing", "nlp:data processing equipment", "nlp:data sampling", "nlp:pipeline", "NASA", "nlp:parallel processing (computers)", "nlp:pipelining (computers)", "Kepler"]}, {"contact": {"email": "christopher.m.becker@nasa.gov"}, "date": {"metadataLastUpdated": "2017-08-23"}, "description": "The Mesh Network Communication System is a peer-to-peer communication network architecture that enables communication between network nodes of various types. The initial primary goal of the system was to enable communication between small formations of cubesats or other small satellites, but the basic mesh architecture is applicable to data exchange between network assets of any type. The system has been flight tested on formations of small unmanned aerial systems (sUAS) and shown to provide low latency data throughput for dynamic flight environments.", "laborHours": 0, "name": "meshNetwork", "organization": "MSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/meshNetwork/blob/master/LICENSE", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/meshNetwork", "tags": ["cubesats", "nlp:satellite network", "nlp:communication network", "nlp:spacecraft communication", "nlp:telecommunication", "nlp:small scientific satellite", "nlp:architecture (computers)", "nlp:data transmission", "NASA", "satellites", "nlp:communication satellite", "nlp:data link", "peer-to-peer", "network communication", "sUAS", "nlp:satellite communication"]}, {"contact": {"email": "james.marshall-1@nasa.gov"}, "date": {"metadataLastUpdated": "2017-08-23"}, "description": "The Core Flight Executive (cFE) provides software bus, time, event, executive, table, and file services, and it defines the application programming interface (API) for each set function. Applications subscribe to cFE services at runtime, making system modifications easy. Facilitating rapid prototyping, new applications can be compiled, linked, loaded, and started without requiring the entire system to be rebuilt.", "laborHours": 0, "name": "cFE", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/cFE", "tags": ["nlp:real time operation", "nlp:airborne/spaceborne computer", "Vehicle Management (Space/Air/Ground)", "GSFC", "nlp:operating systems (computers)", "nlp:software engineering", "NASA", "nlp:computer systems program", "nlp:channels (data transmission)", "nlp:applications programs (computers)", "nlp:computer program", "nlp:prototype", "nlp:computer programming"]}, {"contact": {"email": "cesar.a.munoz@nasa.gov"}, "date": {"metadataLastUpdated": "2017-08-23"}, "description": "NASA PVS Library of Formal Developments", "laborHours": 0, "name": "pvslib", "organization": "LaRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://software.nasa.gov/faq", "name": "Pending Release"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/pvslib", "tags": ["nlp:nasa space program", "nlp:failure", "nlp:information dissemination", "nlp:vibration", "nlp:scattering function", "nlp:library", "NASA", "nlp:nasa program", "nlp:systems engineering", "PVS", "nlp:reliability", "LaRC", "nlp:optimization"]}, {"contact": {"email": "timothy.canham@jpl.nasa.gov"}, "date": {"metadataLastUpdated": "2017-08-23"}, "description": "Fprime flight software framework", "laborHours": 0, "name": "fprime", "organization": "JPL", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/fprime/blob/master/LICENSE.txt", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/fprime", "tags": ["nlp:programming environment", "nlp:computer program integrity", "nlp:flight control", "framework", "nlp:flight mechanic", "nlp:automatic flight control", "nlp:space flight", "nlp:software engineering", "NASA", "nlp:computer program", "nlp:software development tool", "JPL", "flight software", "nlp:computer programming"]}, {"contact": {"email": "MikePark.rb@GMail.com"}, "date": {"metadataLastUpdated": "2017-08-23"}, "description": "The knife library calculates the boolean subtraction of arbitrary watertight triangular polyhedra. The result of this subtraction is also watertight triangular polyhedra. The triangular faces of the resultant polyhedra are created with a Delaunay triangle mesher. These polyhedra are suitable for performing cut cell partial differential equation solutions (i.e., computational fluid flow simulations). ", "laborHours": 0, "name": "knife", "organization": "LaRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/knife/blob/master/LICENSE", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/knife", "tags": ["nlp:triangle", "nlp:computational fluid dynamic", "nlp:simulation", "nlp:computerized simulation", "NASA", "library", "nlp:fluid flow", "nlp:digital simulation", "nlp:numerical analysi", "nlp:particle in cell technique", "nlp:flow equation", "LaRC", "nlp:steady flow"]}, {"contact": {"email": "patrick.m.quinn@nasa.gov"}, "date": {"metadataLastUpdated": "2017-08-23"}, "description": "A jQuery plugin implementing the ECHO Forms specification.", "laborHours": 0, "name": "edsc-echoforms", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/edsc-echoforms/blob/master/LICENSE", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/edsc-echoforms", "tags": ["jquery", "nlp:specification", "nlp:computation", "nlp:stability", "nlp:image", "nlp:simulation", "ECHO Forms", "nlp:equipment specification", "nlp:systems analysi", "NASA", "nlp:echo", "nlp:transmitter", "nlp:fatigue (materials)"]}, {"contact": {"email": "james.marshall-1@nasa.gov"}, "date": {"metadataLastUpdated": "2017-08-23"}, "description": "cfs_lib repository", "laborHours": 0, "name": "cfs_lib", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://software.nasa.gov/faq", "name": "Pending Release"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/cfs_lib", "tags": ["nlp:igneous rock", "nlp:petrology", "CFS", "nlp:mineral", "nlp:meteoritic composition", "NASA", "nlp:abundance", "nlp:mathematical model", "nlp:tectonic", "nlp:biological evolution", "nlp:computer program", "CFE", "nlp:mechanical property"]}, {"contact": {"email": "james.marshall-1@nasa.gov"}, "date": {"metadataLastUpdated": "2017-08-23"}, "description": "NASA core Flight System Scheduler Application", "laborHours": 0, "name": "SCH", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/SCH/blob/master/Core%20Flight%20System%20(CFS)%20NOSA.pdf", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/SCH", "tags": ["nlp:nasa space program", "CFS", "nlp:flight control", "nlp:automatic flight control", "nlp:space flight", "nlp:flight test", "NASA", "nlp:nasa program", "nlp:systems engineering", "nlp:conference", "CFE", "nlp:airborne equipment"]}, {"contact": {"email": "james.marshall-1@nasa.gov"}, "date": {"metadataLastUpdated": "2017-08-23"}, "description": "The Software Bus Network application (SBN) is a core Flight System (cFS) application that is a plug in to the Core Flight Executive (cFE) component of the cFS.", "laborHours": 0, "name": "SBN", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/SBN/blob/master/Core%20Flight%20System%20(CFS)%20NOSA%20GSC-16917-1.pdf", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/SBN", "tags": ["nlp:avionic", "CFS", "nlp:flight control", "nlp:software engineering", "nlp:computer network", "NASA", "nlp:systems engineering", "nlp:computer systems program", "nlp:channels (data transmission)", "nlp:applications programs (computers)", "nlp:computer program", "CFE", "nlp:computer programming"]}, {"contact": {"email": "james.marshall-1@nasa.gov"}, "date": {"metadataLastUpdated": "2017-08-23"}, "description": "NASA core Flight System Stored Command Application", "laborHours": 0, "name": "SC", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/SC/blob/master/Core%20Flight%20System%20(CFS)%20NOSA.pdf", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/SC", "tags": ["CFS", "nlp:flight control", "nlp:automatic flight control", "nlp:command and control", "nlp:space flight", "nlp:flight test", "NASA", "nlp:nasa program", "nlp:systems engineering", "nlp:conference", "CFE", "nlp:airborne equipment"]}, {"contact": {"email": "james.marshall-1@nasa.gov"}, "date": {"metadataLastUpdated": "2017-08-23"}, "description": "NASA core Flight System Memory Dwell Application", "laborHours": 0, "name": "MD", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/MD/blob/master/Core%20Flight%20System%20(CFS)%20NOSA.pdf", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/MD", "tags": ["nlp:technology utilization", "CFS", "nlp:data processing equipment", "nlp:computer storage device", "nlp:core", "NASA", "nlp:nasa program", "nlp:conference", "nlp:systems engineering", "nlp:airborne equipment", "nlp:memory (computers)", "CFE", "nlp:magnetic core"]}, {"contact": {"email": "james.marshall-1@nasa.gov"}, "date": {"metadataLastUpdated": "2017-08-23"}, "description": "NASA core Flight System Housekeeping Application", "laborHours": 0, "name": "HK", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/HK/blob/master/Core%20Flight%20System%20(CFS)%20NOSA.pdf", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/HK", "tags": ["nlp:nasa space program", "CFS", "nlp:flight control", "nlp:automatic flight control", "nlp:space flight", "nlp:flight test", "NASA", "nlp:nasa program", "nlp:systems engineering", "nlp:conference", "CFE", "nlp:airborne equipment"]}, {"contact": {"email": "james.marshall-1@nasa.gov"}, "date": {"metadataLastUpdated": "2017-08-23"}, "description": "NASA core Flight System Health Safety", "laborHours": 0, "name": "HS", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/HS/blob/master/Core%20Flight%20System%20(CFS)%20NOSA.pdf", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/HS", "tags": ["CFS", "nlp:safety device", "nlp:aircraft safety", "NASA", "nlp:systems engineering", "nlp:nasa program", "nlp:health", "nlp:systems health monitoring", "nlp:aerospace medicine", "nlp:flight safety", "nlp:safety factor", "CFE", "nlp:safety"]}, {"contact": {"email": "james.marshall-1@nasa.gov"}, "date": {"metadataLastUpdated": "2017-08-23"}, "description": "NASA core Flight System Limit Checker Application", "laborHours": 0, "name": "LC", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/LC/blob/master/Core%20Flight%20System%20(CFS)%20NOSA.pdf", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/LC", "tags": ["nlp:nasa space program", "CFS", "nlp:flight control", "nlp:automatic flight control", "nlp:space flight", "nlp:flight test", "NASA", "nlp:nasa program", "nlp:systems engineering", "nlp:in-flight monitoring", "CFE", "nlp:airborne equipment"]}, {"contact": {"email": "james.marshall-1@nasa.gov"}, "date": {"metadataLastUpdated": "2017-08-23"}, "description": "NASA core Flight System Data Storage Application", "laborHours": 0, "name": "DS", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/DS/blob/master/Core%20Flight%20System%20(CFS)%20NOSA.pdf", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/DS", "tags": ["nlp:data system", "CFS", "nlp:flight control", "nlp:data processing equipment", "nlp:computer storage device", "nlp:flight test", "NASA", "nlp:systems engineering", "nlp:nasa program", "nlp:data management", "nlp:conference", "nlp:data storage", "CFE"]}, {"contact": {"email": "james.marshall-1@nasa.gov"}, "date": {"metadataLastUpdated": "2017-08-23"}, "description": "NASA core Flight System Checksum Application", "laborHours": 0, "name": "CS", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/CS/blob/master/Core%20Flight%20System%20(CFS)%20NOSA.pdf", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/CS", "tags": ["nlp:nasa space program", "CFS", "nlp:flight control", "nlp:automatic flight control", "nlp:space flight", "nlp:flight test", "NASA", "nlp:nasa program", "nlp:systems engineering", "nlp:conference", "CFE", "nlp:airborne equipment"]}, {"contact": {"email": "james.marshall-1@nasa.gov"}, "date": {"metadataLastUpdated": "2017-08-23"}, "description": "NASA core Flight System File Transfer Application", "laborHours": 0, "name": "CF", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/CF/blob/master/Core%20Flight%20System%20(CFS)%20NOSA.pdf", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/CF", "tags": ["nlp:file maintenance (computers)", "CFS", "nlp:flight control", "nlp:automatic flight control", "nlp:technology transfer", "nlp:space flight", "nlp:flight test", "NASA", "nlp:systems engineering", "nlp:nasa program", "nlp:conference", "CFE", "nlp:airborne equipment"]}, {"contact": {"email": "c.l.rumsey@nasa.gov"}, "date": {"metadataLastUpdated": "2017-08-23"}, "description": "refine repository", "laborHours": 0, "name": "refine", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://software.nasa.gov/faq", "name": "Pending Release"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/refine", "tags": ["nlp:igneous rock", "nlp:petrology", "nlp:mineral", "nlp:meteoritic composition", "NASA", "nlp:abundance", "nlp:mathematical model", "nlp:tectonic", "nlp:computer program", "nlp:biological evolution", "nlp:mechanical property"]}, {"contact": {"email": "james.marshall-1@nasa.gov"}, "date": {"metadataLastUpdated": "2017-08-23"}, "description": "NASA core Flight System File Manager Application", "laborHours": 0, "name": "FM", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/FM/blob/master/Core%20Flight%20System%20(CFS)%20NOSA.pdf", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/FM", "tags": ["nlp:nasa space program", "CFS", "nlp:flight control", "nlp:automatic flight control", "nlp:space flight", "nlp:flight test", "NASA", "nlp:nasa program", "nlp:systems engineering", "CFE", "nlp:airborne equipment"]}, {"contact": {"email": "patrick.m.quinn@nasa.gov"}, "date": {"metadataLastUpdated": "2017-08-23"}, "description": "A jQuery plugin implementing a timeline view of data, allowing time range selection as well as keyboard and touch interaction For a basic usage example and a testbed for changes.", "laborHours": 0, "name": "edsc-timeline", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/edsc-timeline/blob/master/LICENSE", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/edsc-timeline", "tags": ["jquery", "nlp:real time operation", "nlp:time dependence", "nlp:tables (data)", "nlp:data processing", "nlp:data reduction", "NASA", "nlp:time signal", "ECHO", "search", "nlp:time measurement", "nlp:test stand", "nlp:data acquisition", "nlp:optimization"]}, {"contact": {"email": "steven.p.hughes@nasa.gov"}, "date": {"metadataLastUpdated": "2017-08-23"}, "description": "The General Mission Analysis Tool (GMAT) is the worlds only enterprise, multi-mission, open source software system for space mission design, optimization, and navigation. The system supports missions in flight regimes ranging from low Earth orbit to lunar, libration point, and deep space missions. GMAT is developed by a team of NASA, private industry, public, and private contributors and is used for real-world mission support, engineering studies, as a tool for education, and public engagement.\r\n\r\nGMAT contains models of real world objects such as spacecraft and thrusters, and analysis \"objects\" such as propagators, plots, and reports. These objects are used in a mission sequence in which the user employs commands supported by the system to model mission events and perform estimation.\r\n\r\nFor a complete list of new features, compatibility changes, and bug fixes, see the Release Notes.  Below are just some of the new capabilities contained in this release. \r\nProduction quality orbit determination (Operational Certification expected in November, 2016)\r\nCode 500 ephemeris propagator\r\nSTK ephemeris file output\r\nWrite command to save GMAT configurations during execution\r\nInclude macro to load GMAT configurations from external sources during execution\r\nMany new built in math functions and parameters\r\n130 pages of new user documentation\r\n", "laborHours": 0, "name": "General Mission Analysis Tool (GMAT) v.R2017a", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://sourceforge.net/p/gmat/git/ci/GMAT-R2016a/tree/License.txt", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://sourceforge.net/projects/gmat/files/GMAT/GMAT-R2016a/", "tags": ["Open Source", "nlp:parameterization", "GSFC", "Design and Integration Tools", "nlp:parameter identification", "nlp:systems analysi", "NASA", "nlp:systems engineering", "nlp:software development tool", "nlp:computer systems program", "nlp:applications programs (computers)", "nlp:space navigation", "nlp:computer program", "nlp:design analysi"]}, {"contact": {"email": "james.mcduffie@jpl.nasa.gov"}, "date": {"metadataLastUpdated": "2017-08-23"}, "description": "This software retrieves a set of atmospheric/surface/instrument parameters from a simultaneous fit to spectra from multiple absorption bands. The software uses an iterative, non-linear retrieval technique (optimal estimation). After the retrieval process has converged, the software performs an error analysis. The products of the software include all quantities needed to understand the information content of the measurement, its uncertainty, and its dependence on interfering atmospheric properties. Spectra from ground-based or space-based measurement with arbitrary observation geometry can be analyzed. The retrieved parameters can be chosen from a large set of atmospheric (e.g., volume mixing ratio of gases or aerosol optical depth), surface (e.g., Lambertian reflection), and instrument (e.g., spectral shift or instrument line shape parameters) parameters. The software uses an accurate, state-of-the-art, multiple-scattering radiative transfer code combined with an efficient polarization approximation to simulate measured spectra. The software enables fast and highly accurate simulations of broad spectral ranges by an optional parallelization of the frequency processing in the radiative transfer model. The framework was written with flexibility in mind. New algorithms and instruments are added by creating additional classes that implement the defined interfaces. Bindings are available for both Python and Lua.", "laborHours": 0, "name": "RtRetrievalFrameworkDoc", "organization": "JPL", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/RtRetrievalFramework/blob/master/LICENSE.txt", "name": "NASA v3"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/RtRetrievalFrameworkDoc", "tags": ["nlp:aerosol", "nlp:radiative transfer", "Framework", "Retrieval", "nlp:absorption spectra", "Earth Science", "Atmosphere", "nlp:algorithm", "NASA", "Forward Model", "nlp:spectral band", "Radiative Transfer", "nlp:visible spectrum", "nlp:spectrum analysi", "nlp:surface propertie", "Python", "nlp:geometry", "Lua", "C++", "nlp:computer program"]}, {"contact": {"email": "jennifer.n.betancourt@nasa.gov"}, "date": {"metadataLastUpdated": "2017-07-07"}, "description": "Astronomy Picture of the Day API service. A microservice written in Python which may be run on Google App Engine with the Flask micro framework.", "identifier": "HQ-APOD", "laborHours": 320, "name": "APOD API", "organization": "HQ", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/apod-api/blob/master/LICENSE", "name": "NASA v3"}, {"name": "ALv2", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/apod-api", "tags": ["nlp:gas turbine engine", "nlp:failure", "nlp:image", "nlp:engine test", "nlp:aircraft engine", "NASA", "API", "nlp:engine monitoring instrument", "nlp:engine design", "nlp:turbofan engine", "Images", "nlp:optimization", "nlp:astronomy"], "homepageURL": "https://github.com/nasa/apod-api", "contributors": ["brian.a.thomas@nasa.gov", "jennifer.n.betancourt@nasa.gov"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2011-12-02"}, "description": "A software application that allows the interactive visualization of multivariate data using a variety of standard techniques, Viewpoints can be used with extremely large data sets.", "identifier": "ARC-16019-1", "laborHours": 21424, "name": "Viewpoints: Software for Visualization of Multivariate Data", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://app.assembla.com/spaces/viewpoints/documents", "tags": ["Open Source", "visualization", "nlp:scientific visualization", "nlp:data processing", "Data and Image Processing", "nlp:software engineering", "NASA", "nlp:data structure", "ARC", "nlp:software development tool", "nlp:data reduction", "nlp:data management", "nlp:applications programs (computers)", "nlp:computer program", "nlp:multivariate statistical analysi"], "homepageURL": "https://app.assembla.com/spaces/viewpoints/wiki/Home", "contributors": ["arc-sra-team@mail.nasa.gov", "creon@nas.nasa.gov"]}, {"contact": {"email": "jpl_ott@jpl.nasa.gov"}, "date": {"metadataLastUpdated": "2016-09-07"}, "description": "The MISR Toolkit is a simplified programming interface to access MISR L1B2, L2 conventional and ancillary data products. It is an interface built upon HDF-EOS that knows about MISR data products.", "identifier": "JPL-MISRToolkit", "laborHours": 73536, "name": "MISR Toolkit", "organization": "JPL", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/MISR-Toolkit/blob/master/LICENSE.txt", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/MISR-Toolkit", "tags": ["nlp:data system", "Visualization", "Earth Science", "Analysis", "nlp:data flow analysi", "U.S. Government Purpose Release", "nlp:interface", "nlp:data processing equipment", "Data and Image Processing", "nlp:data processing", "NASA", "nlp:data sampling", "nlp:digital data", "Toolkit", "nlp:data management", "JPL", "nlp:data acquisition", "nlp:computer programming"], "homepageURL": "https://nasa.github.io/MISR-Toolkit/html/index.html", "contributors": ["jason.duley@nasa.gov", "Brian Rheingans", "Jason Matthews", "Charles Thompson", "Sebastian Val"]}, {"contact": {"email": "larc-sra@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2016-10-03"}, "description": "abaverify is a collection of Python scripts that is used for testing and verifying the behavior of user subroutines for the commercial finite element code Abaqus.", "identifier": "LAR-18938-1", "laborHours": 1184, "name": "Abaqus User Subroutine Verification (abaverify)", "organization": "LaRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/abaverify/blob/master/LICENSE.txt", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/Abaverify", "tags": ["nlp:subroutine", "nlp:finite element method", "Integration Tests", "LaRC", "FEA", "Open Source", "Materials and Processes", "nlp:stability", "nlp:program verification (computers)", "NASA", "nlp:circuit", "Unit Tests", "Abaqus", "Fortran", "nlp:coding", "User Subroutines", "nlp:reliability", "nlp:computer program", "nlp:boundary layer", "nlp:computer programming"], "homepageURL": "https://software.nasa.gov/software/LAR-18938-1", "contributors": ["larc-sra@mail.nasa.gov", "Andrew Bergan", "Frank Leone"]}, {"contact": {"email": "larc-sra@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2016-06-20"}, "description": "The Committee on Earth Observation Satellites (CEOS) has long recognized a need for data processing infrastructure to support Earth science objectives in developing countries.  Forest preservation initiatives, carbon measurement initiatives, water management and agricultural monitoring are just few examples of causes that can benefit greatly from remote sensing data.  Currently, however, many developing nations lack the in-country expertise and computational infrastructure to utilize remote sensing data.\r\n\r\nThe CEOS Data Cube Platform provides a flexible model to address these needs.  The CEOS Data Cube Platform is a data processing platform for Earth science data, with a focus on remote-sensing data.  The platform provides a data ingestion framework that includes support for automated ingestion of a wide variety of remote sensing data products.  The data products are ingested into an N-dimensional data array that abstracts away management of distinct acquisitions.   The platform has a tiered API for data processing and a data/application platform layer for higher-level access.", "identifier": "LAR-18928-1", "laborHours": 1150160, "name": "CEOS Data Cube Platform v.2 (CEOS2)", "organization": "LaRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/ceos-seo/Data_Cube_v2/blob/master/LICENSE", "name": "NASA v3"}, {"name": "ALv2", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/ceos-seo/Data_Cube_v2", "tags": ["Open Source", "nlp:forest", "nlp:earth resource", "Data cube", "nlp:remote sensing", "ceos-seo", "Environmental Science (Earth, Air, Space, Exoplanet)", "NASA", "nlp:data processing", "nlp:earth observations (from space)", "nlp:developing nation", "nlp:satellite observation", "nlp:environmental monitoring", "LaRC", "nlp:earth science", "nlp:data acquisition"], "homepageURL": "https://github.com/ceos-seo/Data_Cube_v2", "contributors": ["Brian.D.Killough@nasa.gov"]}, {"contact": {"email": "larc-sra@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2015-09-21"}, "description": "METRIC model software can be used to calculate evapotranspiration (ET) rates of agricultural fields by executing the Measuring Evapotranspiration at High Resolution with Internalized Calibration (METRIC) model in an ArcGIS Python script.  The model requires input data from Landsat 8 OLI/TIRS and local weather stations.  The creation of this software was motivated by the need to reduce irrigation costs for farmers and provide a means of drought monitoring for the agricultural industry.  This software has the potential to reduce the economic stress on the agricultural industry by enhancing crop productivity and irrigation efficiency.  ", "identifier": "LAR-18665-1", "laborHours": 1424, "name": "Coastal Mid-Atlantic METRIC Model", "organization": "LaRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/NASA-DEVELOP/METRIC/blob/master/LICENSE.md", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/NASA-DEVELOP/METRIC", "tags": ["Open Source", "nlp:cost effectivenes", "nlp:cost", "evapotranspiration", "landsat imagery", "NASA-DEVELOP", "nlp:remote sensing", "Data and Image Processing", "nlp:crop growth", "NASA", "nlp:farm crop", "nlp:computer program", "nlp:agriculture", "nlp:high resolution", "LaRC", "nlp:calibrating", "nlp:model"], "homepageURL": "https://github.com/NASA-DEVELOP/METRIC", "contributors": ["mrb364", "Jwely"]}, {"contact": {"email": "jeffry.w.ely@nasa.gov"}, "date": {"metadataLastUpdated": "2016-06-16"}, "description": "The Drought Severity Assessment Tool (formerly Drought Severity Assessment - Decision Support Tool) will be used by Navajo Nation Department of Water Resource Managers for their monthly drought reports and other activities related to drought monitoring within the region. With small adjustments it is possible for the tool to be used in other locations given the user has already downloaded and processed the proper precipitation data.", "laborHours": 2544, "name": "Drought Severity Assessment Tool (DSAT)", "organization": "LaRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/NASA-DEVELOP/DSAT/blob/master/LICENSE.md", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/NASA-DEVELOP/DSAT", "tags": ["nlp:water resource", "R", "nlp:earth resource", "Drought", "application", "nlp:north america", "NASA-DEVELOP", "nlp:decision support system", "nlp:decision making", "nlp:water", "NASA", "nlp:position (location)", "nlp:precipitation (meteorology)", "water resources", "nlp:region", "nlp:water flow", "resource management"], "homepageURL": "https://github.com/NASA-DEVELOP/DSAT", "contributors": ["mrb364", "Jwely", "vickiely", "Smewhen"]}, {"contact": {"email": "larc-sra@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2016-08-01"}, "description": "Extreme heat causes and exacerbates a number of health problems, leading to hospitalization and death in some cases. The problem of severe heat is notably felt in Maricopa County, Arizona, where the socially disadvantaged and physically vulnerable are especially susceptible to the effects of extreme heat. Several organizations, including the Arizona Department of Health Services and the Phoenix Heat Relief Network, are working to create more effectively placed cooling centers and heat warning systems to aid those with the highest risk of exposure. This project created a Python tool using Aqua Moderate Resolution Imaging Spectrometer (MODIS) land surface temperature parameters to generate heat maps that reference demographics data on extreme heat days. ", "identifier": "LAR-18877-1", "laborHours": 144, "name": "Land Surface Temperature MODIS Visualization (LaSTMoV)", "organization": "LaRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/NASA-DEVELOP/LaSTMoV/blob/master/LICENSE.md", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/NASA-DEVELOP/LaSTMoV", "tags": ["Open Source", "nlp:surface temperature", "MODIS", "Visualization", "nlp:modis (radiometry)", "nlp:surface propertie", "nlp:thermal mapping", "NASA-DEVELOP", "nlp:public health", "Data and Image Processing", "nlp:temperature effect", "NASA", "nlp:imaging spectrometer", "nlp:health", "Land Surface Temperature", "LaRC", "nlp:imaging technique", "nlp:risk"], "homepageURL": "https://github.com/NASA-DEVELOP/LaSTMoV", "contributors": ["mrb364", "Jwely"]}, {"contact": {"email": "larc-sra@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2016-06-24"}, "description": "The DRIP-SLIP model automatically analyzes red band spectral information and soil moisture information derived from Landsat 8 and ASTER and SRTM data, at a fine to moderate resolutions, to determine areas that might be new landslides. This is important to help increase the temporal latency for landslide products that emergency managers, planners, and scientists are able to use in their work.", "identifier": "LAR-18789-1", "laborHours": 352, "name": "DEVELOP DRIP and SLIP Landslide Detection Package (DRIP-SLIP)", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/NASA-DEVELOP/DRIP-SLIP/blob/master/LICENSE.md", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/NASA-DEVELOP/DRIP-SLIP", "tags": ["Open Source", "LANDSAT", "nlp:resolution", "nlp:detection", "NASA-DEVELOP", "nlp:remote sensing", "Data and Image Processing", "nlp:high resolution", "NASA", "nlp:data processing", "nlp:moisture", "nlp:data reduction", "nlp:mathematical model", "nlp:landsat satellite", "precipitation monitoring", "LaRC", "nlp:emergency", "landslide"], "homepageURL": "https://github.com/NASA-DEVELOP/DRIP-SLIP", "contributors": ["aakash.ahamed@nasa.gov"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2015-02-27"}, "description": "The Memory Manager application processes commands, generally from the ground, in order to dump the contents of a memory location, dump the contents of a range of memory locations, load a memory location with specified data, load a range of memory with specified data, or fill an area of memory with the specified fill pattern. Operations can be performed on non-volatile, volatile, and memory mapped I/O.", "identifier": "GSC-16011-1", "laborHours": 24416, "name": "Core Flight System (CFS) Memory Manager Application Version 2", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/MM/blob/master/Core%20Flight%20System%20(CFS)%20NOSA.pdf", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/MM", "tags": ["Open Source", "nlp:data system", "CFS", "Vehicle Management (Space/Air/Ground)", "GSFC", "nlp:data processing equipment", "nlp:computer storage device", "nlp:command and control", "NASA", "nlp:systems engineering", "nlp:data processing", "nlp:position (location)", "nlp:data storage", "nlp:memory (computers)", "CFE", "memory management", "Core Flight System"], "homepageURL": "https://software.nasa.gov/software/GSC-16011-1", "contributors": ["gsfc-softwarerelease@mail.nasa.gov"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2015-03-04"}, "description": "This framework integrates a regional landslide susceptibility map and satellite-based rainfall estimates into a binary decision tree model, considering both daily and antecedent rainfall. Using a regionally distributed, percentile-based threshold approach, the model outputs a pixel-by-pixel nowcast in near real-time at a resolution of 30 arcseconds to identify areas of moderate and high landslide hazard. ", "identifier": "GSC-17452-1", "laborHours": 1840, "name": "Landslide Hazard Assessment for Situational Awareness (LHASA)", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://www.apache.org/licenses/LICENSE-2.0", "name": "NASA v3"}, {"name": "ALv2", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/vightel/ojo-processing", "tags": ["Open Source", "nlp:satellite imagery", "nlp:decision theory", "GSFC", "nlp:decision making", "Environmental Science (Earth, Air, Space, Exoplanet)", "NASA", "nlp:trees (mathematics)", "nlp:map", "nlp:estimate", "earth sciences", "nlp:pixel", "nlp:high resolution", "nlp:hazard", "nlp:rain", "landslides"], "homepageURL": "http://ojo-streamer.herokuapp.com/", "contributors": ["dalia.b.kirschbaum@nasa.gov"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2010-09-27"}, "description": "MCP is a high-performance file copy utility that achieves performance gains through parallelization. Multiple files and parts of single files are processed in parallel using multiple threads on multiple processors. The program employs the OpenMP and MPI programming models. ", "identifier": "ARC-16494-1", "laborHours": 16, "name": "Multi-threaded Copy Program (MCP)", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://www.example.com", "name": "NASA v3"}, {"name": "LGPL", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/pkolano/mutil", "tags": ["Open Source", "file copying", "nlp:performance prediction", "Data Servers Processing and Handling", "nlp:linear programming", "NASA", "nlp:parallel processing (computers)", "ARC", "mutil", "nlp:parallel programming", "nlp:computer program", "nlp:mathematical model", "nlp:applications programs (computers)", "nlp:central processing unit", "system administration", "nlp:performance test", "nlp:computer programming"], "homepageURL": "https://pkolano.github.io/projects/mutil.html", "contributors": ["paul.kolano@nasa.gov"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2016-04-26"}, "description": "RACE is a software architecture and framework for configurable, highly concurrent and distributed message based systems.  RACE can be used to rapidly build simulations that span several machines (including synchronized displays), interface existing hardware simulators and other live data feeds, and incorporate sophisticated visualization components such as NASAs WorldWind viewer. RACE is implemented as a distributed actor system that runs within Java virtual machines.", "identifier": "ARC-17749-1", "laborHours": 23232, "name": "RACE - Runtime for Airspace Concept Evaluation", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/NASARace/race/blob/master/LICENSE.txt", "name": "NASA v3"}, {"name": "ALv2", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/NASARace/race", "tags": ["Open Source", "Airspace Simulation", "nlp:simulator", "nlp:scientific visualization", "nlp:architecture (computers)", "nlp:computerized simulation", "nlp:simulation", "Aeronautics", "NASA", "nlp:computer program", "ARC", "nlp:virtual reality", "nlp:java (programming language)", "nlp:systems simulation", "nlp:display device"], "homepageURL": "https://github.com/NASARace/race/blob/master/README.md", "contributors": ["peter.c.mehlitz@nasa.gov"]}, {"contact": {"email": "larc-sra@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2017-02-15"}, "description": "PRECiSA (Program Round-off Error Certifier via Static Analysis) is a fully automatic analyzer for the estimation of round-off errors of floating-point valued functional expressions. The input to PRECiSA is a program composed of floating-point valued functions.", "identifier": "LAR-19227-1", "laborHours": 7120, "name": "Program Round-Off Certifier via Static Analysis (PRECiSA) with Kodiak Integration", "organization": "LaRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/PRECiSA/blob/master/LICENSE.pdf", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/PRECiSA", "tags": ["Floating-point Round-off Errors", "nlp:spectrum analysi", "nlp:floating point arithmetic", "nlp:functions (mathematics)", "nlp:measure and integration", "nlp:systems analysi", "Static Analysis", "NASA", "nlp:error", "nlp:error analysi", "PVS", "nlp:error function", "nlp:estimating", "LaRC", "nlp:computer program"], "homepageURL": "http://precisa.nianet.org", "contributors": ["cesar.a.munoz@nasa.gov"]}, {"contact": {"email": "larc-sra@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2016-08-19"}, "description": "The communication module of ICAROUS enables data transfer between ICAROUS and other off board entities, e.g., ground stations, other air traffic, via the open source MAVLink protocol (http://qgroundcontrol.org/mavlink/start).  The decision making module of ICAROUS provides a framework to monitor incoming data from aircraft sensors and data links for conflicts, e.g., violations of keep-in/keep-out regions, collision hazards, weather hazards, and resolve these conflicts with the help of the core ICAROUS algorithms.\r\n", "identifier": "LAR-19281-1", "laborHours": 299392, "name": "Independent Configurable Architecture for Reliable Operations of Unmanned Systems with Distributed On-board Services (ICAROUS-2)", "organization": "LaRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/icarous/blob/master/LICENSES/ICAROUS-NOSA.pdf", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/icarous", "tags": ["Open Source", "nlp:weather", "nlp:communication network", "nlp:protocol (computers)", "nlp:ground-air-ground communication", "nlp:air traffic control", "nlp:flight hazard", "NASA", "Geofencing", "UAS", "Autonomous Systems", "nlp:aircraft communication", "nlp:collision avoidance", "nlp:data link", "LaRC", "nlp:data transmission", "Detect and Avoid"], "homepageURL": "https://shemesh.larc.nasa.gov/fm/ICAROUS/", "contributors": ["cesar.a.munoz@nasa.gov"]}, {"contact": {"email": "larc-sra@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2016-09-14"}, "description": "PolyCARP is a package of algorithms, including both their formal models and software implementations, for computing containment, collision, resolution, and recovery information for polygons. The intended applications of PolyCARP are related, but not limited, to safety critical systems in air traffic management. One application is weather avoidance. A weather cell can be approximated by a polygon, and PolyCARP provides algorithms to detect whether a trajectory will intersect such a polygon in the near future and will provide maneuver guidance to avoid the polygon. If the trajectory is inside the polygon at the current time, PolyCARP provides algorithms for maneuver guidance to exit the polygon. Another application is ensuring that an aircraft stays inside a predetermined safety region, also known as assured containment, and PolyCARP provides algorithms that ensure that a point is inside or outside a particular polygonal region. Another application is obstacle avoidance by an aircraft. There are several functionalities provided by PolyCARP. There are algorithms to insure that a point is contained in or excluded from a polygon. There are also collision detection algorithms that determine if a moving point intersects a polygon, including the case where the polygon is moving or even warping over time, as well as where the polygon and the point are following piecewise linear trajectories. There are algorithms that resolve potential collisions between and point and a polygon by providing collision-free trajectories, and there are algorithms that compute new trajectories to regain separation from a polygon.", "identifier": "LAR-18798-1", "laborHours": 110528, "name": "PolyCARP: Algorithms and Software for Computations with Polygons", "organization": "LaRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/PolyCARP/blob/master/LICENSES/PolyCARP-NOSA.pdf", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/polycarp", "tags": ["Open Source", "nlp:real time operation", "nlp:algorithm", "nlp:air traffic control", "nlp:detection", "nlp:aircraft safety", "nlp:aircraft guidance", "NASA", "Geofencing", "Autonomous Systems", "UAV", "nlp:collision avoidance", "nlp:flight safety", "LaRC", "nlp:computer program", "nlp:warning system"], "homepageURL": "https://shemesh.larc.nasa.gov/fm/PolyCARP", "contributors": ["cesar.a.munoz@nasa.gov"]}, {"contact": {"email": "larc-sra@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-04-23"}, "description": "DAIDALUS is a reference implementation in Java and C++ of RTCA-228 detect and avoid concept for the integration of Unmanned Aircraft Systems into civil airspace. DAIDALUS consists of algorithms for determining the current well-clear status between two aircraft and for predicting a well-clear violation within a lookahead time, assuming non-maneuvering trajectories. In the case of a predicted well-clear violation, DAIDALUS also provides an algorithm that computes the time interval of well-clear violation. Furthermore, DAIDALUS implements algorithms for computing prevention bands, assuming a simple kinematic trajectory model. Prevention bands are ranges of track, ground speed, and vertical speed maneuvers that are predicted to be in well-clear violation within a given lookahead time.\r\n", "identifier": "LAR-19282-1", "laborHours": 207456, "name": "Detect and Avoid Alerting Logic for Unmanned Systems (DAIDALUS) with Dynamic Well-Clear Separation Volumes", "organization": "LaRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/WellClear/blob/master/DAIDALUS/LICENSES/DAIDALUS-NOSA.pdf", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/wellclear", "tags": ["Open Source", "nlp:aircraft maneuver", "nlp:real time operation", "nlp:algorithm", "Well-Clear", "nlp:trajectory analysi", "nlp:air traffic control", "nlp:measure and integration", "Aeronautics", "NASA", "UAS", "nlp:trajectory", "LaRC", "nlp:high speed", "Detect and Avoid", "nlp:aircraft detection", "nlp:trajectory control"], "homepageURL": "https://shemesh.larc.nasa.gov/fm/DAIDALUS/", "contributors": ["cesar.a.munoz@nasa.gov"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2016-08-18"}, "description": "The Prognostics Algorithm Library is a suite of algorithms implemented in the MATLAB programming language for model-based prognostics (remaining life computation). It includes algorithms for state estimation and prediction, including uncertainty propagation. The algorithms take as inputs component models developed in Matlab, and perform estimation and prediction functions. The library allows the rapid development of prognostics solutions for given models of components and systems. Different algorithms can be easily swapped to do comparative studies and evaluations of different algorithms to select the best for the application at hand.", "identifier": "ARC-17735-1", "laborHours": 384, "name": "Prognostics Algorithm Library", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/PrognosticsAlgorithmLibrary/blob/master/LICENSE.pdf", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/PrognosticsAlgorithmLibrary", "tags": ["nlp:computation", "Framework", "Open Source", "nlp:algorithm", "nlp:stochastic processe", "NASA", "Autonomous Systems", "Health Management", "nlp:programming language", "nlp:systems analysi", "Prognostics", "ARC", "nlp:prediction analysis technique", "nlp:mathematical model", "nlp:state estimation", "PHM", "Toolbox", "nlp:prediction", "nlp:computer programming"], "homepageURL": "https://github.com/nasa/PrognosticsAlgorithmLibrary/wiki", "contributors": ["matthewjdaigle"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2016-08-18"}, "description": "The Prognostics Model Library is a modeling framework focused on defining and building models for prognostics (computation of remaining useful life) of engineering systems, and provides a set of prognostics models for select components developed within this framework, suitable for use in prognostics applications for these components. The library currently includes models for valves, pumps, and batteries. The Prognostics Model Library is implemented in MATLAB. The implementation consists of a set of utilities for defining a model (specifying variables, parameters, and equations), simulating the model, and embedding it within common model-based prognostics algorithms. A user can use existing models within the library or construct new models with the provided framework.", "identifier": "ARC-17736-1", "laborHours": 656, "name": "Prognostics Model Library", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/PrognosticsModelLibrary/blob/master/LICENSE.pdf", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/PrognosticsModelLibrary", "tags": ["nlp:control valf", "nlp:computation", "Framework", "nlp:dynamic model", "Open Source", "NASA", "Autonomous Systems", "nlp:model", "nlp:independent variable", "Health Management", "nlp:electric battery", "nlp:systems analysi", "Prognostics", "ARC", "nlp:mathematical model", "nlp:life (durability)", "PHM", "Toolbox", "nlp:pump"], "homepageURL": "https://github.com/nasa/PrognosticsModelLibrary/wiki", "contributors": ["matthewjdaigle"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2016-04-18"}, "description": "The QuIP interpreter, a software environment for QUick image processing, uses an interactive scripting language designed to facilitate use by non-expert users, through features such as context-sensitive automatic response completion and integrated documentation.  The package includes a number of script packages that implement high-, medium-, and low-level functions (e.g., analysis of eye images for human gaze tracking, feature tracking, and image filtering). The environment also includes facilities for displaying images on screen, drawing and overlaying graphics, and constructing graphical user interfaces using the scripting language.  Currently supported platforms are *NIX (tested on Mac OS X and Linux), and Apple iOS.", "identifier": "ARC-16295-1A", "laborHours": 157216, "name": "Portable Environment for Quick Image Processing (QuIP)", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/QuIP/blob/master/LICENSE.PDF", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/QuIP", "tags": ["Visualization", "Analysis", "Framework", "Data and Image Processing", "Psychophysics", "nlp:computer systems program", "nlp:eye (anatomy)", "Open Source", "nlp:computer graphic", "Graphics", "NASA", "nlp:unix (operating system)", "Image Processing", "nlp:human-computer interface", "nlp:image analysi", "Mobile", "nlp:computer program", "Simulation", "ARC", "Toolkit", "nlp:software development tool", "nlp:graphical user interface", "nlp:image processing"], "homepageURL": "https://github.com/nasa/QuIP/wiki", "contributors": ["Jeff Mulligan"]}, {"contact": {"email": "support@earthdata.nasa.gov"}, "date": {"metadataLastUpdated": "2016-02-29"}, "description": "This repository contains the configuration used by Worldview on the Earthdata site. See the Worldview repository for more information. This code was originally developed at NASA/Goddard Space Flight Center for the Earth Science Data and Information System (ESDIS) project.", "laborHours": 21152, "name": "Worldview Options Eosdis", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa-gibs/worldview-options-eosdis/blob/master/LICENSE.md", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa-gibs/worldview-options-eosdis", "tags": ["nlp:nasa space program", "Tiled WMS", "nlp:data base", "nlp:space flight", "gibs", "NASA", "nlp:nasa program", "nlp:systems engineering", "global imagery browse services", "onearth", "eosdis", "branding", "nlp:aerospace science", "nlp:earth science", "nlp:data system", "nlp:coding", "nlp:information system", "earth data science", "worldview"], "homepageURL": "https://github.com/nasa-gibs/worldview-options-eosdis", "contributors": ["support@earthdata.nasa.gov"]}, {"contact": {"email": "support@earthdata.nasa.gov"}, "date": {"metadataLastUpdated": "2016-01-28"}, "description": "This repository contains the wireframes and designs for NASA Worldview. This code was originally developed at NASA/Goddard Space Flight Center for the Earth Science Data and Information System (ESDIS) project.", "laborHours": 6896, "name": "Worldview Design", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa-gibs/worldview-design/blob/master/LICENSE", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa-gibs/worldview-design", "tags": ["nlp:nasa space program", "Tiled WMS", "nlp:data base", "nlp:space flight", "gibs", "NASA", "nlp:nasa program", "nlp:systems engineering", "global imagery browse services", "onearth", "eosdis", "nlp:aerospace science", "nlp:earth science", "nlp:data system", "nlp:coding", "design", "nlp:information system", "earth data science", "worldview"], "homepageURL": "https://github.com/nasa-gibs/worldview-design", "contributors": ["support@earthdata.nasa.gov"]}, {"contact": {"email": "support@earthdata.nasa.gov"}, "date": {"metadataLastUpdated": "2015-05-05"}, "description": "This repository contains the generic branding with basic configuration for NASA Worldview.This code was originally developed at NASA/Goddard Space Flight Center for the Earth Science Data and Information System (ESDIS) project.", "laborHours": 176, "name": "Worldview Options Template", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa-gibs/worldview-options-template/blob/master/LICENSE.md", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa-gibs/worldview-options-template", "tags": ["nlp:nasa space program", "Tiled WMS", "nlp:data base", "nlp:space flight", "gibs", "NASA", "nlp:nasa program", "nlp:systems engineering", "global imagery browse services", "onearth", "eosdis", "branding", "nlp:aerospace science", "nlp:earth science", "nlp:data system", "nlp:coding", "nlp:information system", "earth data science", "worldview"], "homepageURL": "https://github.com/nasa-gibs/worldview-options-template", "contributors": ["support@earthdata.nasa.gov"]}, {"contact": {"email": "larc-sra@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2016-01-22"}, "description": "The WinASSIST program uses a rule-oriented language to automatically generate input files for the SURE/WinSURE program. The user describes the failure behavior and recovery behavior of a fault-tolerant computer system in an abstract language. The WinASSIST program then automatically generates a corresponding semi-Markov model. The abstract language allows efficient description of large, complex systems. A one-page WinASSIST-language description may result in a semi-Markov model with thousands of states and transitions. The WinASSIST program also provides model-reduction techniques to facilitate efficient modeling of large systems.", "identifier": "LAR-16060-1", "laborHours": 14528, "name": "WinASSIST: (Windows Abstract Semi-Markov Specification Interface To The SURE Tool)", "organization": "LaRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/WinASSIST/blob/master/src/README", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/WinASSIST", "tags": ["Open Source", "nlp:computer systems performance", "nlp:fault tolerance", "nlp:markov processe", "nlp:programming language", "Design and Integration Tools", "Markov Model Generation", "NASA", "nlp:failure analysi", "nlp:computer technique", "nlp:mathematical model", "nlp:computer", "Reliability Analysis", "LaRC", "nlp:computer program", "Fault Tolerance", "nlp:computer programming"], "homepageURL": "https://github.com/nasa/WinASSIST", "contributors": ["rwbutler4"]}, {"contact": {"email": "larc-sra@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2016-01-22"}, "description": "This package is used by aerospace flight software developers to predict the reliability of flight-critical computer processes.", "identifier": "LAR-16059-1", "laborHours": 24544, "name": "Windows Semi-Markov Range Evaluator (WinSURE)", "organization": "LaRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/WinSURE", "tags": ["Open Source", "nlp:airborne/spaceborne computer", "Design and Integration Tools", "nlp:reliability analysi", "Markov Model Generation", "nlp:software engineering", "NASA", "nlp:reliability engineering", "nlp:computer technique", "nlp:computer systems program", "nlp:computer", "Reliability Analysis", "nlp:applications programs (computers)", "nlp:reliability", "LaRC", "nlp:computer program", "Fault Tolerance"], "homepageURL": "https://github.com/nasa/WinSURE", "contributors": ["rwbutler4"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2011-09-13"}, "description": "AXCS enables smartphones and other mobile devices to be utilized as a ground-based test bed for operations in extreme environments. For NASA, the technology is currently being used to evaluate hardware for balloon launches. The software's tool kits provide environmental and situational measurements, command and data handing (CD&H) functions, events timing, data logging, and communications with external devices. ", "identifier": "ARC-16721-1", "laborHours": 5392, "name": "Autonomous eXplorer Control System (AXCS)", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/cboshuizen/AXCS/blob/849191ba5301b0d1af0946ff787191409e1f1c47/src/gov/nasa/arc/axcs/IOService.java", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/cboshuizen/AXCS", "tags": ["Open Source", "operations", "nlp:data system", "nlp:ground operational support system", "nlp:ground test", "nlp:remote control", "nlp:balloon", "nlp:command and control", "mobile devices", "NASA", "nlp:ground based control", "ARC", "nlp:computer systems program", "nlp:test stand", "Operations", "nlp:data acquisition"], "homepageURL": "https://github.com/cboshuizen/AXCS", "contributors": ["arc-sra-team@mail.nasa.gov"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2015-01-08"}, "description": "Savors is a tool for security event monitoring, analysis, and response. The technology scales to real-world environments and uses high-end computing resources on-demand to compile behavior profiles that point to anomalous behavior. Auralization allows both monitoring and analysis to be performed in parallel and draws attention to critical events in one tool when utilizing another. Remote data access and response capabilities across distributed resources are enabled using grid computing that provides a secure, single sign-on environment.", "identifier": "ARC-16186-1", "laborHours": 2816, "name": "Savors: A Scalable Aural-Visual Environment for Security Event Monitoring, Analysis, And Response", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/pkolano/savors", "tags": ["Open Source", "nlp:computation", "nlp:security", "Design and Integration Tools", "nlp:access control", "nlp:adult", "nlp:computer network", "NASA", "nlp:parallel processing (computers)", "ARC", "nlp:distributed processing", "nlp:computational grid", "nlp:computer", "nlp:computer information security"], "homepageURL": "https://pkolano.github.io/projects/savors.html", "contributors": ["arc-sra-team@mail.nasa.gov"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2013-04-26"}, "description": "This innovation will query using a suite of operators in the Netmark/XDB query language to retrieve elements based on the absolute value of tags in the XML source. In an earlier version of the software, element retrieval was based solely on \"full-text\" term searches of the tags and their values. ", "identifier": "ARC-16119-1B", "laborHours": 96848, "name": "Netmark eXtensible DataBase, Data Access and Retrieval Composition (XDB3-DARC)", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://sourceforge.net/projects/darcxdb3", "tags": ["Open Source", "nlp:data base", "nlp:indexes (documentation)", "nlp:query language", "Data Servers Processing and Handling", "nlp:software engineering", "NASA", "nlp:computer program", "XML", "ARC", "nlp:software development tool", "Data Warehousing", "nlp:data base management system", "nlp:information retrieval", "nlp:data retrieval", "Front-Ends", "nlp:linguistic"], "homepageURL": "https://sourceforge.net/projects/darcxdb3", "contributors": ["arc-sra-team@mail.nasa.gov", "Chris Knight"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2016-01-11"}, "description": "The libnfg software library describes how humans interact with their environment and with other humans. The tool provides a Monte Carlo analysis of user-specified \"network-form games,\" which are flexible modeling methodologies that combine Bayes nets and game theory to model complex systems.", "identifier": "ARC-16764-1", "laborHours": 72544, "name": "Network-Form Game Software Library (libnfg)", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "http://ritchielee.net/wp-content/uploads/2015/11/libnfg-snap-1.0.zip", "tags": ["Open Source", "nlp:bayes theorem", "nlp:complex system", "nlp:computer programming", "nlp:systems analysi", "NASA", "nlp:monte carlo method", "ARC", "nlp:software development tool", "nlp:computer systems program", "nlp:game theory", "Crew and Life Support", "nlp:computer program", "nlp:network analysi"], "homepageURL": "http://ritchielee.net/software/libnfg-snap-1-0/", "contributors": ["arc-sra-team@mail.nasa.gov"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2011-07-20"}, "description": "AutoBayes uses extended Bayesian networks, a powerful symbolic system, and algorithm schemas to automatically generate efficient and customized programs for data analysis. It generates a standardized design document containing a graphical representation of the Bayesian network and of the details regarding the code's generation.", "identifier": "ARC-16276-1", "laborHours": 26928, "name": "AutoBayes: Automatic Design of Customized Analysis Algorithms and Programs", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://ti.arc.nasa.gov/opensource/nosa/autobayes", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://ti.arc.nasa.gov/opensource/projects/autobayes", "tags": ["Open Source", "nlp:bayes theorem", "nlp:algorithm", "nlp:data processing", "Data and Image Processing", "nlp:systems analysi", "NASA", "nlp:systems engineering", "ARC", "nlp:data reduction", "nlp:computer programming", "nlp:computer aided design", "nlp:computer program", "nlp:network analysi"], "homepageURL": "https://ti.arc.nasa.gov/opensource/projects/autobayes/", "contributors": ["arc-sra-team@mail.nasa.gov"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2010-09-10"}, "description": "MPD is a powerful and effective iterative algorithm for signal decomposition and feature extraction. The technology decomposes any signal into linear combinations of its dictionary elements, or \"atoms.\" ", "identifier": "ARC-16345-1", "laborHours": 400, "name": "Highly Scalable Matching Pursuit Signal Decomposition Algorithm (MPD)", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://ti.arc.nasa.gov/m/opensource/mpd/nosa.pdf", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://ti.arc.nasa.gov/opensource/projects/mpd", "tags": ["Open Source", "nlp:signal transmission", "nlp:computation", "nlp:algorithm", "nlp:pattern recognition", "nlp:extraction", "nlp:signal analysi", "Data and Image Processing", "nlp:signal analyzer", "NASA", "nlp:decomposition", "ARC", "nlp:signal processing", "nlp:pursuit tracking"], "homepageURL": "https://c3.nasa.gov/dashlink/resources/125/", "contributors": ["arc-sra-team@mail.nasa.gov"]}, {"contact": {"email": "larc-sra@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2013-03-28"}, "description": "The Hypatheon suite of software tools provide a searchable database capability for the specialized domain of formalized mathematics. The technology is designed to be a companion to a specific tool called PVS, which supports an emerging type of advanced software verification intended for safety-critical systems. Hypatheon aims to enhance PVS users' productivity by first indexing the mathematical theories rendered in the PVS specification language, then making their contents searchable by an interactive software tool.", "identifier": "LAR-18232-1", "laborHours": 7296, "name": "Hypatheon-Searchable Database Capability for Formalized Mathematics", "organization": "LaRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/pvslib/tree/master/Hypatheon-1.2", "tags": ["Open Source", "nlp:data base", "nlp:specification", "Data and Image Processing", "nlp:software engineering", "NASA", "nlp:program verification (computers)", "nlp:software development tool", "nlp:computer systems program", "nlp:proving", "nlp:applications programs (computers)", "LaRC", "nlp:computer program", "nlp:computer programming"], "homepageURL": "https://software.nasa.gov/software/LAR-18232-1", "contributors": ["larc-sra@mail.nasa.gov"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2016-01-11"}, "description": "This software allows the user to specify a time series over multiple variables to search within massive datasets. The tool will return a listing of events (a time series) from the database that spans multiple variables and is within a threshold distance from the query. Experiments on numerous real aviation datasets have demonstrated the algorithm's capability to uncover potential aircraft safety events (as validated by multiple aviation safety experts and airlines). ", "identifier": "ARC-16452-1", "laborHours": 240, "name": "Multivariate Time Series Search Capability to Identify Complex Patterns in Large Datasets", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://ti.arc.nasa.gov/opensource/nosa/mts-search/", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://ti.arc.nasa.gov/opensource/projects/mts-search", "tags": ["Open Source", "nlp:data base", "nlp:time series analysi", "nlp:query language", "nlp:searching", "nlp:algorithm", "nlp:aircraft safety", "Data and Image Processing", "NASA", "ARC", "nlp:software development tool", "nlp:computer program", "nlp:multivariate statistical analysi", "nlp:safety"], "homepageURL": "https://ti.arc.nasa.gov/opensource/projects/mts-search/", "contributors": ["arc-sra-team@mail.nasa.gov"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2012-03-31"}, "description": "Providing a toolbox of functionality for MATLAB, this NASA-developed software detects precursor wiring faults (e.g., chafing) in shielded impedance-controlled cabling using measurements from off-the-shelf, time-domain reflectometry or vector-network analyzer hardware. The technology combines high-fidelity analytical physics models for signal propagation with fast Bayesian inference algorithms for intrinsic cable and fault-parameter retrieval.", "identifier": "ARC-17046-1", "laborHours": 7504, "name": "Physics-Model-Based Wiring Fault Detection Toolbox for MATLAB", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://ti.arc.nasa.gov/m/opensource/nosa/Wiring%20Fault%20Detection%20Toolbox%20for%20MATLAB%20NOSA.pdf", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://ti.arc.nasa.gov/opensource/project/wiring", "tags": ["Open Source", "nlp:bayes theorem", "nlp:electric network", "nlp:real time operation", "nlp:algorithm", "nlp:detection", "nlp:neural net", "nlp:inference", "NASA", "ARC", "nlp:fault detection", "nlp:optical measurement", "nlp:reflectometer", "Electronics and Electrical Power"], "homepageURL": "https://ti.arc.nasa.gov/opensource/project/wiring/", "contributors": ["arc-sra-team@mail.nasa.gov"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2016-07-26"}, "description": "Desktop Exploration of Remote Terrain (DERT) is a software tool for exploring large Digital Terrain Models (DTMs) in 3D. It aids in understanding topography and spatial relationships of terrain features, as well as performing simple analysis tasks relevant to the planetary science community.", "identifier": "ARC-17647-1", "laborHours": 31696, "name": "Desktop Exploration of Remote Terrain (DERT)", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/DERT/blob/master/LICENSE/DERT_NOSA.pdf", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/DERT", "tags": ["Environmental Science (Earth, Air, Space, Exoplanet)", "nlp:computer systems program", "Open Source", "nlp:terrain analysi", "NASA", "Air", "nlp:terrain", "nlp:computer technique", "Earth", "nlp:task", "Environmental Science", "nlp:topography", "Exoplanet", "ARC", "nlp:software development tool", "Space", "nlp:lunar topography", "nlp:computer program", "nlp:computer programming"], "homepageURL": "https://github.com/nasa/DERT", "contributors": ["arc-sra-team@mail.nasa.gov"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2012-04-05"}, "description": "GeoCam is a geospatial system for disaster response that consists of (1) low-cost consumer hardware (i.e., a digital camera or cell phone, position/orientation sensors, and an optional embedded controller) and (2) a Web-based workflow that enables images and other geo-referenced data to be shared and viewed in a variety of ways. GeoCam includes software that computes image location and provides for geo-rectification, KML-formatted geospatial data generation, image management, and geo-referenced data sharing.", "identifier": "ARC-16088-1A", "laborHours": 272, "name": "GeoCam, Version 2", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/geocam/geocamShare/blob/master/COPYING", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/geocam/geocamShare", "tags": ["nlp:camera", "nlp:cost effectivenes", "Environmental Science (Earth, Air, Space, Exoplanet)", "nlp:position (location)", "nlp:computer systems program", "Open Source", "nlp:controller", "NASA", "Air", "nlp:sensor", "nlp:image processing", "Earth", "Environmental Science", "nlp:low cost", "Exoplanet", "ARC", "Space", "nlp:management system", "nlp:computer program"], "homepageURL": "https://github.com/geocam/geocamShare", "contributors": ["arc-sra-team@mail.nasa.gov"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2015-12-16"}, "description": "The Kepler archive contains time-series data calibrated and reduced from detector pixels. The pipelined reduction includes the removal of time-series trends systematic to a spacecraft and its environment.", "identifier": "ARC-16805-1", "laborHours": 11104, "name": "Kepler Community Data Analysis Tools (PyKE)", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://keplerscience.arc.nasa.gov/software.html#pyke", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/KeplerGO/PyKE/", "tags": ["nlp:time series analysi", "Environmental Science (Earth, Air, Space, Exoplanet)", "Open Source", "nlp:data base", "nlp:data reduction", "NASA", "Air", "Earth", "Environmental Science", "nlp:data processing", "Exoplanet", "nlp:data management", "ARC", "nlp:trend", "Space", "nlp:spacecraft environment", "nlp:data system", "nlp:real time operation", "nlp:data acquisition"], "homepageURL": "http://keplerscience.arc.nasa.gov/software.html#pyke", "contributors": ["arc-sra-team@mail.nasa.gov"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2011-03-30"}, "description": "EUROPA is a general-purpose, reusable, artificial intelligence software system. The tool generates plans for performing complex activities in parallel. Functionality includes the capability of verifying that a plan satisfies all constraints. ", "identifier": "ARC-15936-1", "laborHours": 122064, "name": "Extendable Uniform Remote Operations Planning Architecture (EUROPA) 2.1", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/europa", "tags": ["Open Source", "nlp:planning", "nlp:scheduling", "nlp:architecture (computers)", "nlp:europa 3 launch vehicle", "nlp:software engineering", "NASA", "Autonomous Systems", "ARC", "nlp:software development tool", "nlp:applications programs (computers)", "nlp:computer program", "nlp:artificial intelligence", "nlp:management planning"], "homepageURL": "https://github.com/nasa/europa", "contributors": ["arc-sra-team@mail.nasa.gov"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2015-01-09"}, "description": "The NASA Tensegrity Robotics Toolkit (NTRT) is a collection of C++  and MATLAB software modules for the modeling, simulation, and control of Tensegrity Robots.  Tensegrity Robots are a biologically inspired approach to building robots based on the tension networks of tensegrity structures, which have no rigid connections between elements.  The NTRT was created to enable: the rapid co-exploration of structures and controls in a physics based simulation environment; the development of tensegrity robotics algorithms such as structural analysis, kinematics, and motion planning; and the validation of the algorithms and controls on hardware prototypes of the tensegrity robots.\r\n\r\n", "identifier": "ARC-17093-1", "laborHours": 59904, "name": "NASA Tensegrity Robotics Toolkit (NTRT) v1", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/NASA-Tensegrity-Robotics-Toolkit/NTRTsim/blob/master/LICENSE", "name": "NASA v3"}, {"name": "ALv2", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/NASA-Tensegrity-Robotics-Toolkit/NTRTsim", "tags": ["Open Source", "nlp:robot dynamic", "nlp:robot control", "nlp:algorithm", "nlp:robotic", "nlp:simulation", "nlp:computerized simulation", "nlp:robot", "NASA", "Autonomous Systems", "ARC", "nlp:kinematic", "nlp:structural analysi", "nlp:prototype"], "homepageURL": "https://github.com/NASA-Tensegrity-Robotics-Toolkit/NTRTsim", "contributors": ["arc-sra-team@mail.nasa.gov"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2015-02-28"}, "description": "This implementation of the Dantzig-Wolfe decomposition is built upon the GNU Linear Programming Kit. The technology provides a command-line tool for solving properly decomposed linear programs.", "identifier": "ARC-16432-1", "laborHours": 66784, "name": "Parallel Dantzig-Wolfe Decomposition", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://sourceforge.net/p/dwsolver/code/ci/master/tree/", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/alotau/dwsolver", "tags": ["Open Source", "nlp:programming environment", "Optimization", "nlp:linear programming", "nlp:command and control", "nlp:machine tool", "Aeronautics", "NASA", "nlp:systems engineering", "ARC", "nlp:software development tool", "nlp:technology transfer", "Linear Programming", "nlp:computer program", "nlp:optimization", "nlp:computer programming"], "homepageURL": "https://github.com/nasajoey/dwsolver", "contributors": ["Joseph Rios"]}, {"contact": {"email": "larc-sra@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2015-12-03"}, "description": "NASTRAN is a finite element analysis program that was originally developed for NASA in the late 1960s under U.S. government funding for the aerospace industry. The software suite provides engineers a comprehensive simulation solution for insight into structural behavior. NASTRAN source code is integrated in a number of different software packages, which are distributed by a range of companies.", "identifier": "LAR-16804-GS", "laborHours": 235200, "name": "NASA STRuctrual ANalysis (NASTRAN)", "organization": "LaRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/NASTRAN-93/blob/master/NASA%20Open%20Source%20Agreement-NASTRAN.doc", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/NASTRAN-95", "tags": ["Open Source", "nlp:aerospace industry", "LaRC", "Design and Integration Tools", "nlp:computerized simulation", "nlp:simulation", "Structural Analysis", "nlp:finite element method", "NASA", "nlp:nasa program", "nlp:aerospace engineering", "nlp:government/industry relation", "nlp:applications programs (computers)", "CAD", "FEA", "nlp:computer program", "nlp:structural analysi", "NASTRAN"], "homepageURL": "https://github.com/nasa/NASTRAN-95", "contributors": ["larc-sra@mail.nasa.gov", "jasonduley"]}, {"contact": {"email": "jpl_ott@jpl.nasa.gov"}, "date": {"metadataLastUpdated": "2015-10-12"}, "description": "VICAR, which stands for Video Image Communication And Retrieval, is a general purpose image processing software system that has been developed since 1966 to digitally process multi-dimensional imaging data. VICAR was developed primarily to process images from the Jet Propulsion Laboratory's unmanned planetary spacecraft. It is now used for a variety of other applications including biomedical image processing, cartography, earth resources, astronomy, and geological exploration. ", "identifier": "NPO-49845-1", "laborHours": 690832, "name": "VICAR - Video Image Communication And Retrieval", "organization": "JPL", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/VICAR/blob/master/LICENSE.md", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/VICAR", "tags": ["Visualization", "Analysis", "Data and Image Processing", "nlp:data retrieval", "VICAR", "Open Source", "nlp:space exploration", "Graphics", "NASA", "nlp:imaging technique", "Image Processing", "nlp:earth resource", "nlp:image analysi", "nlp:data processing", "nlp:computer program", "Toolkit", "JPL", "nlp:video data", "nlp:image processing", "nlp:earth resources program"], "homepageURL": "http://www-mipl.jpl.nasa.gov/vicar_open.html", "contributors": ["Bob Deen"]}, {"contact": {"email": "grc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2015-09-08"}, "description": "IPv6 Extension module for Python that allows a user to enable IPv6 features not yet available for any Python versions.  Currently, it allows for IPv6 flow labels to be enabled for a given Python socket object.", "identifier": "LEW-19323-1", "laborHours": 368, "name": "IPv6 Python Extension Module", "organization": "GRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/ipv6_python/blob/master/LICENSE", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/ipv6_python", "tags": ["IP", "nlp:computation", "nlp:image", "Data and Image Processing", "Open Source", "nlp:module", "Flow Labels", "NASA", "nlp:object-oriented programming", "nlp:electronic module", "nlp:human-computer interface", "Python", "nlp:three dimensional bodie", "nlp:user requirement", "nlp:systems analysi", "nlp:simulation", "Network", "IPv6", "GRC", "Sockets", "Networking"], "homepageURL": "https://github.com/nasa/ipv6_python/wiki", "contributors": ["jishac"]}, {"contact": {"email": "grc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2016-04-28"}, "description": "The Channel  Emulator (CE) is a  software-based network testing  tool.  Its primary functions are providing data framing services, acting  as  a flexible  protocol gateway, and providing network emulation capabilities. \r\n\r\nThe software caneasily accept one protocol, optionally extract the payload, send out as different protocol, or encapsulate one in another.  It can also introduce delays up to deep space levels, and introduce bit errors and other link degradations.", "identifier": "LEW-19351-1", "laborHours": 27584, "name": "Channel Emulator", "organization": "GRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/channel-emulator/blob/master/LICENSE", "name": "NASA v3"}, {"name": "GPLv2", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/channel-emulator", "tags": ["IP", "Emulation", "TM", "AOS", "nlp:computer systems program", "Open Source", "nlp:protocol (computers)", "Error", "Channel", "nlp:software engineering", "NASA", "nlp:channels (data transmission)", "nlp:data link", "Delay", "nlp:communication network", "nlp:error detection code", "nlp:software development tool", "nlp:error analysi", "System Testing", "nlp:data transmission", "Network", "Framing", "GRC"], "homepageURL": "https://github.com/nasa/channel-emulator/wiki", "contributors": ["tkollar", "jishac"]}, {"contact": {"email": "jishac@nasa.gov"}, "date": {"metadataLastUpdated": "2017-06-29"}, "description": "The network-traffic-analysis-tools directory contains a collection of applications written in C to help both analyze and visualize MPTCP packet traces.", "identifier": "LEW-19620-1", "laborHours": 3040, "name": "Multipath TCP (MPTCP) Tools, Analytics, and Configurations", "organization": "GRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/multipath-tcp-tools/blob/master/LICENSE", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/multipath-tcp-tools", "tags": ["IP", "Analysis", "nlp:network", "Transmission Control Protocol", "TCP", "Multipath", "network traffic analysis", "nlp:network analysi", "nlp:protocol (computers)", "NASA", "nlp:packet switching", "nlp:circuit", "Plot", "MPTCP", "nlp:traffic", "nlp:packets (communication)", "Communication", "nlp:telecommunication", "nlp:multipath transmission", "Network", "nlp:reliability", "Plotting"], "homepageURL": "https://github.com/nasa/multipath-tcp-tools", "contributors": ["jishac"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2015-09-03"}, "description": "Earthdata Search is a web application developed by NASA EOSDIS to enable data discovery, search, comparison, visualization, and access across EOSDIS' Earth Science data holdings", "identifier": "GSC-17399-1", "laborHours": 159792, "name": "Earthdata Search Web Application", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/earthdata-search/blob/master/LICENSE", "name": "NASA v3"}, {"name": "ALv2", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/earthdata-search", "tags": ["Data Servers Processing and Handling", "Data Discovery", "Data Filtering", "EOSDIS", "Open Source", "nlp:earth observing system (eos)", "Remote Sensing", "Earth Science", "GSFC", "NASA", "nlp:nasa program", "nlp:data mining", "Data Visualization", "nlp:earth observations (from space)", "GIBS", "nlp:earth science", "nlp:geology", "nlp:data system", "nlp:scientific visualization", "OPeNDAP", "nlp:information retrieval", "nlp:data acquisition"], "homepageURL": "https://search.earthdata.nasa.gov", "contributors": ["Patrick Quinn", "Bo Sun", "Matthew Crouch", "Jeff Siarto"]}, {"contact": {"email": "msfc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2015-07-07"}, "description": "This Python package will calculate beam blockage in polarimetric weather radar data using the specific differential phase (KDP) and fully self-consistent (FSC) methods of Timothy J. Lang et al. (2009; J. Atmos. Oceanic Technol.). This information can be used to correct the radar data when the radar beams intersect objects like trees, buildings, and mountains.", "identifier": "MFS-33284-1", "laborHours": 1984, "name": "Python Polarimetric Radar Beam Blockage Calculation (PyBlock)", "organization": "MSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/PyBlock/blob/master/LICENSE.md", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/PyBlock", "tags": ["Open Source", "Earth Science", "Meteorology", "Radar", "nlp:mountain", "Environmental Science (Earth, Air, Space, Exoplanet)", "NASA", "nlp:meteorological radar", "Toolkit", "GPM", "Precipitation", "nlp:radar data", "MSFC", "nlp:polarimetry", "nlp:radar"], "homepageURL": "https://github.com/nasa/PyBlock/wiki", "contributors": ["tjlang"]}, {"contact": {"email": "msfc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2015-07-07"}, "description": "This is an object-oriented Python module that facilitates precipitation retrievals (e.g., hydrometeor type, precipitation rate, precipitation mass, particle size distribution information) from polarimetric radar data. It leverages existing open source radar software packages to perform all-in-one retrievals that are then easily visualized or saved using existing software.", "identifier": "MFS-33274-1", "laborHours": 592, "name": "Python Interface to Dual-Pol Radar Algorithms (DualPol)", "organization": "MSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/DualPol/blob/master/LICENSE.md", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/DualPol", "tags": ["Meteorology", "nlp:precipitation particle measurement", "Radar", "Environmental Science (Earth, Air, Space, Exoplanet)", "GPM", "nlp:computer systems program", "nlp:precipitation (meteorology)", "nlp:hydrometeorology", "Open Source", "Earth Science", "nlp:module", "nlp:software engineering", "NASA", "nlp:particle size distribution", "Toolkit", "nlp:radar data", "MSFC", "Precipitation", "nlp:information system", "nlp:computer program"], "homepageURL": "https://github.com/nasa/DualPol/wiki", "contributors": ["tjlang"]}, {"contact": {"email": "timothy.j.lang@nasa.gov"}, "date": {"metadataLastUpdated": "2015-07-07"}, "description": "SingleDop is a software module, written in the Python programming language, that will retrieve two-dimensional low-level winds from either real or simulated Doppler radar data.", "identifier": "MFS-33272-1", "laborHours": 912, "name": "Single Doppler Retrieval Toolkit (SingleDop)", "organization": "MSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/SingleDop/blob/master/LICENSE.md", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/SingleDop", "tags": ["nlp:programming language", "Earth Science", "Meteorology", "Radar", "nlp:module", "nlp:software engineering", "NASA", "toolkit", "Doppler", "Toolkit", "nlp:software development tool", "nlp:computer systems program", "nlp:radar data", "nlp:doppler radar", "nlp:wind profile", "Winds", "nlp:computer program", "nlp:computer programming"], "homepageURL": "https://github.com/nasa/SingleDop/wiki", "contributors": ["tjlang"]}, {"contact": {"email": "grc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2015-04-13"}, "description": "The product of this work is a communication protocol which allows microcontrollers to talk with eachother in a structured fashion. As such, it is embodied in C++ code that runs on the microcontroller. The software is not mission certified and is being used for demonstration and testing purposes only. The current goal of this project is to realease the software open source to enable community participation. We have external companies requesting that we release this software.", "identifier": "LEW-19264-1", "laborHours": 320, "name": "EADIN Communication Protocol", "organization": "GRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/EADINLite/blob/master/License.txt", "name": "NASA v3"}, {"name": "ALv2", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/EADINLite", "tags": ["Open Source", "Communication", "nlp:protocol (computers)", "nlp:communication equipment", "nlp:c++ (programming language)", "nlp:computer programming", "nlp:software engineering", "nlp:program verification (computers)", "NASA", "nlp:software development tool", "Propulsion", "Microcontroller", "nlp:applications programs (computers)", "Protocol", "nlp:computer program", "GRC", "nlp:interprocessor communication"], "homepageURL": "https://github.com/nasa/EADINLite/wiki", "contributors": ["ehariton"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-08-20"}, "description": "The Open Scheduling and Planning Interface for Exploration (OpenSPIFe) is an integrated planning and scheduling toolkit based on hundreds of hours of expert observation, use, and refinement of state-of-the-art planning and scheduling technology for several applications within NASA. It was designed from the ground up with the needs of the operational user in mind, and it presents unique solutions to a number of problems common in other commercial and homegrown systems.\r\n\r\n", "identifier": "ARC-15795-1B", "laborHours": 254192, "name": "Open Scheduling and Planning Interface for Exploration (OpenSPIFe)", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/OpenSPIFe/blob/master/LICENSE.md", "name": "NASA v3"}, {"name": "ALv2", "URL": "https://example.com"}, {"name": "EPL", "URL": "https://example.com"}, {"name": "MPLv2", "URL": "https://example.com"}, {"name": "LGPL", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/OpenSPIFe", "tags": ["Open Source", "nlp:technology utilization", "nlp:human-computer interface", "nlp:scheduling", "nlp:planning", "tool", "nlp:problem solving", "Design and Integration Tools", "nlp:technology transfer", "nlp:user requirement", "NASA", "ARC", "scheduling", "Planning", "nlp:technology assessment", "nlp:planetary surface", "nlp:artificial intelligence"], "homepageURL": "https://github.com/nasa/OpenSPIFe", "contributors": ["abencomo", "robert-nado"], "languages": ["Java"]}, {"contact": {"email": "grc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-08-26"}, "description": "T-MATS is open source software code. The Toolbox for the Modeling and Analysis of Thermodynamic Systems (T-MATS) is a Simulink toolbox intended for use in the modeling and simulation of thermodynamic systems and their controls. T-MATS contains generic thermodynamic and controls components that may be combined with a variable input iterative solver and optimization algorithm to create complex systems to meet the needs of a developer. Developement of this tool was completed on behalf of the NASA Aviation Safety Program's Vehicle Systems Safety Technologies (VSST) project located at the Glenn Research Center in Cleveland, OH. ", "identifier": "LEW-19165-1", "laborHours": 17600, "name": "Toolbox for the Modeling and Analysis of Thermodynamic Systems (T-MATS)", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/T-MATS/blob/master/LICENSE.txt", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/T-MATS", "tags": ["thermodynamics", "nlp:complex system", "numerical methods", "nlp:computer systems program", "Open Source", "nlp:algorithm", "Newton-Raphson", "NASA", "Propulsion", "Inlet", "Turbine", "tool", "modeling", "nlp:systems analysi", "Jacobian Calculation", "nlp:software development tool", "nlp:applications programs (computers)", "Turbojet", "analysis", "TMATS", "Turbofan", "Compressor", "nlp:simulation", "nlp:computerized simulation", "nlp:nonlinearity", "Aeronautics", "open source", "Nozzle", "Aircraft Engine", "control system", "nlp:computer program", "GRC", "Jet"], "homepageURL": "https://github.com/nasa/T-MATS", "contributors": ["chapman178", "cheesie67", "DanBerrios", "danielpacak"], "languages": ["Matlab"]}, {"contact": {"email": "larc-sra@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2016-03-29"}, "description": "This technology contributes several core modules to support safety case models and offers a service-based application programming interface that enables new model-processing capabilities to be plugged into the workbench.", "identifier": "LAR-18067-1", "laborHours": 1141072, "name": "CertWare Safety Case Workbench Software", "organization": "LaRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}, {"name": "ALv2", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/CertWare", "tags": ["metrics", "Data and Image Processing", "nlp:computer systems program", "LaRC", "Open Source", "safety cases", "project management", "nlp:module", "nlp:software engineering", "NASA", "CertWare", "nlp:human-computer interface", "nlp:interface", "nlp:software development tool", "nlp:applications programs (computers)", "planning", "nlp:technology utilization", "nlp:computer program", "nlp:computer programming"], "homepageURL": "https://github.com/nasa/CertWare", "contributors": ["mrbcuda", "mrbkt"], "languages": ["Java"]}, {"contact": {"email": "arc-webservices@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-06-17"}, "description": "Here you'll find a growing collection of 3D models, textures, and images from inside NASA.", "laborHours": 48, "name": "NASA-3D-Resources", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://software.nasa.gov/faq", "name": "Pending Release"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/NASA-3D-Resources", "tags": ["nlp:image", "nlp:texture", "images", "nlp:three dimensional model", "repository", "NASA", "nlp:nasa program", "printing", "models", "nlp:imaging technique", "nlp:image analysi", "ARC", "nlp:image resolution", "nlp:mathematical model", "visualizations", "3D", "nlp:simulation", "nlp:image processing", "imagery"], "homepageURL": "https://github.com/nasa/NASA-3D-Resources", "contributors": ["jasonduley"], "languages": ["Java"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-05-13"}, "description": "The EEPROM File System (EEFS) is a simple, reliable file system for embedded systems. The primary purpose of the EEFS is to provide a file system abstraction for EEPROM or PROM memories that is simple, efficient, and can be proven to be reliable.  The EEFS can be used on embedded systems where a file system is needed to access data from EEPROM, PROM, or RAM memory, but otherwise might not have the resources to deploy a full file system such as the MSDOS file system. The EEPROM file system can also be used in systems where the ability to dump, patch, and diagnose files is required. ", "identifier": "GSC-16852-1", "laborHours": 3552, "name": "EEPROM File System", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/eefs", "tags": ["Open Source", "nlp:file maintenance (computers)", "nlp:data system", "nlp:earth resource", "GSFC", "nlp:memory", "EEPROM File System Project", "Data Servers Processing and Handling", "nlp:data processing equipment", "nlp:computer storage device", "NASA", "nlp:systems engineering", "file system", "nlp:memory (computers)", "nlp:data storage", "eefs", "nlp:data acquisition"], "homepageURL": "https://github.com/nasa/eefs/", "contributors": ["acudmore"], "languages": ["C"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-05-05"}, "description": "The OSAL library isolates embedded application software from a Real-Time Operating System (RTOS). The technology provides a well-defined, generic interface to RTOS services; a generic interface to hardware services; and an implementation for several current RTO systems. By using the library, an embedded application can remain portable among multiple operating systems on multiple platforms. Please visit the following URL for additional information: http://opensource.gsfc.nasa.gov/projects/osal/", "identifier": "GSC-14921-1", "laborHours": 27296, "name": "Operating System Abstraction Layer (OSAL)", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/osal/blob/master/LICENSE", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/osal", "tags": ["Open Source", "flight software systems", "nlp:real time operation", "nlp:human-computer interface", "Vehicle Management (Space/Air/Ground)", "application", "GSFC", "nlp:operating systems (computers)", "nlp:interface", "operating system abstraction layer library", "NASA", "nlp:library", "nlp:computer systems program", "nlp:information system", "nlp:computer", "nlp:applications programs (computers)", "nlp:computer program"], "homepageURL": "https://github.com/nasa/osal", "contributors": ["acudmore"], "languages": ["C"]}, {"contact": {"email": "jason.duley@nasa.gov"}, "date": {"metadataLastUpdated": "2013-09-28"}, "description": "39A is the software used to power the 2013 International Space Apps Challenge, a global hackathon focusing on space technology and issues.", "identifier": "NASA-39A", "laborHours": 24496, "name": "39A", "organization": "KSC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/39A/blob/master/LICENSE", "name": "NASA v3"}, {"name": "ALv2", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/39A", "tags": ["nlp:aerospace technology transfer", "operations", "nlp:space program", "nlp:international cooperation", "nlp:software engineering", "NASA", "nlp:conference", "nlp:technology", "nlp:software development tool", "nlp:aerospace engineering", "Hackathon", "nlp:computer program", "International Space Apps Challenge", "nlp:aerospace science", "2013", "software"], "homepageURL": "https://github.com/nasa/39A", "contributors": ["skytland"], "languages": ["Java"]}, {"contact": {"email": "larc-sra@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2013-01-13"}, "description": "The Vehicle Sketch Pad (VSP) is an aircraft geometry tool for rapid evaluation of advanced design concepts. Fast and accurate geometry modeling allows the designer to use more complex analysis methods earlier in the design process and reduces reliance on empiricism in conceptual design. VSP includes tools to model and export the internal structural layout.", "identifier": "LAR-17491-1", "laborHours": 87968, "name": "Vehicle Sketch Pad (VSP)", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/OpenVSP/blob/master/LICENSE", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/OpenVSP", "tags": ["Open Source", "nlp:parameterization", "tool", "nlp:layout", "Design and Integration Tools", "3D model", "repository", "nlp:aircraft design", "nlp:structural design", "NASA", "nlp:evaluation", "nlp:systems engineering", "open source", "nlp:systems analysi", "nlp:computer aided design", "LaRC", "nlp:structural analysi", "nlp:design analysi"], "homepageURL": "https://github.com/nasa/OpenVSP", "contributors": ["ramcdona"], "languages": ["C++"]}, {"contact": {"email": "grc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2011-12-28"}, "description": "OpenMDAO version 0.1 is the initial version of the next generation Multidisciplinary Design Analysis and Optimization (MDAO) open source framework.   OpenMDAO is the open source framework developed by NASA that will be accessible via an open source website to reach the entire broad based MDAO community to facilitate advancing the science of MDAO.  MDAO covers a vast set of capabilities, including a flexible framework and state of the art discipline codes.  This innovation relates specifically to the framework.  OpenMDAO provides the core software infrastructure to integrate multidisciplinary variable fidelity tools and enable design, analysis, and optimization of complex systems.  Currently, the OpenMDAO version 0.1 functionalities include component linking, data passing, driver interface, and lazy evaluation.  This initial basic capability of the framework is sufficient for users to run and optimize their analysis after they integrate their specific component codes.  As OpenMDAO evolves, the following capabilities will be included in the framework:  interprocess communications, error handling, user interfaces, geometry application program interfaces (APIs), plug-in interfaces, utilities to wrap tools, versioning, and parallel processing support.  To be clear, the framework will enable the integration of, but will not include: optimizers, solvers, visualization tools, custom data types, script components, and discipline codes.  AEROSPACE:  To meet the present and future economic and environmental challenges facing air transportation, aviation design must expand its focus from today's conventional \"wing-body-tail\" aircraft to more advanced vehicles.   The ability to design revolutionary aircraft to improve mobility and air transport efficiency is of paramount importance to the national economy, along with reducing our environmental impact and supporting national defense.   Technologies such as the one disclosed here incorporate progressively more sophisticated computational models and methods, enabling future aircraft designs today.", "identifier": "LEW-18550-1", "laborHours": 102336, "name": "Open MDAO Version 0.1: The Next Generation Multidisciplinary Design Analysis and Optimization (MDAO) Open Source Framework", "organization": "GRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/OpenMDAO-Framework/blob/dev/LICENSE.txt", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/OpenMDAO-Framework", "tags": ["Open Source", "analytics", "Vehicle Management (Space/Air/Ground)", "nlp:complex system", "nlp:multidisciplinary design optimization", "code", "nlp:systems analysi", "NASA", "nlp:aircraft design", "nlp:software development tool", "open source", "nlp:applications programs (computers)", "nlp:model", "nlp:systems integration", "nlp:computer program", "GRC", "nlp:design analysi"], "homepageURL": "https://github.com/nasa/OpenMDAO-Framework", "contributors": ["naylor-b", "Kenneth-T-Moore", "justinopenmdao", "swryan", "pziegfeld", "setowns1", "JustinSGray", "cnkavanaugh", "hschilling", "kmarsteller", "eshendricks"], "languages": ["Python"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2011-12-23"}, "description": "NASA World Wind is an intuitive software application supporting the interactive exploration of a variety of data presented within a geospatial context. The technology offers a 3D graphics user experience with seamless, integrated access to a variety of online data sources via open-standards protocols. ", "identifier": "ARC-15166-1A", "laborHours": 944864, "name": "Java World Wind", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/World-Wind-Java/blob/master/WorldWind/NASA_Open_Source_Agreement_1.3.txt", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/World-Wind-Java", "tags": ["Open Source", "SDK", "nlp:protocol (computers)", "nlp:java (programming language)", "nlp:computer graphic", "nlp:access control", "nlp:software engineering", "Environmental Science (Earth, Air, Space, Exoplanet)", "NASA", "nlp:computer program", "ARC", "nlp:computer systems program", "nlp:applications programs (computers)", "nlp:standard", "3D", "nlp:data acquisition", "imagery"], "homepageURL": "https://github.com/nasa/World-Wind-Java", "contributors": ["tgaskins"], "languages": ["Java"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2011-11-29"}, "description": "Vision Workbench (VW) is a modular, extensible computer vision framework that supports a range of tasks, including automated science and engineering analysis, large satellite image processing, and 2D/3D environment reconstruction. The framework provides a rapid C++ development environment as well as a flexible, multi-platform system to deploy computer vision applications. The module interface allows new capabilities to be rapidly integrated, and the dataflow architecture allows image-processing pipelines to be quickly developed and reconfigured. ", "identifier": "ARC-15761-1A", "laborHours": 93856, "name": "NASA Vision Workbench (VW), Version 3", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/visionworkbench", "tags": ["Open Source", "nlp:computer vision", "nlp:human-computer interface", "nlp:architecture (computers)", "nlp:image analysi", "Data and Image Processing", "NASA", "nlp:parallel processing (computers)", "ARC", "nlp:systems engineering", "nlp:computer program", "image processing", "nlp:computer", "nlp:applications programs (computers)", "computer vision library", "nlp:image processing", "imagery"], "homepageURL": "https://github.com/nasa/visionworkbench", "contributors": ["zmoratto", "broxtronix", "novas0x2a", "khusmann", "anefian", "trey0", "mstyer", "mdhancher", "harguess", "iansaxton", "radishman", "ekpneo", "mallan", "iceboundflame"], "languages": ["C++"]}, {"contact": {"email": "chris.a.mattmann@jpl.nasa.gov"}, "date": {"metadataLastUpdated": "2018-02-04"}, "description": "Apache OODT is NASA's first project to be stewarded at the open source Apache Software Foundation. OODT is middleware for information integration and for science data processing and retrieval. It provides components including file management, workflow management, resource management, and automated remote data acquisition, file crawling and ingestion, and science algorithm wrapping and integration.", "identifier": "NASA-Apache-OODT", "laborHours": 124368, "name": "Apache OODT", "organization": "JPL", "permissions": {"exemptionText": null, "licenses": [{"URL": "http://www.apache.org/licenses/LICENSE-2.0.html", "name": "NASA v3"}, {"name": "ALv2", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "http://oodt.apache.org/", "tags": ["acquisition", "management", "remote data", "ingestion", "nlp:data base management system", "file", "nlp:algorithm", "nlp:resources management", "NASA", "wrapping", "automated", "nlp:information management", "algorithm", "nlp:data processing", "nlp:data management", "science", "workflow", "crawling", "resource", "integration", "nlp:information system", "nlp:information retrieval", "nlp:computer program", "nlp:data acquisition"], "homepageURL": "http://oodt.apache.org", "contributors": ["Dr. Chris A. Mattmann", "Mr. Paul Ramirez", "Mr. Maziyar Boustani", "Ms. Shakeh Khudikyan", "Mr. Mike Joyce", "Mr. Rishi Verma", "Dr. Lewis John McGibbney", "Mr. Tyler Palsulich"], "languages": ["Java", "Python"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2010-11-19"}, "description": "Save is a high-availability framework that manages IP addresses shared between multiple servers. It also monitors the health of those servers to determine which one should be actively servicing requests at any given time. Synchronization mechanisms allow configuration files to be kept consistent between systems and also allow commands to be executed across all servers of a particular type. Archival mechanisms provide automatic version control of configuration files to aid in recovery in case of errant configuration.", "identifier": "ARC-16445-1", "laborHours": 224, "name": "Synchronization, Archival, Validation, and IP Exchange (Save)", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://ti.arc.nasa.gov/m/opensource/nosa/save_nosa.pdf", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://sourceforge.net/projects/save-ha", "tags": ["nlp:file maintenance (computers)", "framework", "Data Servers Processing and Handling", "nlp:control systems design", "validation", "Open Source", "archive", "nlp:time optimal control", "nlp:synchronism", "high availability", "NASA", "nlp:systems engineering", "systems", "nlp:systems analysi", "ARC", "nlp:real time operation", "nlp:control equipment", "nlp:time dependence", "nlp:command and control", "health", "administration"], "homepageURL": "http://save-ha.sourceforge.net", "contributors": ["pkolano"], "languages": ["Perl"]}, {"contact": {"email": "larc-sra@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2014-11-18"}, "description": "An update to software originally named DAVEtools 0.5, this software-based technology is used for manipulating standard Dynamic Aerospace Vehicle Exchange Markup Language (DAVE-ML) models. The improved technology embeds the necessary initialization data into a data structure to keep the MATLAB workspace uncluttered and creates Simulink models from a generated MATLAB script.", "identifier": "LAR-17460-1", "laborHours": 19024, "name": "Java-Based Software Tool for Dynamic Aerospace Vehicle Exchange Markup Files", "organization": "LaRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/DAVEtools/blob/master/LICENSE.html", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/DAVEtools", "tags": ["Open Source", "Standards", "nlp:data system", "Data and Image Processing", "nlp:software engineering", "NASA", "Simulation", "nlp:computer program", "nlp:software development tool", "nlp:computer systems program", "nlp:aerospace engineering", "Modeling", "nlp:aerospace vehicle", "nlp:applications programs (computers)", "LaRC", "nlp:java (programming language)", "nlp:document markup language"], "homepageURL": "https://github.com/nasa/DAVEtools/wiki", "contributors": ["bjax"], "languages": ["Java"]}, {"contact": {"email": "jsc-ttco-software-request@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2015-02-10"}, "description": "The Trick Simulation environment is a generic simulation toolkit used for constructing and running simulations.  The Trick 13 Interface Code Generator (ICG), a utility that provides math model class and structure layout data, has been rewritten and is based off of the open source clang/llvm project.  The Trick numerical integrators have been replaced with a common set of integrators.  Several core components are enhanced from previous Trick versions.  Trick 13 is now Open Source software and can be downloaded at http://code.nasa.gov/#/", "identifier": "MSC-25665-1", "laborHours": 143904, "name": "Trick 13 Simulation Environment", "organization": "JSC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/trick/blob/master/LICENSE", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/Trick", "tags": ["Open Source", "nlp:programming environment", "Design and Integration Tools", "Framework", "nlp:computerized simulation", "nlp:software engineering", "nlp:simulation", "NASA", "Simulation", "nlp:software development tool", "nlp:environment simulation", "nlp:astronomical model", "nlp:mathematical model", "nlp:applications programs (computers)", "nlp:computer program", "JSC"], "homepageURL": "https://github.com/nasa/Trick/wiki", "contributors": ["alexlin0", "jmpenn"], "languages": ["C++", "C", "Java", "Python", "Perl"]}, {"contact": {"email": "edwin.z.crues@nasa.gov"}, "date": {"metadataLastUpdated": "2017-02-20"}, "description": "This software supports FMI based model exchange with Trick based simulations. The Functional Mockup Interface (FMI) standard was developed in partnership with governmental, academic and commercial entities in the European Union. This standard is used to support the exchange of component models for complex system simulations throughout Europe and the United States. Trick simulations are used all across NASA for simulations that support human spaceflight activities. However, until now, there were no means to use FMI based models in a Trick based simulation or a method for providing Trick based models that were FMI compliant. This software provides implementation software to do both. There are two principal components to the software: A C based software implementation for wrapping Trick based C models that provide an FMI compliant interface; A collection of C++ classes that can be used in a Trick based simulation to use an FMI compliant model (FMU).", "identifier": "JSC-TrickFMI", "laborHours": 3728, "name": "TrickFMI", "organization": "JSC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/TrickFMI/blob/master/README.md", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/TrickFMI", "tags": ["Model Exchange", "Framework", "nlp:c++ (programming language)", "nlp:computerized simulation", "nlp:software engineering", "nlp:simulation", "NASA", "Simulation", "nlp:systems simulation", "nlp:computer program", "nlp:computer systems program", "nlp:standard", "nlp:europe", "JSC", "nlp:c (programming language)"], "homepageURL": "https://github.com/nasa/TrickFMI/wiki", "contributors": ["ezcrues"], "languages": ["C++", "C"]}, {"contact": {"email": "msfc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2015-03-17"}, "description": "MMM-Py reads, analyzes, and displays three-dimensional national mosaicked reflectivity data produced by NOAA's National Severe Storms Laboratory (NSSL). MMM-Py can read MRMS mosaics from either their unique binary format or their converted NetCDF format; it can also read and properly interpret the current mosaic design (4 regional tiles) as well as mosaics produced prior to late July 2013 (8 tiles). The technology can easily stitch multiple tiles together to provide a larger regional or national picture of precipitating weather systems. Composites, horizontal/vertical cross-sections, and combinations thereof are easily displayed using as little as one line of code.", "identifier": "MFS-33236-1", "laborHours": 2048, "name": "Marshall MRMS Mosaic Python Toolkit (MMM-Py)", "organization": "MSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/MMM-Py/blob/master/LICENSE.md", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/MMM-Py", "tags": ["nlp:reflectance", "Visualization", "Analysis", "Radar", "Environmental Science (Earth, Air, Space, Exoplanet)", "nlp:mosaic", "Open Source", "nlp:on-line programming", "nlp:format", "NASA", "nlp:systems engineering", "MRMS", "nlp:design analysi", "nlp:weather", "Toolkit", "MSFC", "nlp:coding", "nlp:cross section", "nlp:computer program", "NMQ"], "homepageURL": "https://github.com/nasa/MMM-Py", "contributors": ["tjlang"], "languages": ["Python"]}, {"contact": {"email": "msfc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2015-03-17"}, "description": "This toolkit will read geolocated brightness temperature data (in ASCII format) from any flight of the AMPR airborne instrument.  A python script will pull out timing, brightness temperatures, and other information  from each channel/geolocation and store them as attributes using the appropriate type of numpy array. The approach consists of ingesting the entire file as a text string and then parsing and converting as necessary. The file is read and the data are populated when the class is instantiated with the full path and name of an AMPR file. Numerous visualization methods are provided, including track plots, strip charts, and Google Earth KMZs. In addition, polarization deconvolution is available.", "identifier": "MFS-33219-1", "laborHours": 2288, "name": "Python Advanced Microwave Precipitation Radiometer Data Toolkit (PyAMPR)", "organization": "MSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/PyAMPR/blob/master/LICENSE.md", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/PyAMPR", "tags": ["Visualization", "Analysis", "Environmental Science (Earth, Air, Space, Exoplanet)", "nlp:remote sensor", "nlp:precipitation (meteorology)", "Radiometer", "Open Source", "AMPR", "nlp:format", "nlp:microwave radiometer", "NASA", "nlp:atmospheric temperature", "nlp:data processing", "nlp:radiometer", "nlp:microwave", "Toolkit", "MSFC", "nlp:brightness temperature", "nlp:scientific visualization", "Airborne", "Precipitation"], "homepageURL": "https://github.com/nasa/PyAMPR", "contributors": ["tjlang"], "languages": ["Python"]}, {"contact": {"email": "msfc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2015-03-17"}, "description": "PyTDA, an MSFC-based implementation of the National Center for Atmospheric Research (NCAR) Turbulence Detection Algorithm (NTDA), can be used for convective-scale analysis, situational awareness, and forensic meteorology. The software provides Python functions that will estimate turbulence from Doppler radar data.   It is written in the Python programming language.", "identifier": "MFS-33237-1", "laborHours": 1648, "name": "Python Turbulence Detection Algorithm (PyTDA)", "organization": "MSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/PyTDA/blob/master/LICENSE.md", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/PyTDA", "tags": ["Analysis", "nlp:clear air turbulence", "Radar", "Environmental Science (Earth, Air, Space, Exoplanet)", "Doppler", "nlp:atmospheric turbulence", "nlp:doppler radar", "Open Source", "nlp:algorithm", "NASA", "nlp:data processing", "Toolkit", "nlp:radar data", "MSFC", "nlp:detection", "Turbulence", "nlp:radar detection", "nlp:computer program", "nlp:computer programming"], "homepageURL": "https://github.com/nasa/PyTDA", "contributors": ["tjlang"], "languages": ["Python"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2015-05-06"}, "description": "A collection of utility programs and reusable subroutine libraries supports computational fluid dynamics, particularly on multiblock structured grids. The technology is applicable to all flight regimes-subsonic, transonic, supersonic, and hypersonic. ", "identifier": "ARC-14467-1A", "laborHours": 1504, "name": "Computational Fluid Dynamics (CFD) Utility Software Library", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://sourceforge.net/projects/cfdutilities/files/CFD_Utilities_NOSA_v3_FINAL_2014SEP5.pdf/download", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://sourceforge.net/projects/cfdutilities/files/latest/download", "tags": ["nlp:computational fluid dynamic", "nlp:subroutine", "nlp:computer systems program", "nlp:computational grid", "nlp:grid generation (mathematics)", "nlp:fluid dynamic", "Open Source", "application", "data", "NASA", "library", "optimization", "nlp:library", "ARC", "nlp:software development tool", "Design and Integration Tools", "interpolation", "nlp:grid", "CFD", "nlp:computer program"], "homepageURL": "https://sourceforge.net/projects/cfdutilities/", "contributors": ["Dennis Koga"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2015-05-04"}, "description": "The Crisis Mapping Toolkit (CMT) is a collection of tools for processing geospatial data (images, satellite data, etc.) into cartographic products that improve understanding of large-scale crises, such as natural disasters. The cartographic products produced by CMT include flood inundation maps, maps of damaged or destroyed structures, forest fire maps, population density estimates, etc. CMT is designed to rapidly process large-scale data using Google Earth Engine and other geospatial data systems. ", "identifier": "ARC-17472-1", "laborHours": 9392, "name": "Crisis Mapping Toolkit (CMT) v1", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/CrisisMappingToolkit/blob/master/LICENSE", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/CrisisMappingToolkit", "tags": ["crisis mapping toolkit", "Environmental Science (Earth, Air, Space, Exoplanet)", "nlp:satellite observation", "data processing", "Open Source", "nlp:mapping", "NASA", "CMT", "nlp:forest", "nlp:topography", "geospatial data systems", "ARC", "nlp:flood", "map", "nlp:photomapping", "nlp:thematic mapping", "nlp:remote sensing", "Google Earth", "nlp:disaster", "nlp:population"], "homepageURL": "https://github.com/nasa/CrisisMappingToolkit", "contributors": ["Dennis Koga"]}, {"contact": {"email": "arc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2015-05-06"}, "description": "In offline mode, MKAD performs automated anomaly detection on large heterogeneous data sets that contain both discrete symbols and continuous data streams.", "identifier": "ARC-16462-1", "laborHours": 9648, "name": "Multiple Kernel Anomaly Detection (MKAD) Algorithm", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://ti.arc.nasa.gov/opensource/nosa/mkad/", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://ti.arc.nasa.gov/opensource/projects/mkad", "tags": ["nlp:data flow analysi", "OCSVM", "Open Source", "nlp:algorithm", "nlp:anomaly", "nlp:data reduction", "NASA", "nlp:symbol", "nlp:kernel function", "algorithm", "FOQA", "nlp:data processing", "nlp:data structure", "ARC", "System Testing", "one class support vector machine", "multiple kernel anomaly detection", "MKAD", "nlp:detection", "nlp:digital data"], "homepageURL": "https://ti.arc.nasa.gov/opensource/projects/mkad/", "contributors": ["Dennis Koga"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2015-02-27"}, "description": "IRC provides robust interactive and distributed control/monitoring of remote instruments. The IRC architecture combines the processing capabilities of Java with the power of XML to express hierarchical data in a human-readable, platform-independent format. For additional information, please visit: http://opensource.gsfc.nasa.gov/projects/IRC/index.php", "identifier": "GSC-14308-1", "laborHours": 92736, "name": "Interoperable Remote Component (IRC)", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.gsfc.nasa.gov/projects/IRC/NASA%20Open%20Source%20Agreement%20IRC.txt", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/IRC/index.php#software", "tags": ["Open Source", "nlp:remote control", "GSFC", "framework", "nlp:java (programming language)", "nlp:architecture (computers)", "IRC", "nlp:data processing", "nlp:format", "nlp:data processing equipment", "NASA", "nlp:monitor", "nlp:engine monitoring instrument", "nlp:flight instrument", "monitoring", "control", "Operations", "nlp:data acquisition"], "homepageURL": "https://opensource.gsfc.nasa.gov/projects/IRC/index.php", "contributors": ["Troy Ames"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2015-02-27"}, "description": "The Java Astrodynamics Toolkit (JAT) is a collection of Java components that aid flight dynamics engineers in performing space mission design; trajectory optimization; and spacecraft navigation, attitude-determination, and control systems analysis. Current capabilities include orbit propagation, orbit determination, maneuver planning, spacecraft attitude simulation, and 3D orbit and attitude visualization.", "identifier": "GSC-14912-1", "laborHours": 43872, "name": "Java Astrodynamics Toolkit (JAT)", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.gsfc.nasa.gov/projects/JAT/JAT_NOSA.doc", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/JAT/index.php#software", "tags": ["navigation", "JAT", "Open Source", "GSFC", "nlp:space flight", "NASA", "nlp:mission planning", "nlp:interplanetary flight", "simulation", "Operations", "nlp:trajectory optimization", "nlp:spacecraft trajectory", "space mission design", "nlp:trajectory analysi", "nlp:spacecraft maneuver", "nlp:spacecraft control", "nlp:spacecraft", "astrodynamics", "nlp:space navigation"], "homepageURL": "https://opensource.gsfc.nasa.gov/projects/JAT/index.php", "contributors": ["David Gaylor"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2015-02-27"}, "description": "Metadata Check is a command-line tool to check Earth Observing System (EOS) metadata with a metadata descriptor. For more information, please visit: http://opensource.gsfc.nasa.gov/projects/metacheck/index.php", "identifier": "GSC-15012-1", "laborHours": 4928, "name": "Metadata Check", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.gsfc.nasa.gov/projects/metacheck/metacheck_NOSA_1.3.rtf", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/metacheck/index.php#software", "tags": ["Open Source", "nlp:earth observing system (eos)", "nlp:on-line system", "nlp:on-line programming", "GSFC", "nlp:information management", "Data Servers Processing and Handling", "nlp:command and control", "nlp:systems analysi", "NASA", "metadata", "nlp:line spectra", "nlp:data management", "EOS", "nlp:information system", "nlp:earth (planet)", "data validation"], "homepageURL": "https://opensource.gsfc.nasa.gov/projects/metacheck/index.php", "contributors": ["Richard Ullman"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2015-02-27"}, "description": "MYSTRAN is a Finite Element Analysis (FEA) processor.   MYSTRAN takes NASTRAN data decks as input and processes them to generate results files based on the inputs.   NASTRAN was originally developed at NASA GSFC in the 1960's.   The input files describe the mechanical nature of some piece of hardware and the loads or driving inputs that cause some reaction.   With this input MYSTRAN computes the responses to the driving inputs.  The theory and research for FEA analysis has been developed over decades.", "identifier": "GSC-17173-1", "laborHours": 126144, "name": "MYSTRAN", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.gsfc.nasa.gov/projects/mystran/mystran_nosa.pdf", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/mystran/index.php#software", "tags": ["Open Source", "model analysis", "nlp:aerodynamic load", "GSFC", "nlp:nastran", "nlp:dynamic structural analysi", "nlp:data processing", "Data and Image Processing", "nlp:finite element method", "NASA", "computer aided engineering", "nlp:human reaction", "FEA", "Finite Element Analysis", "nlp:structural analysi", "nlp:loads (forces)"], "homepageURL": "https://opensource.gsfc.nasa.gov/projects/mystran/index.php", "contributors": ["Timothy Carnahan"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2015-02-27"}, "description": "RETRO offers methods and techniques for information retrieval (IR), including vector retrieval and probabilistic retrieval. The technology can be downloaded at: http://opensource.gsfc.nasa.gov/projects/RETRO/index.php", "identifier": "GSC-14976-1", "laborHours": 12736, "name": "Requirements Tracing On Target (RETRO)", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.gsfc.nasa.gov/projects/RETRO/RETRO_NOSA.doc", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/RETRO/index.php#software", "tags": ["Open Source", "nlp:infrared imagery", "nlp:target acquisition", "nlp:target", "RETRO", "nlp:information management", "GSFC", "nlp:vector analysi", "Data and Image Processing", "NASA", "requirements tracing", "nlp:vectors (mathematics)", "nlp:infrared radiation", "nlp:target recognition", "nlp:information system", "nlp:information retrieval", "software development", "information retrieval"], "homepageURL": "https://opensource.gsfc.nasa.gov/projects/RETRO/index.php", "contributors": ["Jane Hayes"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2015-02-27"}, "description": "Worldview is a software tool designed for interactively browsing and downloading imagery from NASA's Earth observing satellites.  Building upon a set of open source mapping and user interface libraries, it provides an environment to visually discover interesting phenomena as observed by NASA satellites, then download the data for further analysis.  It was originally designed to address the needs of the near real time applications community to provide relevant information for time-critical scenarios such as wildfire and flood management.  As such, satellite imagery is available to be viewed in Worldview within four hours of observation, the imagery can be viewed in its highest, or native, resolution, and the imagery can be panned and zoomed rapidly through space and time to find the most relevant/cloud-free/etc information available.", "identifier": "GSC-17111-1", "laborHours": 86144, "name": "Worldview satellite imagery browsing and downloading tool", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa-gibs/worldview-options-eosdis/blob/master/LICENSE.md", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa-gibs/worldview", "tags": ["Open Source", "data visualization", "nlp:satellite imagery", "nlp:mapping", "GSFC", "nlp:earth observations (from space)", "nlp:remote sensing", "Data and Image Processing", "nlp:data reduction", "NASA", "nlp:temporal resolution", "nlp:software development tool", "nlp:satellite observation", "nlp:computer program", "satellite", "nlp:graphical user interface", "imagery"], "homepageURL": "https://opensource.gsfc.nasa.gov/projects/worldview/index.php", "contributors": ["Ryan Boller"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2015-02-27"}, "description": "The Architecture Adaptive Computing Environment (ACE) is a parallel computing language, compiler, and runtime library. The purpose of ACE is to allow a programmer to more easily write parallel programs for a wide variety of parallel computer architectures.", "identifier": "GSC-14911-1", "laborHours": 113456, "name": "Architecture Adaptive Computing Environment (ACE)", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.gsfc.nasa.gov/projects/ace/NOSA-ACE.doc", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/ace/#software", "tags": ["Open Source", "nlp:computation", "Parallel Programming", "nlp:high level language", "GSFC", "nlp:subroutine", "Design and Integration Tools", "nlp:architecture (computers)", "nlp:library", "ANS C", "NASA", "nlp:compiler", "nlp:parallel processing (computers)", "nlp:computer", "nlp:computer program", "C", "nlp:computer programming"], "homepageURL": "https://opensource.gsfc.nasa.gov/projects/ace/aCe_Distro_Notes.txt", "contributors": ["John Dorband"], "languages": ["C"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2015-02-27"}, "description": "The Core Flight Executive (cFE) provides software bus, time, event, executive, table, and file services, and it defines the application programming interface (API) for each set function. Applications subscribe to cFE services at runtime, making system modifications easy. Facilitating rapid prototyping, new applications can be compiled, linked, loaded, and started without requiring the entire system to be rebuilt.", "identifier": "GSC-16232-1", "laborHours": 235312, "name": "Core Flight Executive (cFE)", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.org/licenses/NASA-1.3", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://sourceforge.net/projects/coreflightexec", "tags": ["Open Source", "nlp:real time operation", "nlp:airborne/spaceborne computer", "programming", "Vehicle Management (Space/Air/Ground)", "application", "GSFC", "environment", "nlp:operating systems (computers)", "nlp:software engineering", "NASA", "core flight", "nlp:computer systems program", "nlp:channels (data transmission)", "nlp:applications programs (computers)", "nlp:computer program", "nlp:prototype", "nlp:computer programming"], "homepageURL": "https://opensource.gsfc.nasa.gov/projects/cfe/index.php", "contributors": ["Susan Strege"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2015-02-27"}, "description": "EMTG is a global trajectory optimization tool intended for interplanetary mission design. The technology automatically searches for the optimal sequence of planetary flybys and propulsive maneuvers for maximizing payload delivery at a destination. Designed for minimal user oversight, EMTG requires only start location, destination, allowable launch-date range, allowable flight time, and minimal spacecraft hardware information.", "identifier": "GSC-16824-1", "laborHours": 18000, "name": "Evolutionary Mission Trajectory Generator (EMTG)", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.gsfc.nasa.gov/projects/emtg/EMTG_NOSA.pdf", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/emtg/index.php#software", "tags": ["Open Source", "nlp:spacecraft trajectory", "nlp:space mission", "space science", "GSFC", "nlp:launching", "nlp:trajectory optimization", "nlp:spacecraft maneuver", "nlp:payload", "Aeronautics", "NASA", "nlp:mission planning", "nlp:trajectory", "interplanetary space", "nlp:position (location)", "trajectory design", "nlp:optimization"], "homepageURL": "https://opensource.gsfc.nasa.gov/projects/emtg/index.php", "contributors": ["Jacob Englander"]}, {"contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2015-02-27"}, "description": "This software library provides uniform access to HDF-EOS2 and HDF-EOS5 files through one set of application program interface (API) calls. Without the library, programs would have to be written twice to cover both HDF-EOS2 and HDF-EOS5 files. http://opensource.gsfc.nasa.gov/projects/HDF-EOS2/index.php", "identifier": "GSC-15008-1", "laborHours": 3328, "name": "HDF-EOS2 and HDF-EOS5 Compatibility Library", "organization": "GSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://opensource.gsfc.nasa.gov/projects/HDF-EOS2/HDF-EOS2_NOSA_1.3.rtf", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/HDF-EOS2/index.php#software", "tags": ["nlp:file maintenance (computers)", "Data Servers Processing and Handling", "EOSDIS", "nlp:computer systems program", "HDF-EOS2", "Open Source", "GSFC", "validator", "nlp:software engineering", "NASA", "HDF-EOS5", "nlp:interface", "nlp:library", "nlp:software development tool", "nlp:compatibility", "EOS", "nlp:applications programs (computers)", "nlp:computer program", "nlp:computer programming"], "homepageURL": "https://opensource.gsfc.nasa.gov/projects/HDF-EOS2/index.php", "contributors": ["Richard Ullman"]}, {"contact": {"email": "james.mcduffie@jpl.nasa.gov"}, "date": {"metadataLastUpdated": "2016-02-01"}, "description": "This software retrieves a set of atmospheric/surface/instrument parameters from a simultaneous fit to spectra from multiple absorption bands. The software uses an iterative, non-linear retrieval technique (optimal estimation). After the retrieval process has converged, the software performs an error analysis. The products of the software include all quantities needed to understand the information content of the measurement, its uncertainty, and its dependence on interfering atmospheric properties. Spectra from ground-based or space-based measurement with arbitrary observation geometry can be analyzed. The retrieved parameters can be chosen from a large set of atmospheric (e.g., volume mixing ratio of gases or aerosol optical depth), surface (e.g., Lambertian reflection), and instrument (e.g., spectral shift or instrument line shape parameters) parameters. The software uses an accurate, state-of-the-art, multiple-scattering radiative transfer code combined with an efficient polarization approximation to simulate measured spectra. The software enables fast and highly accurate simulations of broad spectral ranges by an optional parallelization of the frequency processing in the radiative transfer model. The framework was written with flexibility in mind. New algorithms and instruments are added by creating additional classes that implement the defined interfaces. Bindings are available for both Python and Lua.", "laborHours": 1764272, "name": "RT Retrieval Framework", "organization": "JPL", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/RtRetrievalFramework/blob/master/LICENSE.txt", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/RtRetrievalFramework", "tags": ["nlp:aerosol", "nlp:radiative transfer", "Framework", "Retrieval", "nlp:absorption spectra", "Earth Science", "Atmosphere", "nlp:algorithm", "NASA", "Forward Model", "nlp:spectral band", "Radiative Transfer", "nlp:visible spectrum", "nlp:spectrum analysi", "nlp:surface propertie", "Python", "nlp:geometry", "Lua", "C++", "nlp:computer program"], "homepageURL": "https://github.com/nasa/RtRetrievalFramework", "contributors": ["mcduffie", "mikesmyth"]}, {"contact": {"email": "wahab.alshahin@nasa.gov"}, "date": {"metadataLastUpdated": "2016-02-05"}, "description": "This is a flexible LaTeX document template designed to separate content from styling and remove all of the grunt work associated with creating professional documents. Can be used for technical reports as well as public documents such as research papers and conference papers.", "laborHours": 944, "name": "NASA LaTeX Docs", "organization": "JSC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/nasa-latex-docs/blob/master/LICENSE", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/nasa-latex-docs", "tags": ["nlp:document", "nlp:aerodynamic", "nlp:research project", "NASA", "Reports", "nlp:conference", "nlp:nasa program", "LaTeX", "nlp:research and development", "Documents", "nlp:documentation", "nlp:aeronautical engineering", "TeX", "Papers"], "homepageURL": "https://github.com/nasa/nasa-latex-docs/wiki", "contributors": ["walshahi"]}, {"contact": {"email": "bruffridge@nasa.gov"}, "date": {"metadataLastUpdated": "2016-04-05"}, "description": "This web application allows inventories of assets to be managed. Assets along with their specifications are added to the system and then used by users via a check-in/check-out function. The inventory can be browsed by category or using search. Users are given various roles within the system to allow them to perform certain functions such as view-only, check-in/check-out, modify, and full-control. Inventory managers can add and track detailed information on all inventory assets including manufacturer, storage location, custom attributes, and relationships with other assets. Assets can be found by browsing by category, search, location, or current user. Assets are checked out to specified locations by users.", "laborHours": 25968, "name": "Inventory System for Lab Equipment (ISLE)", "organization": "GRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/isle/blob/master/LICENSE.md", "name": "NASA v3"}, {"name": "ALv2", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/isle", "tags": ["nlp:inventory control", "nlp:information management", "Inventory", "nlp:inventory", "nlp:user requirement", "Web", "NASA", "nlp:position (location)", "nlp:information system", "nlp:computer", "MySQL", "PHP", "nlp:automatic control", "nlp:management information system", "nlp:information retrieval"], "homepageURL": "https://github.com/nasa/isle", "contributors": ["bruffridge", "bggardner"]}, {"contact": {"email": "jsc-ttco-software-request@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2016-06-16"}, "description": "Framework for mapping physical input devices (joysticks, gaming controllers, custom control panels, etc) to application-specific virtual controller interfaces. Pattern for writing device-independent code.", "identifier": "MSC-25810-1", "laborHours": 7664, "name": "Input Device Framework (IDF)", "organization": "JSC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/IDF/blob/master/LICENSE", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/idf", "tags": ["Open Source", "nlp:symbol", "nlp:human-computer interface", "nlp:controller", "nlp:control equipment", "nlp:coding", "nlp:numerical control", "Framework", "nlp:interface", "nlp:control systems design", "nlp:systems analysi", "nlp:dynamic control", "NASA", "Operations", "JSC"], "homepageURL": "https://github.com/nasa/idf", "contributors": ["dbankieris"]}, {"contact": {"email": "larc-sra@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2016-07-13"}, "description": "The Composite Damage (CompDam) Progressive Damage Analysis software is developed for the prediction of damage onset, damage progression and structural collapse of structures manufactured of fiber-reinforced plastic laminates. The emphasis has been on development of an analysis capability for application at the structural level. Hence, modeling of damage progression is undertaken at the meso-scale, where each ply of a laminate is represented as a homogenous orthotropic continuum. All of the composite damage mechanisms (matrix cracking, fiber breaking and kinking, and delamination) and their interactions are represented. The CompDam software is implemented as user written subroutines for use with the Abaqus commercial finite element code.  Input for CompDam includes ply-level material properties, and interface properties obtained from standard material characterization tests.  The output from CompDam includes damage variables associated with each damage mode. These damage variables describe the evolution of damage and are used to generate updated structural constitutive matrices and load redistribution as damage evolves. ", "identifier": "LAR-18832-1", "laborHours": 4752, "name": "Composite Damage (CompDam) Progressive Damage Analysis Software", "organization": "LaRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/CompDam_DGD/blob/master/LICENSE.txt", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/CompDam_DGD", "tags": ["nlp:finite element method", "nlp:fiber composite", "LaRC", "FEA", "Open Source", "Progressive Damage", "Materials and Processes", "nlp:composite material", "nlp:micromechanic", "Continuum Mechanics", "NASA", "nlp:composite structure", "nlp:delaminating", "nlp:laminate", "nlp:damage", "nlp:damage assessment", "Composite Materials", "Abaqus", "Fortran", "nlp:computer program"], "homepageURL": "https://github.com/nasa/CompDam_DGD", "contributors": ["Frank Leone", "Andrew Bergan", "Carlos D\u00e1vila"]}, {"contact": {"email": "rodney.martin@nasa.gov"}, "date": {"metadataLastUpdated": "2016-02-11"}, "description": "The Kalman Filter Code Augmentation release is a modification of Kalman Filter Toolbox, written by Kevin Murphy, 1998. It extends the existing open source software's capabilities and functionality by bookkeeping more detailed information on internal data structures, as well as ensuring the consistency of mathematical conventions used by subroutines that are part of a third-party tool called ASOS as part of the modification. Additional convergence criteria have also been included, as well as the possibility for establishing additional constraints and modelling paradigms.", "laborHours": 176, "name": "Kalman Filter Code Augmentation", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://ti.arc.nasa.gov/m/opensource/downloads/KalmanFilterCodeAugmentationLicense.pdf", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://ti.arc.nasa.gov/opensource/projects/kalman", "tags": ["nlp:subroutine", "nlp:software engineering", "NASA", "nlp:software development tool", "model development", "nlp:kalman filter", "nlp:computer systems program", "nlp:information system", "nlp:applications programs (computers)", "nlp:augmentation", "nlp:computer program", "nlp:convergence", "code augmentation"], "homepageURL": "https://ti.arc.nasa.gov/opensource/projects/kalman", "contributors": ["rodney.martin@nasa.gov"]}, {"contact": {"email": "rodney.martin@nasa.gov"}, "date": {"metadataLastUpdated": "2016-02-11"}, "description": "ROC (Receiver Operating Characteristic) curve Code Augmentation is a modification of ROC Curve code originally authored by G.C. Cawley that provides additional functionality. The inclusion of more detailed bookkeeping of new and existing internal data structures that provide more visibility into various performance measures is one of the new features.", "laborHours": 32, "name": "ROC Curve Code Augmentation", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "http://ti.arc.nasa.gov/opensource/projects/roc/", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://ti.arc.nasa.gov/opensource/projects/roc", "tags": ["nlp:symbol", "nlp:performance prediction", "nlp:visibility", "nlp:operating systems (computers)", "NASA", "nlp:receiver", "nlp:data structure", "model development", "nlp:curve fitting", "nlp:computer program", "nlp:radio receiver", "nlp:performance test", "code augmentation"], "homepageURL": "https://ti.arc.nasa.gov/opensource/projects/roc", "contributors": ["rodney.martin@nasa.gov"]}, {"contact": {"email": "lewis.j.mcgibbney@nasa.gov"}, "date": {"metadataLastUpdated": "2019-02-27"}, "description": "Podaacpy is a python utility library for interacting with NASA JPL\u2019s PO.DAAC.", "identifier": "NASA-Podaacpy", "laborHours": 720, "name": "Podaacpy", "organization": "JPL", "permissions": {"exemptionText": null, "licenses": [{"URL": "http://www.apache.org/licenses/LICENSE-2.0.html", "name": "NASA v3"}, {"name": "ALv2", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/podaacpy", "tags": ["Dataset Search", "nlp:nasa space program", "nlp:failure", "Python", "nlp:vibration", "Framework", "nlp:scattering function", "Web", "NASA", "nlp:library", "nlp:nasa program", "Subsetting", "Toolkit", "nlp:systems engineering", "nlp:phase control", "nlp:reliability", "nlp:optimization"], "homepageURL": "http://podaacpy.readthedocs.io/en/latest/", "contributors": ["lewismc", "Omkar20895", "jarifibrahim", "agoodm", "noah-de", "kant"]}, {"contact": {"email": "patrick.hogan@nasa.gov"}, "date": {"metadataLastUpdated": "2016-09-23"}, "description": "SpaceBirds, a new innovative application intended as both a visual and educational application as well as a powerful tracking tool, can be used by professionals, students, and enthusiasts alike. The app is developed using NASA Web World Wind, and consists of an easy to use interface that allows the user to display all known tracked orbital objects and ground stations, and display their relative information, such as type, orbital period, low, medium, and high earth orbit, country of origin, and use, all in a 3D environment.", "identifier": "ARC-SpaceBirds", "laborHours": 223440, "name": "NASA WorldWind Research: SpaceBirds", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://software.nasa.gov/faq", "name": "Pending Release"}, {"name": "CC0", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/NASAWorldWindResearch/SpaceBirds", "tags": ["java", "worldwind", "nlp:human-computer interface", "nlp:ground station", "visual simulation", "application", "nlp:world wide web", "NASA", "nlp:nasa program", "nlp:spacecraft orbit", "orbital dynamics", "nlp:earth (planet)", "nlp:virtual reality", "WorldWind", "nlp:tracking (position)", "satellite", "nlp:object-oriented programming", "nlp:earth orbit"], "homepageURL": "https://github.com/NASAWorldWindResearch/SpaceBirds/archive/master.zip", "contributors": ["bwstewart389", "Beak-man", "farahsalah", "Gagaus"]}, {"contact": {"email": "patrick.hogan@nasa.gov"}, "date": {"metadataLastUpdated": "2016-09-21"}, "description": "3D visualization of earthquakes using their actual depth below the surface.", "identifier": "ARC-Quake-Hunter", "laborHours": 1632, "name": "NASA WorldWind Research: Quake-Hunter", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/NASAWorldWindResearch/Quake-Hunter/blob/master/LICENSE", "name": "NASA v3"}, {"name": "MIT", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/NASAWorldWindResearch/Quake-Hunter", "tags": ["worldwind", "nlp:optical thicknes", "nlp:depth", "nlp:earthquake", "nlp:surface reaction", "visual simulation", "application", "earthquakes", "NASA", "nlp:nasa program", "nlp:metal surface", "nlp:surface propertie", "WorldWind", "usgs", "satellite", "earthquake-events", "nlp:scientific visualization", "orbital dynamics", "earthquake-visualization", "nlp:boundary layer", "nlp:surface layer"], "homepageURL": "https://github.com/NASAWorldWindResearch/Quake-Hunter/archive/master.zip", "contributors": ["KhaledSharif", "Beak-man", "farahsalah", "Gagaus", "bench4ng", "PJHogan"]}, {"contact": {"email": "patrick.hogan@nasa.gov"}, "date": {"metadataLastUpdated": "2016-09-14"}, "description": "The largest three-dimensional web-based interactive browser of satellite, weather, climate, and other time-aware geospatial data on the web, built upon NASA's revolutionary WorldWind technology. ", "identifier": "ARC-WorldWeather", "laborHours": 44816, "name": "NASA WorldWind Research: WorldWeather", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://software.nasa.gov/faq", "name": "Pending Release"}, {"name": "MIT", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/NASAWorldWindResearch/WorldWeather", "tags": ["weather", "nlp:satellite observation", "climate", "nlp:climatology", "wind", "nlp:world wide web", "visual simulation", "application", "nlp:meteorological satellite", "NASA", "nlp:nasa program", "nlp:meteorology", "aware-geospatial-data", "nlp:weather", "weather-forecast", "earth", "WorldWind", "nlp:climate", "nasa-revolutionary", "satellite", "nlp:real time operation", "nlp:weather forecasting", "geospatial data"], "homepageURL": "https://github.com/NASAWorldWindResearch/WorldWeather/archive/master.zip", "contributors": ["KhaledSharif", "Beak-man", "farahsalah"]}, {"contact": {"email": "patrick.hogan@nasa.gov"}, "date": {"metadataLastUpdated": "2016-09-09"}, "description": "A geo-browser app framework based on NASA Web World Wind", "identifier": "ARC-WorldWindExplorer", "laborHours": 110032, "name": "NASA WorldWind Research: WorldWindExplorer", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/NASAWorldWindResearch/WorldWindExplorer/blob/master/LICENSE", "name": "NASA v3"}, {"name": "MIT", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/NASAWorldWindResearch/WorldWindExplorer", "tags": ["nlp:nasa space program", "worldwind", "Javascript", "weather", "HTML5", "climate", "geo-browser", "nlp:solar wind", "nlp:wind effect", "nlp:world wide web", "visual simulation", "application", "nlp:aeronautic", "NASA", "nlp:nasa program", "nlp:research aircraft", "geo", "nlp:wind (meteorology)", "nlp:wind measurement", "WorldWind", "nlp:wind tunnel", "satellite", "geospatial data"], "homepageURL": "https://github.com/NASAWorldWindResearch/WorldWindExplorer/archive/master.zip", "contributors": ["emxsys"]}, {"contact": {"email": "patrick.hogan@nasa.gov"}, "date": {"metadataLastUpdated": "2016-08-06"}, "description": "Magnetic Field Data Anomaly Detection Analysis Sandbox. Earthquake Signal Precursors, ESP, detection and forecast. This project aims to apply Dr. Friedemann Freund\u2019s theory of earthquake precursor science. Dr. Freund's theory states that as stresses in the Earth\u2019s crust increase during the time leading up to a major earthquake, atomic-scale defects in the mineral grains and along the boundaries between mineral grains become activated. The ultimate goal of this project is to observe live anomalous EM field fluctuations and accurately forecast an earthquake within a specified geographical range.", "identifier": "ARC-EarthquakeApp", "laborHours": 53200, "name": "NASA WorldWind Research: EarthquakeApp", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://software.nasa.gov/faq", "name": "Pending Release"}, {"name": "CC0", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/NASAWorldWindResearch/EarthquakeApp", "tags": ["worldwind", "Javascript", "magnetic field data", "HTML5", "geo-browser", "nlp:earth crust", "electromagnetic radiation", "application", "nlp:anomaly", "nlp:geomagnetism", "NASA", "nlp:magnetic anomalie", "earthquake", "nlp:geophysic", "nlp:seismology", "geo", "nlp:seismic wave", "WorldWind", "nlp:earth science", "satellite", "nlp:detection", "nlp:earthquake"], "homepageURL": "https://github.com/NASAWorldWindResearch/EarthquakeApp/archive/master.zip", "contributors": ["KhaledSharif", "farahsalah", "Gagaus", "bench4ng", "PJHogan"]}, {"contact": {"email": "grc-sra-team@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2013-12-02"}, "description": "PyCycle is a novel software library written in the Python Programming language. It allows a user to perform standard engine cycle analysis, while also  providing analytic derivative (sensitivity) calculations to the end user. This allows Pycycle to be very efficiently used by (or incorporated within) external software programs performing broader simulation, analysis, and optimization.", "identifier": "LEW-19288-1", "laborHours": 3952, "name": "PyCycle - An Cycle Modeling Tool For Design With Gradient Based Optimization", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/JustinSGray/pyCycle/blob/master/LICENSE", "name": "NASA v3"}, {"name": "ALv2", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/JustinSGray/pyCycle", "tags": ["Open Source", "plugin", "nlp:software engineering", "NASA", "python", "openmdao", "nlp:computer aided design", "nlp:programming language", "modeling", "nlp:software development tool", "nlp:applications programs (computers)", "Design and Integration Tools", "nlp:computerized simulation", "nlp:simulation", "nlp:computer program", "GRC", "mdao", "nlp:optimization", "nlp:computer programming"], "homepageURL": "https://github.com/JustinSGray/pyCycle/archive/master.zip", "contributors": ["JustinSGray", "cheesie67", "thearn", "kmarsteller", "jcchin"]}, {"contact": {"email": "christopher.a.teubert@nasa.gov"}, "date": {"metadataLastUpdated": "2017-01-20"}, "description": "The Generic Software Architecture for Prognostics (GSAP) is a framework for applying prognostics. It makes applying prognostics easier by implementing many of the common elements across prognostic applications. The standard interface enables reuse of prognostic algorithms and models across using the GSAP framework.", "identifier": "ARC-GSAP", "laborHours": 7952, "name": "GSAP: General Software Architecture for Prognostics", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/GSAP/blob/master/license.pdf", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/GSAP", "tags": ["framework", "nlp:architecture (computers)", "nlp:finite element method", "nlp:algorithm", "nlp:software engineering", "NASA", "library", "nlp:software reuse", "Health Management", "c++", "nlp:interface", "ARC", "Prognostics", "Health Monitoring", "nlp:software development tool", "C++", "nlp:applications programs (computers)", "PHM", "nlp:computer program", "nlp:computer programming"], "homepageURL": "https://github.com/nasa/GSAP/archive/master.zip", "contributors": ["teubert", "matthewjdaigle", "jason-watkins"]}, {"contact": {"email": "lewis.j.mcgibbney@nasa.gov"}, "date": {"metadataLastUpdated": "2017-03-07"}, "description": "Sitepod; A Sitemap Generator written in PHP. Sitepod is build using the Fat-Free Framework, a powerful yet easy-to-use PHP micro-framework designed to build dynamic and robust web applications.", "identifier": "JPL-Sitepod", "laborHours": 1632, "name": "Sitepod", "organization": "JPL", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/sitepod/blob/master/LICENSE.md", "name": "NASA v3"}, {"name": "GPLv3", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/sitepod/", "tags": ["nlp:radioactive isotope", "sitemap-builder", "sitemap-xml", "nlp:response time (computers)", "nlp:scattering function", "NASA", "nlp:systems engineering", "sitemap-generator", "nlp:java (programming language)", "search-engine", "sitemap", "Web", "JPL", "WebCrawler", "php", "nlp:vibration", "nlp:electric generator", "nlp:missile", "Sitemap", "nlp:reliability", "PHP", "nlp:optimization"], "homepageURL": "https://github.com/nasa/sitepod/", "contributors": ["lewismc", "eniad "]}, {"contact": {"email": "lewis.j.mcgibbney@nasa.gov"}, "date": {"metadataLastUpdated": "2017-08-16"}, "description": "Python client library that abstracts CMR API calls for search, ingest, update, and deletion of collections and granules.", "identifier": "MFS-33409-1", "laborHours": 1056, "name": "pyCMR", "organization": "MSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/pyCMR/blob/master/LICENSE", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/pyCMR", "tags": ["nlp:searching", "nlp:stability", "Python", "nlp:library", "NASA", "nlp:conference", "CMR", "API", "nlp:circuit", "nlp:boundary layer", "nlp:reliability", "nlp:environment", "nlp:data acquisition", "APL Client Library", "nlp:radiation", "Client SDK", "client"], "homepageURL": "https://github.com/nasa/cmr/wiki", "contributors": ["manilmaskey, amarouane"]}, {"contact": {"email": "catalino.cuadrado@nasa.gov"}, "date": {"metadataLastUpdated": "2017-03-31"}, "description": "The Metadata Management Tool is a web application to assist users in managing metadata on various Nasa.gov applications.", "laborHours": 266128, "name": "Metadata Management Tool (MMT)", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/mmt/blob/master/LICENSE", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/mmt", "tags": ["nlp:human-computer interface", "nlp:information management", "application", "nlp:management information system", "NASA", "nlp:data management", "CMR", "nlp:data base management system", "nlp:applications programs (computers)", "nlp:response time (computers)", "nlp:information retrieval", "nlp:management method", "Ruby", "nlp:management planning"], "homepageURL": "https://github.com/nasa/mmt", "contributors": ["mreese84"]}, {"contact": {"email": "r.k.mccluney@nasa.gov"}, "date": {"metadataLastUpdated": "2017-05-01"}, "description": "The Core Flight System (CFS) Command and Data Dictionary (CDD) utility, or CCDD, is a software tool for managing the data structures for CFS and CFS applications, including telemetry data structures, command information, and other data pertinent to a CFS project.", "laborHours": 512576, "name": "CFS Command and Data Dictionary Tool (CCDDT)", "organization": "JSC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/CCDD/blob/master/LICENSES.md", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/CCDD", "tags": ["nlp:data base", "java", "nlp:data system", "CFS", "nlp:data processing", "NASA", "nlp:data structure", "nlp:software development tool", "nlp:data management", "nlp:computer systems program", "SQL", "nlp:computer program", "nlp:telemetry", "nlp:biotelemetry"], "homepageURL": "https://github.com/nasa/CCDD", "contributors": ["KevinMcCluney"]}, {"contact": {"email": "jason.duley@nasa.gov"}, "date": {"metadataLastUpdated": "2017-03-03"}, "description": "Modeling, Analysis, and Visualization (MAV) of ATM concepts", "laborHours": 86736, "name": "MAV", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/MAV/blob/master/Apache%20License%202.0.pdf", "name": "NASA v3"}, {"name": "ALv2", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/MAV", "tags": ["nlp:failure", "Visualization", "Analysis", "nlp:scientific visualization", "nlp:vibration", "NASA", "nlp:systems engineering", "Toolkit", "nlp:mathematical model", "nlp:reliability", "nlp:flow visualization", "nlp:structural analysi", "nlp:optimization", "nlp:network analysi"], "homepageURL": "https://github.com/nasa/MAV", "contributors": ["ksutka"]}, {"contact": {"email": "jeffry.w.ely@nasa.gov"}, "date": {"metadataLastUpdated": "2017-02-27"}, "description": "Chesapeake Bay Chlorophyll Hotspot Identifier (CBCHI) takes in raw Landsat 8 surface reflectance products and produces two maps to be opened in ArcMap that can be used to identify chlorophyll hotspots. It also creates a true color image.", "laborHours": 64, "name": "Chesapeake Bay Chlorophyll Hotspot Identifier (CBCHI)", "organization": "LaRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/NASA-DEVELOP/CBCHI/blob/master/LICENSE.md", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/NASA-DEVELOP/CBCHI", "tags": ["nlp:reflectance", "nlp:color", "nlp:photomapping", "nlp:satellite imagery", "nlp:surface propertie", "nlp:thematic mapping", "application", "nlp:image analysi", "NASA", "Landsat", "nlp:landsat satellite", "nlp:chlorophyll", "nlp:image processing", "imagery"], "homepageURL": "https://github.com/NASA-DEVELOP/CBCHI", "contributors": ["kdottiemo"]}, {"contact": {"email": "jeffry.w.ely@nasa.gov"}, "date": {"metadataLastUpdated": "2017-04-25"}, "description": "Visualization of CALIPSO (VOCAL). A CALIPSO Cross Cutting tool for visualizing data.", "laborHours": 3600, "name": "Visualization of CALIPSO (VOCAL)", "organization": "LaRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/NASA-DEVELOP/VOCAL/blob/master/LICENSE.md", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/NASA-DEVELOP/VOCAL", "tags": ["visualization", "nlp:stability", "nlp:scientific visualization", "application", "nlp:data processing", "nlp:data reduction", "NASA", "python", "nlp:tool", "nlp:software development tool", "nlp:circuit", "nlp:reliability", "nlp:boundary layer", "nlp:data acquisition"], "homepageURL": "https://github.com/NASA-DEVELOP/VOCAL", "contributors": ["kdottiemo, Smewhen"]}, {"contact": {"email": "jeffry.w.ely@nasa.gov"}, "date": {"metadataLastUpdated": "2017-03-21"}, "description": "This code removes clouds, cloud shadow, water, and snow pixels from Landsat scenes using the cloud mask layer that is provided with Landsat data.", "laborHours": 16, "name": "Move Away Superfluous Clouds (MASC)", "organization": "LaRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/NASA-DEVELOP/MASC/blob/master/LICENSE.md", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/NASA-DEVELOP/MASC", "tags": ["nlp:snow", "nlp:snow cover", "application", "nlp:water", "nlp:cloud physic", "NASA", "nlp:digital data", "nlp:scene analysi", "mask layer", "Landsat", "nlp:landsat satellite", "nlp:pixel", "nlp:cloud cover", "nlp:clouds (meteorology)"], "homepageURL": "https://github.com/NASA-DEVELOP/MASC", "contributors": ["kdottiemo"]}, {"contact": {"email": "jeffry.w.ely@nasa.gov"}, "date": {"metadataLastUpdated": "2017-05-05"}, "description": "This Google Earth Engine software quantifies the decreasing water surface area in Lake Mead and the lower Grand Canyon and assesses the resulting changes in land cover \u2013specifically, riparian vegetation and riparian sediment. The software provides images, statistics, and graphs to understand the drought-induced changes.", "laborHours": 928, "name": "GC-ReDI", "organization": "LaRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/NASA-DEVELOP/GC-ReDI/blob/master/LICENSE.md", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/NASA-DEVELOP/GC-ReDI", "tags": ["visualization", "nlp:satellite imagery", "nlp:surface propertie", "application", "nlp:earth surface", "nlp:remote sensing", "nlp:water", "nlp:change detection", "NASA", "nlp:surface water", "nlp:computer program", "nlp:vegetation", "nlp:lake", "imagery"], "homepageURL": "https://github.com/NASA-DEVELOP/GC-ReDI", "contributors": ["kdottiemo"]}, {"contact": {"email": "timothy.j.lang@nasa.gov"}, "date": {"metadataLastUpdated": "2017-05-31"}, "description": "MultiDop is a Python-based interface between the C-based DDA code developed at University of Oklahoma and the Python Atmospheric Radiation Measurement Radar Toolkit (Py-ART) software developed at Argonne National Lab. Use this software to perform 3D wind analyses using 2-3 independent Doppler radars.", "laborHours": 3536, "name": "Multiple-Doppler Radar Analysis Toolkit (MultiDop)", "organization": "MSFC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/MultiDop/blob/master/LICENSE.md", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/MultiDop", "tags": ["nlp:radiation measurement", "Earth Science", "nlp:radar measurement", "Meteorology", "nlp:wind (meteorology)", "Radar", "nlp:doppler effect", "nlp:wind measurement", "NASA", "Doppler", "nlp:meteorological radar", "Toolkit", "nlp:doppler radar", "nlp:radar", "Winds", "nlp:computer program", "nlp:wind velocity measurement"], "homepageURL": "https://github.com/nasa/MultiDop/wiki", "contributors": ["tjlang"]}, {"contact": {"email": "christopher.j.burke@nasa.gov"}, "date": {"metadataLastUpdated": "2017-07-13"}, "description": "Illustrate using the Flux-Level Transit Injection (FLTI) Tests of the Kepler pipeline for Data Release 25.  This code generates the figures in the documentation of FLTI, Burke, C.J. and Catanzarite, J. 2017, Planet Detection Metrics: Per-Target Flux-Level Transit Injection Tests of TPS for Data Release 25, KSCI-19109-001", "laborHours": 112, "name": "Kepler-FLTI", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/Kepler-FLTI/blob/master/License.pdf", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/Kepler-FLTI", "tags": ["nlp:target acquisition", "nlp:target", "nlp:coding", "nlp:detection", "nlp:planet", "nlp:flux (rate)", "nlp:pipeline", "NASA", "nlp:injection", "nlp:extrasolar planet", "Kepler", "nlp:transit time"], "homepageURL": "https://github.com/nasa/Kepler-FLTI", "contributors": ["Christopher J. Burke"]}, {"contact": {"email": "christopher.j.burke@nasa.gov"}, "date": {"metadataLastUpdated": "2017-07-13"}, "description": "Illustrate making use of numerous Kepler Planet Occurrence Rate Data Products for Data Release 25 and SOC 9.3 Kepler Pipeline version.  This code generates a detection contour according to the documentation Burke, C.J. and Catanzarite, J. 2017, Planet Detection Metrics: Per-Target Detection Contours for Data Release 25, KSCI-19111-001", "laborHours": 224, "name": "KeplerPORTs", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/KeplerPORTs/blob/master/License.pdf", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/KeplerPORTs", "tags": ["nlp:target acquisition", "nlp:contour", "nlp:symbol", "nlp:target", "nlp:detection", "nlp:planet", "nlp:pipeline", "NASA", "nlp:target recognition", "nlp:binary code", "nlp:rates (per time)", "Kepler"], "homepageURL": "https://github.com/nasa/KeplerPORTs", "contributors": ["Christopher J. Burke"]}, {"contact": {"email": "jeffrey.l.coughlin@nasa.gov"}, "date": {"metadataLastUpdated": "2017-06-12"}, "description": "The Kepler DR25 Robovetter code. The Robovetter dispositions Kepler Threshold Crossing Events (TCEs) into Planet Candidates (PCs) and False Positives (FPs) using sophisticated vetting metrics and decision-tree logic.", "laborHours": 464, "name": "Kepler DR25 Robovetter", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/kepler-robovetter/tree/master/NASA_Open_Source_Documents", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/kepler-robovetter", "tags": ["nlp:logical element", "Vetting", "nlp:decision theory", "nlp:coding", "nlp:planet", "nlp:binary data", "nlp:trees (mathematics)", "NASA", "nlp:thresholds (perception)", "nlp:computer program", "DR25", "nlp:circuit", "nlp:binary code", "Transits", "Kepler"], "homepageURL": "https://github.com/nasa/kepler-robovetter", "contributors": ["Jeff Coughlin"]}, {"contact": {"email": "patrick.hogan@nasa.gov"}, "date": {"metadataLastUpdated": "2016-06-19"}, "description": "NASA World Wind in Java for HTML5", "identifier": "ARC-WebWorldWind", "laborHours": 79696, "name": "WebWorldWind", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/World-Wind-Java/blob/master/WorldWind/NASA_Open_Source_Agreement_1.3.txt", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/NASAWorldWind/WebWorldWind", "tags": ["nlp:wind velocity", "nlp:ground wind", "visual simulation", "nlp:wind (meteorology)", "nlp:wind measurement", "NASA", "nlp:nasa program", "nlp:windpowered generator", "orbital dynamics", "nlp:solar wind", "web application", "WorldWind", "nlp:java (programming language)", "satellite", "nlp:wind tunnel", "nlp:wind effect"], "homepageURL": "https://github.com/NASAWorldWind/WebWorldWind", "contributors": ["balhar-jakub", "tag3", "servetg", "strikerM", "revo09", "pdavidc", "emxsys", "GabrielePrestifilippo", "zglueck", "carla-orru", "AkeluX", "RandolphKim", "revision0"]}, {"contact": {"email": "patrick.hogan@nasa.gov"}, "date": {"metadataLastUpdated": "2016-06-19"}, "description": "NASA World Wind organization website", "identifier": "ARC-NASAWorldWind.github.io", "laborHours": 80, "name": "NASAWorldWind.github.io", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/World-Wind-Java/blob/master/WorldWind/NASA_Open_Source_Agreement_1.3.txt", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/NASAWorldWind/NASAWorldWind.github.io", "tags": ["nlp:nasa space program", "nlp:wind (meteorology)", "visual simulation", "nlp:ground wind", "github", "nlp:wind measurement", "NASA", "nlp:nasa program", "nlp:organization", "nlp:windpower utilization", "orbital dynamics", "WorldWind", "nlp:wind effect", "satellite", "nlp:wind tunnel", "nlp:windpowered generator"], "homepageURL": "https://github.com/NASAWorldWind/NASAWorldWind.github.io", "contributors": ["pdavidc", "zglueck"]}, {"contact": {"email": "patrick.hogan@nasa.gov"}, "date": {"metadataLastUpdated": "2016-06-19"}, "description": "NASA World Wind in Java for Android", "identifier": "ARC-WorldWindAndroid", "laborHours": 39104, "name": "WorldWindAndroid", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/World-Wind-Java/blob/master/WorldWind/NASA_Open_Source_Agreement_1.3.txt", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/NASAWorldWind/WorldWindAndroid", "tags": ["android", "nlp:wind velocity", "nlp:ground wind", "visual simulation", "application", "nlp:wind (meteorology)", "nlp:wind measurement", "NASA", "nlp:nasa program", "nlp:windpowered generator", "orbital dynamics", "nlp:solar wind", "WorldWind", "nlp:java (programming language)", "satellite", "nlp:wind tunnel", "nlp:wind effect"], "homepageURL": "https://github.com/NASAWorldWind/WorldWindAndroid", "contributors": ["pdavidc", "emxsys", "zglueck", "Beak-man"]}, {"contact": {"email": "patrick.hogan@nasa.gov"}, "date": {"metadataLastUpdated": "2016-06-19"}, "description": "The NASA WorldWind Server Kit (WWSK) is an open source Java project that assembles GeoServer for easy distribution and implementation.", "identifier": "ARC-WorldWindServerKit", "laborHours": 178336, "name": "WorldWindServerKit", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://www.gnu.org/licenses/gpl-2.0.html", "name": "NASA v3"}, {"name": "GPLv2", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/NASAWorldWind/WorldWindServerKit", "tags": ["nlp:nasa space program", "java", "nlp:radiation source", "GeoServer", "visual simulation", "NASA", "nlp:nasa program", "nlp:systems engineering", "nlp:project management", "nlp:java (programming language)", "nlp:statistical distribution", "web application", "WorldWind", "satellite", "nlp:failure", "server kit", "orbital dynamics", "nlp:reliability", "nlp:optimization"], "homepageURL": "https://github.com/NASAWorldWind/WorldWindServerKit", "contributors": ["pdavidc", "emxsys"]}, {"contact": {"email": "patrick.hogan@nasa.gov"}, "date": {"metadataLastUpdated": "2016-06-19"}, "description": "The NASA WorldWind Java SDK (WWJ) is for building cross-platform 3D geospatial desktop applications in Java.", "identifier": "ARC-WorldWindJava", "laborHours": 316160, "name": "WorldWindJava", "organization": "ARC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/NASAWorldWind/WorldWindJava/blob/develop/LICENSE.txt", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/NASAWorldWind/WorldWindJava", "tags": ["nlp:nasa space program", "java", "worldwind", "opengl", "nlp:virtual reality", "graphics", "visual simulation", "NASA", "nlp:nasa program", "nlp:systems engineering", "nlp:cross correlation", "nlp:java (programming language)", "3d", "earth", "globe", "web application", "WorldWind", "nlp:applications programs (computers)", "sdk", "satellite", "maps", "nlp:vibration", "geospatial", "orbital dynamics", "nlp:reliability", "terrain", "nlp:optimization", "imagery"], "homepageURL": "https://github.com/NASAWorldWind/WorldWindJava", "contributors": ["pdavidc", "emxsys", "zglueck", "tag3", "moovida"]}, {"contact": {"email": "jeffry.w.ely@nasa.gov"}, "date": {"metadataLastUpdated": "2016-06-22"}, "description": "Geographic Applications for Transitioning Everglades Regions (GATER). Meant for running within the Google Earth Engine API, this JavaScript code provides an algorithm for cloud removal from Landsat scenes, and runs a classification scheme which classifies mangrove extent within Everglades National Park.", "laborHours": 15376, "name": "GATER", "organization": "LaRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/NASA-DEVELOP/GATER/blob/master/LICENSE.md", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/NASA-DEVELOP/GATER", "tags": ["Geographic Applications for Transitioning Everglades Regions", "classification scheme", "Landsat scenes", "nlp:scene analysi", "JavaScript", "nlp:cloud cover", "nlp:algorithm", "nlp:cloud", "nlp:earth atmosphere", "NASA", "nlp:classification", "nlp:landsat satellite", "cloud removal", "Everglades National Park", "algorithm", "nlp:earth (planet)", "nlp:coding", "nlp:image classification", "Google Earth API"], "homepageURL": "https://github.com/NASA-DEVELOP/GATER", "contributors": ["kdottiemo", "egotschalk"]}, {"contact": {"email": "jeffry.w.ely@nasa.gov"}, "date": {"metadataLastUpdated": "2016-06-22"}, "description": "This tool allows users to identify surface water from the most current imagery available, or to monitor temporal changes of surface water in their management area.", "laborHours": 3456, "name": "SWIM", "organization": "LaRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/NASA-DEVELOP/SWIM/blob/master/LICENSE.md", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/NASA-DEVELOP/SWIM", "tags": ["nlp:water resource", "nlp:water management", "nlp:surface propertie", "temporal changes", "nlp:change detection", "surface water", "nlp:water", "nlp:surface water", "current imagery", "NASA", "nlp:user requirement", "nlp:data management", "nlp:imagery", "nlp:earth resources program"], "homepageURL": "https://software.nasa.gov/software/LAR-19013-1", "contributors": ["larc-sra@mail.nasa.gov", "Kathleen Moore"]}, {"contact": {"email": "jeffry.w.ely@nasa.gov"}, "date": {"metadataLastUpdated": "2016-06-23"}, "description": "Elkhorn Slough Vegetation Imagery Assessment (ESVIA). This suite of Google Earth Engine Javascript code analyzes vegetation change in a historical time-series using Landsat, as well as current-day vegetation productivity using Sentinel 2A imagery. Included in the scripts are operations such as image acquisition, image processing, and application.", "laborHours": 144, "name": "ESVIA", "organization": "LaRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/NASA-DEVELOP/ESVIA/blob/master/LICENSE.md", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/NASA-DEVELOP/ESVIA", "tags": ["nlp:time series analysi", "java", "nlp:satellite imagery", "nlp:real time operation", "nlp:earth observations (from space)", "landsat", "vegetation imagery", "nlp:remote sensing", "NASA", "Sentinel 2A imagery", "Google Earth", "nlp:landsat satellite", "nlp:imagery", "nlp:vegetation", "vegetation", "nlp:vegetation growth", "vegetation change", "nlp:image processing"], "homepageURL": "https://software.nasa.gov/software/LAR-19012-1", "contributors": ["larc-sra@mail.nasa.gov", "kdottiemo"]}, {"contact": {"email": "jeffry.w.ely@nasa.gov"}, "date": {"metadataLastUpdated": "2016-06-23"}, "description": "Pixelwise Correlation-Based Landscape Classification (PiCo). PiCo, an R script, automates and regionalizes the Climate Landscape Response (CLaRe) metrics developed by Wallace et al 2016. This script performs a pixel-wise regression analysis to produce rasters whose correlation values can be evaluated to target buffelgrass.", "laborHours": 16, "name": "PiCo", "organization": "LaRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/NASA-DEVELOP/PiCo/blob/master/LICENSE.md", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/NASA-DEVELOP/PiCo", "tags": ["pixel-wise regression analysis", "R", "nlp:statistical correlation", "nlp:data correlation", "pixel-wise", "nlp:topography", "landscape", "buffelgrass", "NASA", "nlp:correlation detection", "correlation-based", "nlp:classification", "nlp:regression analysi", "climate", "nlp:pixel", "nlp:climate", "nlp:correlation coefficient", "nlp:correlation"], "homepageURL": "https://software.nasa.gov/software/LAR-19015-1", "contributors": ["larc-sra@mail.nasa.gov", "kdottiemo"]}, {"contact": {"email": "jeffry.w.ely@nasa.gov"}, "date": {"metadataLastUpdated": "2016-06-23"}, "description": "Palm Oil Plantation Predictor (POPP). This Python software automates the process of downloading, atmospherically correcting, and processing raster data in order to identify potential palm oil plantations.", "laborHours": 32, "name": "POPP", "organization": "LaRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/NASA-DEVELOP/POPP/blob/master/LICENSE.md", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/NASA-DEVELOP/POPP", "tags": ["nlp:prediction", "nlp:oil slick", "nlp:data processing", "nlp:software engineering", "nlp:data processing equipment", "plantation", "NASA", "python", "nlp:software development tool", "nlp:computer program", "nlp:computer systems program", "palm oil", "nlp:digital data", "nlp:applications programs (computers)", "atmospherically", "raster"], "homepageURL": "https://software.nasa.gov/software/LAR-18862-1", "contributors": ["larc-sra@mail.nasa.gov", "kdottiemo", "kylepeterson777"]}, {"contact": {"email": "mike.conroy@nasa.gov"}, "date": {"metadataLastUpdated": "2018-08-21"}, "description": "DON-Federate-HLA2MPC repository", "identifier": "KSC-14109", "laborHours": 9232, "name": "DON-Federate-HLA2MPC", "organization": "KSC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://software.nasa.gov", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/DON-Federate-HLA2MPC", "tags": ["nlp:igneous rock", "nlp:petrology", "nlp:mineral", "nlp:meteoritic composition", "HLA", "NASA", "Level", "nlp:abundance", "nlp:mathematical model", "KSC", "nlp:tectonic", "nlp:mechanical property", "nlp:computer program", "Architecture", "nlp:biological evolution", "High"], "homepageURL": "https://software.nasa.gov/software/KSC-14109", "contributors": ["ksc-dl-software-request@mail.nasa.gov"]}, {"contact": {"email": "larc-sra@mail.nasa.gov"}, "date": {"metadataLastUpdated": "2018-08-21"}, "description": "Kodiak is an implementation of a software library for verifying expressions involving nonlinear real arithmetic. The current innovation discloses the implementation of a generic branch and bound algorithm for rigorous computations and prototype implementation of algorithms for solving global optimization problems.", "identifier": "LAR-19222-1", "laborHours": 5344, "name": "Kodiak's Boolean Checker Software Module", "organization": "LaRC", "permissions": {"exemptionText": null, "licenses": [{"URL": "https://github.com/nasa/Kodiak/blob/master/LICENSE.pdf", "name": "NASA v3"}, {"name": "NASA Open Source", "URL": "https://example.com"}], "usageType": "openSource"}, "repositoryURL": "https://github.com/nasa/kodiak", "tags": ["nlp:computation", "Data and Image Processing", "approximation", "LaRC", "expression", "arithmetic", "Rigurous Polynomial Approximations", "nlp:prototype", "Open Source", "programming", "nlp:algorithm", "application", "nlp:module", "nlp:software engineering", "NASA", "nlp:boolean function", "bound", "branch", "real", "nlp:combinatorial analysi", "Non-linear Arithmetic", "algorithm", "Interval Arithmetic", "nlp:boolean algebra", "Global Optimization", "checker", "interface", "optimizer", "inequalities", "API", "non-linear", "boolean", "nlp:computer program", "nlp:optimization"], "homepageURL": "https://shemesh.larc.nasa.gov/fm/Kodiak/0", "contributors": ["cesar.a.munoz@nasa.gov"]}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2017-10-10"}, "contact": {"email": "arc-sra-team@mail.nasa.gov"}, "repositoryURL": "https://github.com/nasa/VirtualADAPT", "description": "VirtualADAPT is a high-fidelity, Matlab Simulink-based simulation testbed that emulates the Advanced Diagnostic and Prognostic Testbed (ADAPT) electrical power system hardware for running offline health management experiments. This simulation testbed models all components of the ADAPT hardware within the power storage and power distribution subsystems. The physical components of the testbed, i.e., the batteries, relays, and the loads, are replaced by simulation modules that generate the same dynamic behaviors as the hardware test bed.", "organization": "ARC", "homepageURL": "https://github.com/nasa/VirtualADAPT", "contributors": ["arc-sra-team@mail.nasa.gov", "indranilroychoudhury", "matthewjdaigle"], "laborHours": 2512, "tags": ["nlp:systems management", "nlp:spacecraft power supplie", "Electrical Power System", "nlp:electric battery", "nlp:simulation", "nlp:electric power supplie", "nlp:diagnosi", "nlp:computerized simulation", "Simulation", "nlp:systems health monitoring", "nlp:test stand", "nlp:systems simulation"], "name": "Virtual ADAPT"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "GPLv3", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-12-12"}, "contact": {"email": "thomas.barclay@nasa.gov"}, "repositoryURL": "https://github.com/mrtommyb/ktransit", "description": "Formerly known as PyTransit. This python package contains routines to create and/or fit a transiting planet model. The underlying model is a Fortran implementation of the Mandel & Agol (2002) limb darkened transit model. The code will calculate a full orbital model and eccentricity can be allowed to vary.", "organization": "ARC", "homepageURL": "https://github.com/mrtommyb/ktransit", "contributors": ["thomas.barclay@nasa.gov"], "laborHours": 1184, "tags": ["nlp:fortran", "nlp:eccentricity", "nlp:coding", "nlp:planet", "nlp:subroutine", "nlp:computer program", "nlp:mathematical model", "nlp:solar limb", "nlp:extrasolar planet", "Kepler", "nlp:transit time"], "name": "ktransit"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "MIT", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-05-26"}, "contact": {"email": "jason.duley@nasa.gov"}, "repositoryURL": "http://dfm.io/kplr/", "description": "kplr provides a lightweight Pythonic interface to the catalogs and data. Below, I'll describe the features provided by kplr but to get things started, let\u2019s see an example of how you would go about finding the published parameters of a KOI and download the light curve data.", "organization": "ARC", "homepageURL": "http://dan.iel.fm/kplr/", "contributors": ["jason.duley@nasa.gov", "dfm"], "laborHours": 528, "tags": ["nlp:interface stability", "nlp:stress", "nlp:interface", "nlp:load distribution (forces)", "nlp:solid-solid interface", "nlp:liquid-solid interface", "Kepler", "nlp:solid", "nlp:bonding", "nlp:interfacial tension", "nlp:mechanical property"], "name": "kplr"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "MIT", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-05-26"}, "contact": {"email": "jason.duley@nasa.gov"}, "repositoryURL": "https://github.com/dfm/ketu", "description": "The search for transiting exoplanets in K2 data.", "organization": "ARC", "homepageURL": "https://github.com/dfm/ketu", "contributors": ["jason.duley@nasa.gov", "dfm"], "laborHours": 2432, "tags": ["nlp:detection", "nlp:high altitude", "nlp:doppler effect", "nlp:data processing", "nlp:spectrum", "nlp:anisotropy", "nlp:observatory", "nlp:extrasolar planet", "Kepler", "nlp:data acquisition", "nlp:geophysic"], "name": "ketu"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "MIT", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2016-06-10"}, "contact": {"email": "hpparvi@gmail.com"}, "repositoryURL": "https://github.com/hpparvi/k2ps", "description": "Oxford K2 planet search pipeline. Searches for transit-like signals from the k2sc-detrended light curves.", "organization": "ARC", "homepageURL": "https://github.com/hpparvi/k2ps", "contributors": ["hpparvi@gmail.com", "benjaminpope", "hpparvi"], "laborHours": 352, "tags": ["nlp:signal transmission", "nlp:searching", "nlp:stability", "nlp:planetary system", "nlp:planet", "nlp:pipeline", "nlp:signal processing", "nlp:circuit", "nlp:extrasolar planet", "Kepler", "nlp:transit time"], "name": "k2ps"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "MIT", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-11-24"}, "contact": {"email": "nicholas.k.saunders@nasa.gov"}, "repositoryURL": "https://github.com/rodluger/everest", "description": "EPIC Variability Extraction and Removal for Exoplanet Science Targets: A pipeline for de-trending K2 light curves with pixel level decorrelation and Gaussian processes. Here you'll find the Python code used to generate the EVEREST catalog, as well as tools for accessing and interacting with the de-trended light curves.", "organization": "ARC", "homepageURL": "https://rodluger.github.io/everest/", "contributors": ["nicholas.k.saunders@nasa.gov", "rodluger", "nksaunders", "dfm"], "laborHours": 5568, "tags": ["nlp:normal density function", "nlp:target", "nlp:coding", "nlp:extraction", "nlp:catalogs (publications)", "nlp:pipeline", "nlp:extrasolar planet", "nlp:computer program", "nlp:variability", "Kepler", "nlp:light (visible radiation)"], "name": "everest"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "MIT", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-11-24"}, "contact": {"email": "geert.barentsen@nasa.gov"}, "repositoryURL": "https://github.com/barentsen/k2mosaic", "description": "K2mosaic is a command-line tool that makes it easy to combine CCD pixel data obtained by NASA's Kepler space telescope into wide-field images. The need for this tool arises from the fact that the two-wheeled extended Kepler mission, K2, observed large clusters and moving targets (e.g. planets, comets, and asteroids). ", "organization": "ARC", "homepageURL": "https://github.com/barentsen/k2mosaic", "contributors": ["geert.barentsen@nasa.gov"], "laborHours": 352, "tags": ["nlp:target", "nlp:space mission", "nlp:planet", "nlp:asteroid", "nlp:pixel", "Kepler", "nlp:comet", "nlp:imaging technique", "nlp:telescope", "nlp:solar system", "nlp:charge coupled device"], "name": "K2mosaic"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "MIT", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-11-24"}, "contact": {"email": "jessie.dotson@nasa.gov"}, "repositoryURL": "https://github.com/KeplerGO/kadenza", "description": "Converts raw cadence target data from the Kepler space telescope into astronomer-friendly FITS files.", "organization": "ARC", "homepageURL": "https://github.com/KeplerGO/kadenza", "contributors": ["jessie.dotson@nasa.gov"], "laborHours": 736, "tags": ["nlp:infrared telescope", "nlp:file maintenance (computers)", "nlp:target", "nlp:data processing", "nlp:data reduction", "nlp:spaceborne astronomy", "Kepler", "nlp:telescope", "nlp:spaceborne telescope"], "name": "kadenza"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "MIT", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-11-24"}, "contact": {"email": "jessie.dotson@nasa.gov"}, "repositoryURL": "https://github.com/KeplerGO/K2ephem", "description": "Command-line tool to check whether a Solar System body is (or was) observable by NASA's K2 mission", "organization": "ARC", "homepageURL": "https://keplerscience.arc.nasa.gov/software.html#k2ephem", "contributors": ["jessie.dotson@nasa.gov"], "laborHours": 80, "tags": ["nlp:nasa space program", "nlp:space mission", "nlp:human body", "nlp:planet", "nlp:command and control", "nlp:systems engineering", "nlp:nasa program", "nlp:mission planning", "nlp:high gain", "Kepler", "nlp:solar system"], "name": "K2ephem"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "MIT", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2014-02-07"}, "contact": {"email": "jessie.dotson@nasa.gov"}, "repositoryURL": "https://github.com/KeplerGO/K2fov", "description": "The K2fov Python package allows users to check whether a target is in the field of view of K2. In particular, the package adds the K2onSilicon and K2findCampaigns tools to the command line, which allow the visibility of targets to be checked during one (K2onSilicon) or all (K2findCampaigns) campaigns, respectively.", "organization": "ARC", "homepageURL": "https://keplerscience.arc.nasa.gov/software.html#k2fov", "contributors": ["jessie.dotson@nasa.gov"], "laborHours": 8112, "tags": ["nlp:target acquisition", "nlp:on-line system", "nlp:visibility", "nlp:target", "nlp:field of view", "nlp:on-line programming", "nlp:user requirement", "nlp:target recognition", "nlp:software development tool", "nlp:applications programs (computers)", "Kepler"], "name": "K2fov"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-01-15"}, "contact": {"email": "Jwely"}, "repositoryURL": "https://github.com/NASA-DEVELOP/dnppy", "description": "DEVELOP National Program Python package for use with NASA data and GIS. dnppy is a collection of functions and classes for download, format, and analysis of NASA satelite data and anciliary NOAA datasets", "organization": "LaRC", "homepageURL": "https://nasa-develop.github.io/dnppy/", "contributors": ["Jwely"], "laborHours": 5888, "tags": ["satellite DATA", "nlp:functions (mathematics)", "nlp:format", "nlp:data reduction", "nlp:data processing", "nlp:systems analysi", "nlp:nasa program", "nlp:data management", "GIS", "nlp:applications programs (computers)", "nlp:computer program", "nlp:data acquisition", "NOAA"], "name": "dnppy"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2014-09-05"}, "contact": {"email": "Seiji.Kato@NASA.gov"}, "repositoryURL": "http://www-cave.larc.nasa.gov/LFLcode/Ed4_LaRC_FuLiou201501.tar.gz", "description": "Data collected in the CAVE effort are meant for use in validation studies of Clouds & The Earths Radiant Energy System (CERES) instruments operating on the Suomi NPP and Earth Observing Systems(EOS)Terra & Aqua & Tropical Rainfall Measurement Mission (TRMM) satellites.", "organization": "LaRC", "homepageURL": "http://www-cave.larc.nasa.gov/index.html", "contributors": ["Seiji.Kato@NASA.gov"], "laborHours": 45552, "tags": ["nlp:earth observing system (eos)", "CERES", "ARM", "nlp:satellite-borne instrument", "nlp:earth observations (from space)", "nlp:remote sensing", "nlp:satellite instrument", "nlp:satellite observation", "nlp:mission planning", "nlp:earth (planet)", "validation", "nlp:rain", "nlp:trmm satellite"], "name": "CERES/ARM Validation Experiment (CAVE)"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-03-04"}, "contact": {"email": "dalia.b.kirschbaum@nasa.gov"}, "repositoryURL": "https://github.com/vightel/ojo-bot", "description": "This is a prototype data processor/publisher for NASA.", "organization": "GSFC", "homepageURL": "https://github.com/vightel/ojo-bot", "contributors": ["dalia.b.kirschbaum@nasa.gov"], "laborHours": 93280, "tags": ["nlp:stability", "nlp:data processing", "nlp:data reduction", "nlp:data processing equipment", "nlp:nasa program", "nlp:circuit", "earth sciences", "nlp:reliability", "nlp:data acquisition", "nlp:boundary layer", "nlp:prototype", "landslides"], "name": "OJO Bot"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-09-17"}, "contact": {"email": "dimitra.giannakopoulou@nasa.gov"}, "repositoryURL": "https://github.com/psycopaths/psyco", "description": "jpf-psyco generates symbolic interfaces for software components using concolic execution.", "organization": "ARC", "homepageURL": "https://ti.arc.nasa.gov/m/groups/rse/papers/Giannakopoulou-CAV12.pdf", "contributors": ["dimitra.giannakopoulou@nasa.gov"], "laborHours": 5664, "tags": ["nlp:programming environment", "nlp:computer program integrity", "nlp:human-computer interface", "symbolic learning", "component methods", "nlp:interface", "nlp:environment simulation", "nlp:software engineering", "nlp:software development tool", "nlp:computer systems program", "nlp:computer program", "temporal interfaces", "nlp:computer programming"], "name": "PSYCO: A Predicate-based Symbolic Compositional Reasoning environment"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2014-01-28"}, "contact": {"email": "Paul.Kolano@nasa.gov"}, "repositoryURL": "https://github.com/pkolano/retools", "description": "Retools is a set of modifications to the commonly used open source utilities bzip2, gzip, rsync, and tar that automatically selects the Lustre stripe count for created and/or extracted files according to the sizes of the files involved. By striping large files over a higher number of physical disks and small files over a lower number, aggregate I/O bandwidth for large files is maximized and the impact to the file system due to small files is minimized. These tools support the typical workflow in high performance computing environments where users compress large files and/or aggregate multiple small files into a single archive during remote transfers. Once uncompressed/unarchived into their original form, these files will be optimally striped for subsequent operations.", "organization": "ARC", "homepageURL": "https://pkolano.github.io/projects/retools.html", "contributors": ["Paul.Kolano@nasa.gov"], "laborHours": 16, "tags": ["Lustre file systems", "nlp:file maintenance (computers)", "nlp:performance prediction", "nlp:input/output routine", "nlp:systems analysi", "nlp:computer storage device", "disk striping", "nlp:bandwidth", "utility", "nlp:data transfer (computers)", "nlp:computer", "nlp:magnetic disk", "nlp:computer program"], "name": "Restriping Tools for Lustre (Retools)"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2012-05-11"}, "contact": {"email": "stereo-pipeline@lists.nasa.gov"}, "repositoryURL": "https://github.com/neogeographytoolkit/stereopipeline", "description": "The NASA Ames Stereo Pipeline (ASP) is a suite of free and open source automated geodesy and stereogrammetry tools designed for processing stereo imagery captured from satellites (around Earth and other planets), robotic rovers, aerial cameras, and historical imagery, with and without accurate camera pose information. It produces cartographic products, including digital elevation models (DEMs), ortho-projected imagery, 3D models, and bundle-adjusted networks of cameras. ASP's data products are suitable for science analysis, mission planning, and public outreach.", "organization": "ARC", "homepageURL": "https://ti.arc.nasa.gov/tech/asr/intelligent-robotics/ngt/stereo/", "contributors": ["stereo-pipeline@lists.nasa.gov", "oleg-alexandrov", "ScottMcMichael", "broxtronix", "novas0x2a", "khusmann", "ljexplore", "anefian", "SmithB", "dshean", "trey0", "mstyer", "rbeyer", "harguess", "saravkin", "jlaura"], "laborHours": 104608, "tags": ["stereogrammetry", "satellites imagery", "nlp:stereophotography", "nlp:elevation", "nlp:roving vehicle", "nlp:mission planning", "nlp:satellite observation", "nlp:earth (planet)", "tools", "nlp:geodesy", "geodesy", "nlp:earth science", "nlp:geodetic satellite", "nlp:photogrammetry"], "name": "Neo-Geography Toolkit (NGT)"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2011-09-16"}, "contact": {"email": "maria.bualat@nasa.gov"}, "repositoryURL": "https://sourceforge.net/projects/irg-verve/files/latest/download", "description": "VERVE (Visual Environment for Remote Virtual Exploration) is a collection of software components for visualizing, monitoring, and commanding robots in remote environments. VERVE is developed by the Intelligent Robotics Group at NASA Ames Research Center and is part of the NASA Ensemble software ecosystem.", "organization": "ARC", "homepageURL": "https://sourceforge.net/p/irg-verve/wiki/VERVE%20Wiki%20Home/", "contributors": ["maria.bualat@nasa.gov"], "laborHours": 271488, "tags": ["nlp:robot dynamic", "nlp:remote control", "nlp:robot control", "nlp:programming environment", "nlp:robotic", "nlp:ecosystem", "nlp:software engineering", "nlp:robot", "robots", "nlp:virtual reality", "nlp:computer program", "virtual environment"], "name": "Visual Environment for Remote Virtual Exploration (VERVE)"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2009-11-06"}, "contact": {"email": "peter.c.mehlitz@nasa.gov"}, "repositoryURL": "https://ti.arc.nasa.gov/m/opensource/nu-anomica/nu-anomica.zip", "description": "One-class nu-Support Vector machine (SVMs) learning technique maps the input data into a much higher dimensional space and then uses a small portion of the training data (support vectors) to parametrize the decision surface that can linearly separate nu fraction of training points (labeled as anomalies) from the rest.", "organization": "ARC", "homepageURL": "https://ti.arc.nasa.gov/opensource/projects/nu-anomica/", "contributors": ["peter.c.mehlitz@nasa.gov"], "laborHours": 272, "tags": ["nlp:support system", "nlp:surface propertie", "nlp:decision theory", "nlp:vector analysi", "nlp:anomaly", "SVM", "nlp:machine learning", "nlp:vectors (mathematics)", "nlp:education", "nlp:decision making", "nlp:surface geometry", "Support Vector Machine"], "name": "nu-Anomica"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-02-27"}, "contact": {"email": "michael.bloem@nasa.gov"}, "repositoryURL": "https://github.com/nasa/pymdptoolbox", "description": "The MDP toolbox for Python by Sam Cordwell provides classes and functions for the resolution of descrete-time Markov Decision Processes. The list of algorithms that have been implemented includes backwards induction, linear programming, policy iteration, q-learning and value iteration along with several variations.", "organization": "ARC", "homepageURL": "https://github.com/nasa/pymdptoolbox", "contributors": ["michael.bloem@nasa.gov"], "laborHours": 1456, "tags": ["Decision Making", "nlp:iterative solution", "Markov Decision Process", "nlp:algorithm", "nlp:decision theory", "nlp:stochastic processe", "nlp:linear programming", "MDP", "nlp:machine learning", "nlp:dynamic programming", "nlp:iteration", "IRL", "nlp:decision making", "nlp:markov processe"], "name": "Inverse Reinforcement Learning (IRL) Augmentation for PyMDPToolbox"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-02-27"}, "contact": {"email": "terry.fong@nasa.gov"}, "repositoryURL": "https://github.com/xgds", "description": "xGDS (Exploration Ground Data Systems) synthesizes real world data (from sensors, robots, ROVs, mobile devices, etc) and human observations into rich, digital maps and displays for analysis, decision making, and collaboration. xGDS evolved from our work developing tools to control, monitor and collect data from autonomous rovers supporting NASA's terrestrial field science research. xGDS is a highly collaborative, interactive suite of web software.", "organization": "ARC", "homepageURL": "https://ti.arc.nasa.gov/tech/asr/groups/intelligent-robotics/xgds/", "contributors": ["terry.fong@nasa.gov"], "laborHours": 666480, "tags": ["nlp:temperature measuring instrument", "Decision Making", "nlp:data system", "nlp:robotic", "nlp:scientific visualization", "nlp:robot", "Maps", "Ground Data Systems", "nlp:sensor", "nlp:autonomy", "nlp:decision making", "nlp:data acquisition", "nlp:display device"], "name": "xGDS"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2016-02-05"}, "contact": {"email": "support@earthdata.nasa.gov"}, "repositoryURL": "https://github.com/nasa-gibs/mrf", "description": "The source code contains the Meta Raster Format (MRF) specification and plugin for GDAL, which is a part of the OnEarth software package. OnEarth consists of image formatting and serving modules which facilitate the deployment of a web service capable of efficiently serving standards-based requests for georeferenced raster imagery at multiple spatial resolutions including, but not limited to, full spatial resolution. The Meta Raster Format and OnEarth software were originally developed at the Jet Propulsion Laboratory (JPL) to serve global daily composites of MODIS imagery. Since then, it has been deployed and repurposed in other installations, including at the Physical Oceanography Distributed Active Archive Center (PO.DAAC) in support of the State of the Oceans (SOTO) visualization tool, the Lunar Mapping and Modeling Project (LMMP), and GIBS.", "organization": "JPL", "homepageURL": "https://github.com/nasa-gibs/mrf", "contributors": ["support@earthdata.nasa.gov"], "laborHours": 864, "tags": ["eosdis", "nlp:image processing", "mrf", "nlp:scientific visualization", "Tiled WMS", "nlp:image analysi", "nlp:software engineering", "gibs", "nlp:high resolution", "nlp:software development tool", "global imagery browse services", "onearth", "nlp:imagery", "earth data science", "nlp:applications programs (computers)", "nlp:computer program", "worldview", "nlp:deployment"], "name": "Meta Raster Format (mrf)"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-08-31"}, "contact": {"email": "support@earthdata.nasa.gov"}, "repositoryURL": "https://github.com/nasa-gibs/data-curtains", "description": "NASA's Data Curtains from Space is a Google Summer of Code 2015 Project for the Cesium Community developed by Abhishek Potnis under the guidance of Mike McGann and Ryan Boller at NASA. Data Curtains from Space uses Cesium to better visualize data from the CALIPSO satellite, which is used to study clouds and aerosols in the atmosphere.", "organization": "JPL", "homepageURL": "https://github.com/nasa-gibs/data-curtains", "contributors": ["support@earthdata.nasa.gov"], "laborHours": 53584, "tags": ["eosdis", "data visualization", "nlp:aerosol", "nlp:atmospheric radiation", "nlp:meteorological satellite", "nlp:cloud", "nlp:clouds (meteorology)", "Tiled WMS", "nlp:earth atmosphere", "gibs", "nlp:nasa program", "global imagery browse services", "onearth", "nlp:satellite observation", "earth data science", "nlp:cloud cover", "worldview", "nlp:atmospheric composition"], "name": "Data Curtains"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2016-02-12"}, "contact": {"email": "support@earthdata.nasa.gov"}, "repositoryURL": "https://github.com/nasa-gibs/onearth", "description": "OnEarth is a software package consisting of image formatting and serving modules which facilitate the deployment of a web service capable of efficiently serving standards-based requests for georeferenced raster imagery at multiple spatial resolutions including, but not limited to, full spatial resolution. The software was originally developed at the Jet Propulsion Laboratory (JPL) to serve global daily composites of MODIS imagery. Since then, it has been deployed and repurposed in other installations, including at the Physical Oceanography Distributed Active Archive Center (PO.DAAC) in support of the State of the Oceans (SOTO) visualization tool, the Lunar Mapping and Modeling Project (LMMP), and Worldview.", "organization": "JPL", "homepageURL": "https://github.com/nasa-gibs/onearth", "contributors": ["support@earthdata.nasa.gov"], "laborHours": 28816, "tags": ["eosdis", "nlp:scientific visualization", "Tiled WMS", "nlp:image analysi", "nlp:software engineering", "gibs", "nlp:high resolution", "nlp:computer program", "nlp:software development tool", "global imagery browse services", "onearth", "nlp:imagery", "earth data science", "nlp:applications programs (computers)", "nlp:image processing", "worldview", "nlp:deployment"], "name": "OnEarth"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2016-02-12"}, "contact": {"email": "support@earthdata.nasa.gov"}, "repositoryURL": "https://github.com/nasa-gibs/onearth-boxes", "description": "OnEarth-Boxes is a system that creates VM images for use in running, testing, and experimenting with the OnEarth and MRF tools. It uses Packer to produce a variety of pre-built VMs in different formats. OnEarth-Boxes comes pre-configured with NASA Blue Marble and MODIS Aerosol imagery layers, in 4 separate projections. There are OpenLayers endpoints for testing with WMTS, as well as TWMS/KML and Mapserver endpoints.", "organization": "JPL", "homepageURL": "https://github.com/nasa-gibs/onearth-boxes", "contributors": ["support@earthdata.nasa.gov"], "laborHours": 160, "tags": ["eosdis", "nlp:photograph", "nlp:satellite imagery", "nlp:image", "nlp:infrared imagery", "nlp:aerosol", "Tiled WMS", "nlp:format", "nlp:image analysi", "gibs", "global imagery browse services", "onearth", "nlp:imagery", "earth data science", "nlp:image processing", "nlp:imaging technique", "worldview"], "name": "OnEarth Boxes"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-05-20"}, "contact": {"email": "support@earthdata.nasa.gov"}, "repositoryURL": "https://github.com/nasa-gibs/gibs-web-examples", "description": "This project shows how to use GIBS as a tile source for OpenLayers, Leaflet, Cesium, Bing, and Google Maps.", "organization": "JPL", "homepageURL": "https://github.com/nasa-gibs/gibs-web-examples", "contributors": ["support@earthdata.nasa.gov"], "laborHours": 13104, "tags": ["eosdis", "nlp:heat source", "Tiled WMS", "nlp:light source", "gibs", "nlp:cesium vapor", "nlp:cesium", "global imagery browse services", "onearth", "nlp:circuit", "earth data science", "nlp:point source", "nlp:reliability", "nlp:boundary layer", "nlp:cesium plasma", "worldview", "nlp:radiation source"], "name": "GIBS Web Examples"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-04-03"}, "contact": {"email": "support@earthdata.nasa.gov"}, "repositoryURL": "https://github.com/nasa-gibs/ol3", "description": "This repository contains changes to OpenLayers 3 used by Worldview.", "organization": "GSFC", "homepageURL": "https://github.com/nasa-gibs/ol3", "contributors": ["support@earthdata.nasa.gov"], "laborHours": 64640, "tags": ["eosdis", "nlp:petrology", "nlp:mineralogy", "nlp:sediment", "Tiled WMS", "nlp:meteoritic composition", "gibs", "global imagery browse services", "onearth", "nlp:mathematical model", "nlp:tectonic", "earth data science", "nlp:geomorphology", "nlp:planetary evolution", "nlp:biological evolution", "worldview", "nlp:mechanical property"], "name": "Open Layers 3"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2012-05-22"}, "contact": {"email": "gsfc-softwarerelease@mail.nasa.gov"}, "repositoryURL": "https://sourceforge.net/projects/gmat/files/latest/download", "description": "GMAT is a software system for mission analysis and trajectory optimization, estimation, and prediction. The technology can be used to design spacecraft trajectories, optimize maneuvers, perform orbit determination, visualize and communicate mission parameters, and understand a mission's trade space.", "organization": "GSFC", "homepageURL": "https://sourceforge.net/projects/gmat/", "contributors": ["gsfc-softwarerelease@mail.nasa.gov"], "laborHours": 2140848, "tags": ["nlp:orbit calculation", "nlp:spacecraft trajectory", "nlp:trajectory analysi", "nlp:trajectory optimization", "Design and Integration Tools", "nlp:spacecraft maneuver", "nlp:orbital maneuver", "nlp:mission planning", "nlp:orbit determination", "nlp:interplanetary trajectorie", "nlp:computer program"], "name": "General Mission Analysis Tool (GMAT), Revision 2012a"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-03-12"}, "contact": {"email": "gsfc-softwarerelease@mail.nasa.gov"}, "repositoryURL": "https://sourceforge.net/projects/cfs-cfdp/files/latest/download", "description": "The CCSDS File Delivery Protocol (CFDP) application (CF) is a core Flight System (cFS) application that is a plug in to the Core Flight Executive (cFE) component of the cFS. The CFDP application provides the capability to transmit and receive files to/from the ground. Tables are used to allow flexibility in specifying directory priorities and configurations.", "organization": "GSFC", "homepageURL": "https://sourceforge.net/projects/cfs-cfdp", "contributors": ["gsfc-softwarerelease@mail.nasa.gov"], "laborHours": 41120, "tags": ["nlp:file maintenance (computers)", "nlp:ground test", "nlp:protocol (computers)", "nlp:flight control", "nlp:flexibility", "nlp:automatic flight control", "nlp:flight test", "nlp:systems engineering", "vehicle management (space/air/ground)", "nlp:applications programs (computers)", "nlp:airborne equipment"], "name": "Core Flight System (CFS) CCSDS File Delivery Protocol (CFDP)"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-03-13"}, "contact": {"email": "gsfc-softwarerelease@mail.nasa.gov"}, "repositoryURL": "https://sourceforge.net/projects/cfs-cs/files/latest/download", "description": "The Checksum application (CS) is a core Flight System (cFS) application that is a plug in to the Core Flight Executive (cFE) component of the cFS. Checksum (CS) is one of the reusable applications that make up the Core Flight System (CFS). The technology performs memory integrity management by verifying the contents of critical flight memory regions. Unexpected changes in memory (i.e., due to an SEU) are reported to ground operators.", "organization": "GSFC", "homepageURL": "https://github.com/nasa/cs", "contributors": ["gsfc-softwarerelease@mail.nasa.gov"], "laborHours": 37984, "tags": ["nlp:technology utilization", "nlp:computer storage device", "nlp:management system", "vehicle management (space/air/ground)", "nlp:memory (computers)", "nlp:magnetic core"], "name": "Core Flight System (CFS) Checksum Application"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-08-04"}, "contact": {"email": "gsfc-softwarerelease@mail.nasa.gov"}, "repositoryURL": "https://github.com/nasa/ds", "description": "The Data Storage application (DS) is a core Flight System (cFS) application that is a plug in to the Core Flight Executive (cFE) component of the cFS. The DS application provides the ability to store data (i.e., messages) into files. Tables are used to provide the flexibility for specifying messages.", "organization": "GSFC", "homepageURL": "https://sourceforge.net/projects/cfs-ds", "contributors": ["gsfc-softwarerelease@mail.nasa.gov"], "laborHours": 24704, "tags": ["nlp:message", "nlp:file maintenance (computers)", "nlp:data system", "nlp:data base", "nlp:tables (data)", "nlp:data processing equipment", "nlp:data processing", "nlp:data management", "vehicle management (space/air/ground)", "nlp:message processing", "nlp:data storage"], "name": "Core Flight System (CFS) Data Storage (DS) Application"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-03-20"}, "contact": {"email": "gsfc-softwarerelease@mail.nasa.gov"}, "repositoryURL": "https://github.com/nasa/fm", "description": "FM provides the user commands to perform the following operations: copy file, move file, rename file, delete file(s), close file, concatenate file, decompress file, delete directory contents, create directory, remove directory, obtain file information, obtain open file listing, and obtain directory listings.", "organization": "GSFC", "homepageURL": "https://sourceforge.net/projects/cfs-fm", "contributors": ["gsfc-softwarerelease@mail.nasa.gov"], "laborHours": 37872, "tags": ["nlp:systems management", "nlp:information management", "nlp:command and control", "nlp:user requirement", "nlp:information", "nlp:systems engineering", "vehicle management (space/air/ground)", "nlp:information system", "nlp:information retrieval", "nlp:user manuals (computer programs)", "nlp:management information system"], "name": "Core Flight System (CFS) File Manager (FM) Application"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-03-17"}, "contact": {"email": "gsfc-softwarerelease@mail.nasa.gov"}, "repositoryURL": "https://github.com/nasa/hs", "description": "The plug-and-play CFS Health and Safety application is compatible with the Core Flight Executive (cFE) and uses the Operating System Abstraction Layer (OSAL), both of which were developed by Goddard Space Flight Center in order to provide a reusable, platform-independent, mission-independent, layered architecture for hosting applications. The technology can be used for any government or commercial spacecraft.", "organization": "GSFC", "homepageURL": "https://sourceforge.net/projects/cfs-hs", "contributors": ["gsfc-softwarerelease@mail.nasa.gov"], "laborHours": 20752, "tags": ["nlp:technology utilization", "nlp:space mission", "nlp:manned space flight", "nlp:architecture (computers)", "nlp:space flight", "nlp:systems engineering", "nlp:spacecraft control", "vehicle management (space/air/ground)", "nlp:aerospace engineering", "nlp:systems health monitoring", "nlp:applications programs (computers)"], "name": "Core Flight System (CFS) Health and Safety Application"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-03-17"}, "contact": {"email": "gsfc-softwarerelease@mail.nasa.gov"}, "repositoryURL": "https://github.com/nasa/hk", "description": "The Housekeeping application (HK) is a core Flight System (cFS) application that is a plug in to the Core Flight Executive (cFE) component of the cFS. The CFS Housekeeping application provides the ability to organize data from various packets into new packets in order to best utilize the telemetry bandwidth available for a mission.", "organization": "GSFC", "homepageURL": "https://sourceforge.net/projects/cfs-hk", "contributors": ["gsfc-softwarerelease@mail.nasa.gov"], "laborHours": 12624, "tags": ["nlp:space mission", "nlp:data processing", "nlp:systems engineering", "vehicle management (space/air/ground)", "nlp:bandwidth", "nlp:radio telemetry", "nlp:data transmission", "nlp:telemetry", "nlp:biotelemetry", "nlp:packets (communication)"], "name": "Core Flight System (CFS) Housekeeping (HK) Application"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-03-17"}, "contact": {"email": "gsfc-softwarerelease@mail.nasa.gov"}, "repositoryURL": "https://github.com/nasa/lc", "description": "The Limit Checker application (LC) is a core Flight System (cFS) application that is a plug in to the Core Flight Executive (cFE) component of the cFS. The Limit Checker (LC) application is responsible for monitoring telemetry values.", "organization": "GSFC", "homepageURL": "https://sourceforge.net/projects/cfs-lc", "contributors": ["gsfc-softwarerelease@mail.nasa.gov"], "laborHours": 43168, "tags": ["nlp:systems analysi", "nlp:flight test", "nlp:systems engineering", "nlp:conference", "vehicle management (space/air/ground)", "nlp:telemetry", "nlp:biotelemetry"], "name": "Core Flight System (CFS) Limit Checker (LC) Application"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-03-17"}, "contact": {"email": "gsfc-softwarerelease@mail.nasa.gov"}, "repositoryURL": "https://github.com/md", "description": "The Memory Dwell application telemeters the contents of table-defined addresses at a table-defined dwell rate. Addresses can be processed using symbols if the target processor/operating system includes symbols.", "organization": "GSFC", "homepageURL": "https://sourceforge.net/projects/cfs-md", "contributors": ["gsfc-softwarerelease@mail.nasa.gov"], "laborHours": 18528, "tags": ["nlp:symbol", "nlp:target acquisition", "nlp:computer component", "nlp:operating systems (computers)", "nlp:data processing equipment", "nlp:computer storage device", "nlp:magnetic storage", "vehicle management (space/air/ground)", "nlp:data storage", "nlp:memory (computers)", "nlp:central processing unit"], "name": "Core Flight System (CFS) Memory Dwell Application"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-05-31"}, "contact": {"email": "gsfc-softwarerelease@mail.nasa.gov"}, "repositoryURL": "https://github.com/nasa/sch", "description": "The Scheduler application (SCH) is a core Flight System (cFS) application that is a plug in to the Core Flight Executive (cFE) component of the cFS. The Scheduler application uses a one-second major timeframe, which is divided into a designer-determined collection of equally divided minor timeframes. The technology is configurable and table-driven to provide greater flexibility.", "organization": "GSFC", "homepageURL": "https://sourceforge.net/projects/cfs-sch", "contributors": ["gsfc-softwarerelease@mail.nasa.gov"], "laborHours": 20752, "tags": ["nlp:technology utilization", "nlp:avionic", "nlp:flight control", "nlp:flexibility", "nlp:automatic flight control", "nlp:flight test", "nlp:systems engineering", "vehicle management (space/air/ground)", "nlp:technology assessment", "nlp:data acquisition"], "name": "Core Flight System (CFS) Scheduler Application"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-03-17"}, "contact": {"email": "gsfc-softwarerelease@mail.nasa.gov"}, "repositoryURL": "https://github.com/nasa/sbn", "description": "The Software Bus Network application (SBN) is a core Flight System (cFS) application that is a plug in to the Core Flight Executive (cFE) component of the cFS. The SBN serves as a plug-in to the cFE framework to transfer messages across process/processor interfaces. The technology has three primary functions: to establish and maintain a connection to each peer over available process/processor interfaces; to distribute and maintain a subscription message database for each peer; and to distribute messages to peers that have subscribed to message identifiers.", "organization": "GSFC", "homepageURL": "https://sourceforge.net/projects/cfs-sbn", "contributors": ["gsfc-softwarerelease@mail.nasa.gov"], "laborHours": 2768, "tags": ["nlp:data base", "nlp:network synthesi", "nlp:computer component", "nlp:software engineering", "nlp:computer network", "nlp:distributed processing", "vehicle management (space/air/ground)", "nlp:computer systems program", "nlp:channels (data transmission)", "nlp:applications programs (computers)", "nlp:computer program"], "name": "Core Flight System (CFS) Software Bus Network (SBN) Application"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-03-17"}, "contact": {"email": "gsfc-softwarerelease@mail.nasa.gov"}, "repositoryURL": "https://github.com/nasa/sc", "description": "The Stored Command application (SC) is a core Flight System (cFS) application that is a plug in to the Core Flight Executive (cFE) component of the cFS. The CFS SC application provides the ability to execute onboard absolute-time and relative-time command sequences. The technology offers a generic implementation that can be configured by a user to fit the needs of a specific mission.", "organization": "GSFC", "homepageURL": "https://sourceforge.net/projects/cfs-sc", "contributors": ["gsfc-softwarerelease@mail.nasa.gov"], "laborHours": 18528, "tags": ["nlp:technology utilization", "nlp:real time operation", "nlp:space mission", "nlp:human-computer interface", "nlp:command and control", "nlp:user requirement", "nlp:systems engineering", "vehicle management (space/air/ground)", "nlp:mission planning", "nlp:sequencing", "nlp:applications programs (computers)"], "name": "Core Flight System (CFS) Stored Command (SC) Application"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2008-06-16"}, "contact": {"email": "larc-sra@mail.nasa.gov"}, "repositoryURL": "https://github.com/kleb/nasarb", "description": "A home for NASA's open source Ruby software.  funit (Fortran unit testing framework.) fortran (Fortran utilities.) watch-paths (Poor man's file monitoring.) namelists (Generates webpage for creating namelists found in Fortran programs.) uq4sim (Uncertainty quantification for simulation.)", "organization": "LaRC", "homepageURL": "https://github.com/kleb/nasarb", "contributors": ["larc-sra@mail.nasa.gov"], "laborHours": 4080, "tags": ["nlp:fortran", "nlp:simulation", "nlp:computerized simulation", "Data and Image Processing", "nlp:software engineering", "nlp:nasa program", "nlp:software development tool", "nlp:computer systems program", "nlp:applications programs (computers)", "nlp:computer program", "nlp:computer programming"], "name": "NASA Ruby"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2017-07-12"}, "contact": {"email": "Joseph Rios"}, "repositoryURL": "https://github.com/nasa/utm-apis", "description": "This repository contains the collection of OpenAPI specification APIs within the NASA's research version of the UTM System.", "organization": "ARC", "homepageURL": "https://github.com/nasa/utm-apis", "contributors": ["Joseph Rios"], "laborHours": 5696, "tags": ["nlp:specification", "nlp:research aircraft", "Optimization", "nlp:equipment specification", "Aeronautics", "nlp:systems engineering", "nlp:nasa program", "Linear Programming", "nlp:data acquisition"], "name": "utm-apis"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-12-02"}, "contact": {"email": "davidecox"}, "repositoryURL": "https://github.com/nasa/GTM_DesignSim", "description": "The GTM_DesignSim is a Matlab/Simulink simulation intended for design and analysis of flight control laws. It models the dynamics of a 5.5% scale model of a generic transport aircraft. The simulation was developed to allow fault accommodating control algorithms to be developed and refined in simulation before being tested on an experimental subscale model.", "organization": "LaRC", "homepageURL": "https://github.com/nasa/GTM_DesignSim/wiki", "contributors": ["davidecox"], "laborHours": 560, "tags": ["nlp:flight control", "Framework", "nlp:dynamic model", "Flight Control", "nlp:control systems design", "Web", "nlp:computerized simulation", "Simulation", "nlp:aircraft model", "Toolkit", "nlp:simulation", "nlp:control simulation", "nlp:transport aircraft", "nlp:aircraft design", "nlp:aircraft control"], "name": "Flight Dynamics Simulation of a Generic Transport Model"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-12-02"}, "contact": {"email": "jason.duley@nasa.gov"}, "repositoryURL": "https://github.com/nasa/NASTRAN-93", "description": "NASTRAN is the NASA Structural Analysis System, a finite element analysis program (FEA) completed in the early 1970's. It was the first of its kind and opened the door to computer-aided engineering. Subsections of a design can be modeled and then larger groupings of these elements can again be modeled. NASTRAN can handle elastic stability analysis, complex eigenvalues for vibration and dynamic stability analysis, dynamic response for transient and steady state loads, and random excitation, and static response to concentrated and distributed loads, thermal expansion, and enforced deformations.", "organization": "LaRC", "homepageURL": "https://github.com/nasa/NASTRAN-93", "contributors": ["jason.duley@nasa.gov"], "laborHours": 229792, "tags": ["nlp:structural vibration", "nlp:random vibration", "nlp:structural engineering", "nlp:dynamic structural analysi", "nlp:nastran", "Structural Analysis", "nlp:structural stability", "nlp:finite element method", "nlp:dynamic response", "CAD", "FEA", "nlp:computer program", "nlp:structural analysi", "NASTRAN"], "name": "NASTRAN 93"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-06-15"}, "contact": {"email": "VWoeltjen"}, "repositoryURL": "https://github.com/nasa/openmctweb", "description": "Open MCT is an open source and web-based mission control framework for visualization of data on desktop and mobile devices. Open MCT is designed for analysis, visualization, operation, and support of spacecraft missions. Open MCT provides an extensible plugin system allowing it to be integrated with existing ground systems, and adapted to support multiple missions as well as non-space applications.", "organization": "ARC", "homepageURL": "https://github.com/nasa/openmctweb", "contributors": ["VWoeltjen", "larkin", "charlesh88", "brianwyu", "akhenry"], "laborHours": 16000, "tags": ["operations", "nlp:data system", "nlp:space mission", "nlp:scientific visualization", "nlp:optic", "Framework", "Web", "nlp:ground based control", "nlp:ground support system", "nlp:spacecraft control", "nlp:mission planning", "nlp:ground operational support system", "nlp:spacecraft environment", "Platform"], "name": "Open MCT"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-03-16"}, "contact": {"email": "Mr. Michael Joyce"}, "repositoryURL": "https://github.com/apache/climate", "description": "Apache Open Climate Workbench provides a Climate Science library and a suite of tools built on top of it to facilitate multi-model and multi-observation comparisons and visualizations for Climate Scientists.", "organization": "JPL", "homepageURL": "https://climate.apache.org/", "contributors": ["Mr. Michael Joyce", "Dr. Chris A. Mattmann", "Mr. Paul Ramirez", "Dr. Lewis John McGibbney", "Dr. Kim Whitehall", "Ms. Shakeh Khudikyan", "Mr. Maziyar Boustani"], "laborHours": 15792, "tags": ["Visualization", "Analysis", "Climate Science", "Climate", "nlp:scientific visualization", "nlp:dynamic model", "Web", "nlp:library", "Toolkit", "nlp:comparison", "nlp:atmospheric model", "nlp:mathematical model", "nlp:climate model", "nlp:climate", "nlp:boundary layer"], "name": "Apache Open Climate Workbench"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2014-11-13"}, "contact": {"email": "dheater"}, "repositoryURL": "https://github.com/nasa/libSPRITE", "description": "libSPRITE is a set of libraries that have been used on several past projects including flight, technology demonstration, and simulation projects.\n\nlibSPRITE provides a diverse set of functions to attempt to simplify coding and reduce code errors. For example, libSPRITE defines engineering units as types (i.e., Meters or Radians instead of double or int). It includes an engineering unit aware math library.\n\nlibSPRITE includes a task scheduling system that abstracts pthreads and includes a publish subscribe data system for data routing.\n\nIn addition, libSPRITE includes an optional binding to the Lua scripting language for configuring the program, setting parameters, running Lua scripts within C++ tasks and even interacting with the application during runtime.", "organization": "MSFC", "homepageURL": "https://github.com/nasa/libSPRITE/wiki", "contributors": ["dheater"], "laborHours": 87072, "tags": ["nlp:coding", "nlp:scheduling", "framework", "nlp:c++ (programming language)", "nlp:computerized simulation", "library", "nlp:error", "nlp:systems engineering", "nlp:error analysi", "nlp:applications programs (computers)", "nlp:computer program", "middleware", "nlp:systems simulation"], "name": "libSPRITE"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2014-10-22"}, "contact": {"email": "teubert"}, "repositoryURL": "https://github.com/nasa/XPlaneConnect", "description": "The X-Plane Communications Toolbox (XPC) is an open source research tool used to interact with the commercial flight simulator software X-Plane. XPC allows users to control aircraft and receive state information from aircraft simulated in X-Plane using functions written in C or MATLAB in real time over the network. This research tool has been used to visualize flight paths, test control algorithms, simulate an active airspace, or generate out-the-window visuals for in-house flight simulation software.", "organization": "ARC", "homepageURL": "https://github.com/nasa/XPlaneConnect/wiki", "contributors": ["teubert"], "laborHours": 7888, "tags": ["nlp:real time operation", "Flight Simulation", "nlp:algorithm", "nlp:flight control", "nlp:simulator", "Research Tools", "nlp:flight simulation", "nlp:computerized simulation", "nlp:simulation", "nlp:flight simulator", "nlp:control simulation", "nlp:flight path"], "name": "X-Plane Communication Toolbox (XPC)"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2014-08-26"}, "contact": {"email": "VWoeltjen"}, "repositoryURL": "https://github.com/nasa/MCT-Plugins", "description": "This plug-in allows users to create satellites in MCT and track their orbits, in real-time, through various views: Satellite Orbits in 3D via the Earth View plug-in. Real-time locations on a 2D Mercator Projection (A new to MCT; created within this plug-in). All of the views that come standard with the core-MCT distribution (i.e.: MultiColumn View, Plots over time, Alpha, etc.).", "organization": "GSFC", "homepageURL": "https://github.com/nasa/MCT-Plugins/wiki", "contributors": ["VWoeltjen", "harleigh", "DanBerrios", "danielpacak"], "laborHours": 11888, "tags": ["nlp:satellite orbit", "nlp:real time operation", "nlp:circular orbit", "telemetry", "nlp:user requirement", "nlp:time signal", "tracking", "nlp:position (location)", "MCT", "plug-in", "nlp:earth (planet)", "nlp:satellite observation", "imagery", "nlp:satellite transmission", "Mission Critical Technologies", "nlp:earth orbit", "satellite"], "name": "MCT-Plugins", "languages": ["Java"]}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2014-07-10"}, "contact": {"email": "VWoeltjen"}, "repositoryURL": "https://github.com/nasa/mct", "description": "Mission Control Technologies is a real-time monitoring and visualization platform.", "organization": "ARC", "homepageURL": "https://github.com/nasa/mct/wiki", "contributors": ["VWoeltjen", "DanBerrios", "alpearson", "harleigh", "adamcrume", "kptran", "danielpacak", "dtran320", "phallbic", "bhong", "chriswebster"], "laborHours": 99248, "tags": ["visualization", "nlp:remote control", "nlp:real time operation", "mission", "nlp:space mission", "nlp:time dependence", "application", "nlp:scientific visualization", "nlp:ground based control", "nlp:monitor", "nlp:spacecraft control", "MCT", "nlp:environmental control", "nlp:adaptive control", "monitoring", "control", "spacelfight"], "name": "mct", "languages": ["Java"]}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2014-07-30"}, "contact": {"email": "rsial2"}, "repositoryURL": "https://github.com/nasa/SCRD", "description": "The SCRD is a flexible system that can be easily updated or modified for ongoing legislative mandates and is able to provide robust accounting tools for posting and adjusting payments.", "organization": "COE", "homepageURL": "https://github.com/nasa/SCRD", "contributors": ["rsial2"], "laborHours": 197552, "tags": ["nlp:failure", "nlp:vibration", "deposits", "repository", "nlp:systems analysi", "tracking", "nlp:systems engineering", "nlp:conference", "nlp:software development tool", "nlp:missile", "nlp:reliability", "re-deposits", "payment", "nlp:optimization"], "name": "SCRD", "languages": ["Java"]}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2014-09-17"}, "contact": {"email": "jasonduley"}, "repositoryURL": "https://github.com/nasa/digital-strategy", "description": "Machine-readable schema for NASA's response to the president's digital strategy.", "organization": "ARC", "homepageURL": "https://github.com/nasa/digital-strategy", "contributors": ["jasonduley", "seanherron"], "laborHours": 1168, "tags": ["nlp:stability", "digital strategy", "citizen", "developer", "repository", "nlp:nasa program", "nlp:conference", "nlp:physiological respons", "nlp:circuit", "nlp:reliability", "nlp:environment", "nlp:boundary layer", "nlp:radiation", "nlp:strategy"], "name": "Digital-Strategy", "languages": ["CSS"]}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2014-04-07"}, "contact": {"email": "nasarader"}, "repositoryURL": "https://github.com/nasa/CoECI-CMS-Healthcare-Fraud-Prevention", "description": "Code from the Healthcare Fraud Prevention Partnership (HFPP) through United States Centers for Medicare & Medicaid Services (CMS) challenge in collaboration with NASA's Center of Excellence for Collaboration (CoECI), Harvard, and TopCoder developed software that supports a data exchange network that enables healthcare insurance-paying entities in both the public and private sector to safely and securely share information for purposes of prevention and detection of fraud, waste and abuse across partners.", "organization": "COE", "homepageURL": "https://github.com/nasa/CoECI-CMS-Healthcare-Fraud-Prevention", "contributors": ["nasarader", "rsial2"], "laborHours": 47280, "tags": ["nlp:data system", "nlp:information dissemination", "nlp:network", "nlp:detection", "nlp:computer network", "HFPP", "nlp:computer systems program", "nlp:information system", "Medicare & Medicaid Services", "nlp:computer program", "nlp:prevention", "nlp:information transfer", "fraud prevention"], "name": "CoECI-CMS-Healthcare-Fraud-Prevention", "languages": ["Java"]}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2014-01-14"}, "contact": {"email": "cyberjag"}, "repositoryURL": "https://github.com/nasa/coeci-cms-mpsp", "description": "This is the Medicaid Provider Enrollment Screening Portal Project multi-state, multi-program provider screening application capable of risk scoring, credentialing validation, identify authentication, and sanction checks, that lowered the burden on providers and reduced administrative and infrastructure expenses for states and federal programs.", "organization": "COE", "homepageURL": "https://github.com/nasa/coeci-cms-mpsp", "contributors": ["cyberjag", "alamora", "ksirmons"], "laborHours": 335984, "tags": ["nlp:project planning", "nlp:selection", "medicaid", "nlp:assessment", "nlp:systems engineering", "nlp:proving", "screening", "nlp:project management", "enrollment", "nlp:solid state", "nlp:reliability", "nlp:computer program", "nlp:risk"], "name": "coeci-cms-mpsp", "languages": ["Java"]}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2013-12-31"}, "contact": {"email": "dlconner"}, "repositoryURL": "https://github.com/nasa/cash", "description": "Cassini Structured Homepages uses LDAP authorization to provide a security layer to webpage content.", "organization": "COE", "homepageURL": "https://github.com/nasa/cash", "contributors": ["dlconner"], "laborHours": 944, "tags": ["nlp:turbulent boundary layer", "security", "nlp:security", "nlp:boundary layer control", "nlp:scattering function", "nlp:barium oxide", "nlp:cassini mission", "Cassini", "nlp:reliability", "nlp:boundary layer", "nlp:computer information security", "nlp:optimization"], "name": "cash", "languages": ["Shell"]}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ASL", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2013-12-31"}, "contact": {"email": "dlconner"}, "repositoryURL": "https://github.com/nasa/autodoc", "description": "The Automatic Documentation software creates Microsoft Documents automatically using Text and Template files.", "organization": "ARC", "homepageURL": "https://github.com/nasa/autodoc", "contributors": ["dlconner"], "laborHours": 640, "tags": ["nlp:file maintenance (computers)", "nlp:computer program integrity", "automation", "application", "document", "templates", "nlp:software engineering", "nlp:software development tool", "nlp:computer systems program", "nlp:reliability", "nlp:documentation", "nlp:computer program", "nlp:optimization", "nlp:computer programming"], "name": "autodoc", "languages": ["Java"]}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2013-12-03"}, "contact": {"email": "rsial2"}, "repositoryURL": "https://github.com/NASA-Tournament-Lab/CoECI-USAID-Atrocity-Prevention-Model", "description": "Code from the United States Agency for International Development (USAID) and Humanity United (HU) challenge for Atrocity Prevention Modeling in collaboration with NASA's Center of Excellence for Collaboration (CoECI). This package contains the top 5 solutions submitted for the 'Tech Challenge for Atrocity Prevention' competition.", "organization": "COE", "homepageURL": "https://community.topcoder.com/longcontest/?module=ViewProblemStatement&rd=15761&pm=12634", "contributors": ["rsial2", "AetBoston", "nasarader"], "laborHours": 2944, "tags": ["Analytics", "nlp:competition", "data mining", "algorithm", "prediction", "nlp:international cooperation", "nlp:aircraft model", "nlp:nasa program", "nlp:atmospheric model", "nlp:mathematical model", "nlp:applications programs (computers)", "nlp:model", "nlp:computer program", "nlp:prevention"], "name": "COECI-USAID-Atrocity-Prevention-Model", "languages": ["Java"]}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2013-11-06"}, "contact": {"email": "nasarader"}, "repositoryURL": "https://github.com/NASA-Tournament-Lab/coeci-cms-mpsp", "description": "Code from the United States Centers for Medicare & Medicaid Services (CMS) challenge in collaboration with NASA's Center of Excellence for Collaboration (CoECI), Harvard, and TopCoder developed an iPhone app and reporting web application used to track and compile transfers of value (e.g. gift, meal, speaking fee) from industry manufacturers (e.g. pharmaceutical companies) to physicians.", "organization": "COE", "homepageURL": "https://github.com/nasa/CoECI-CMS-Open-Payment", "contributors": ["nasarader"], "laborHours": 335984, "tags": ["Analytics", "nlp:technology utilization", "nlp:marketing", "nlp:aerospace technology transfer", "reporting", "application", "nlp:technology transfer", "tracking", "nlp:nasa program", "nlp:manufacturing", "nlp:government/industry relation", "nlp:aircraft industry", "nlp:aerospace industry", "nlp:industry"], "name": "CoECI-CMS-Open-Payment", "languages": ["Java"]}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2013-09-03"}, "contact": {"email": "pmosbach"}, "repositoryURL": "https://github.com/nasa/VADER", "description": "This repository consists of the various scripts required to make our VADER system work. The variable emissivity radiator aerogel insulation blanket dual zone thermal control experiment suite for responsive space (STP-H3-VADER) investigation tests a variable emissivity radiator and a new form of multilayer insulation that uses Aerogel as the thermal isolator in order to protect the spacecraft from the harsh extremes of the space environment. The Aerogel material provides a more durable, lighter and cheaper alternative to traditional spacecraft thermal blankets. The use of this material could reduce the costs related to spaceflight by reducing the required spacecraft mass and increasing design efficiency.", "organization": "JSC", "homepageURL": "https://github.com/nasa/VADER/wiki", "contributors": ["pmosbach", "ecabuhay", "jdtunage"], "laborHours": 43184, "tags": ["nlp:temperature control", "operations", "nlp:control systems design", "VADER", "software", "nlp:space flight", "nlp:spacecraft construction material", "nlp:thermal insulation", "nlp:spacecraft design", "nlp:aerospace environment", "nlp:emissivity", "nlp:spaceborne experiment", "nlp:spacecraft environment"], "name": "VADER", "languages": ["Java"]}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2013-06-14"}, "contact": {"email": "seanherron"}, "repositoryURL": "https://github.com/nasa/data.nasa.gov", "description": "This is the source code for the WordPress theme that powers data.nasa.gov. Data.nasa.gov is NASA's flagship platform for sharing information about the vast data we collect and store over 100 years of U.S. aeronautics and space data. Developers, technologists, entrepreneurs, citizen scientists, and many others can contribute directly to the exploration of space and Earth by helping to create new ways of looking at this data.", "organization": "HQ", "homepageURL": "https://github.com/nasa/data.nasa.gov", "contributors": ["seanherron"], "laborHours": 5584, "tags": ["operations", "nlp:data system", "nlp:nasa space program", "nlp:spacecraft power supplie", "nlp:space exploration", "nlp:geomagnetism", "NASA", "datasets", "nlp:nasa program", "open source", "nlp:information system", "nlp:space program", "nlp:earth science", "nlp:data acquisition", "software"], "name": "data.nasa.gov", "languages": ["PHP"]}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2016-07-28"}, "contact": {"email": "seanherron"}, "repositoryURL": "https://github.com/nasa/code.nasa.gov", "description": "This is the source code for the WordPress theme that powers code.nasa.gov. Code.nasa.gov expands NASA's open source activities, surfaces existing activities, and guides internal and external groups in open development, release, and contribution. In doing so, NASA hopes to lower barriers to building open technology in partnership with the public.", "organization": "HQ", "homepageURL": "https://github.com/nasa/code.nasa.gov", "contributors": ["seanherron"], "laborHours": 5456, "tags": ["operations", "nlp:nasa space program", "nlp:surface propertie", "nlp:technology transfer", "code", "NASA", "nlp:nasa program", "nlp:lunar surface", "open source", "nlp:research and development", "nlp:systems engineering", "nlp:technology", "nlp:radioactive isotope", "software", "nlp:radiation source"], "name": "code.nasa.gov", "languages": ["Java"]}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2011-12-21"}, "contact": {"email": "zmoratto"}, "repositoryURL": "https://github.com/nasa/StereoPipeline", "description": "The NASA Ames Stereo Pipeline is a suite of automated geodesy & stereogrammetry tools designed for processing planetary imagery captured from orbiting and landed robotic explorers on other planets.", "organization": "ARC", "homepageURL": "https://github.com/nasa/StereoPipeline", "contributors": ["zmoratto", "broxtronix", "novas0x2a", "khusmann", "anefian", "trey0", "mstyer", "rbeyer", "mdhancher", "harguess", "saravkin"], "laborHours": 31504, "tags": ["NGT", "Neo-Geography Toolkit", "nlp:stability", "stereogrammetry", "nlp:planet", "NASA", "nlp:nasa program", "nlp:pipeline", "open source", "nlp:explorer satellite", "nlp:tool", "nlp:circuit", "nlp:software development tool", "nlp:reliability", "geodesy", "nlp:boundary layer", "imagery"], "name": "StereoPipeline", "languages": ["C++"]}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2011-06-30"}, "contact": {"email": "MatthewValverde"}, "repositoryURL": "https://github.com/nasa/NASA-Space-Weather-Media-Viewer", "description": "Space weather media viewer.", "organization": "ARC", "homepageURL": "https://play.google.com/store/apps/details?id=air.NasaSpaceViewer", "contributors": ["MatthewValverde"], "laborHours": 6480, "tags": ["nlp:nasa space program", "media", "nlp:manned space flight", "nlp:space flight", "weather", "space", "Google", "Android", "nlp:nasa program", "nlp:space commercialization", "nlp:aerospace environment", "nlp:systems engineering", "nlp:space communication", "nlp:aerospace science", "nlp:space program", "viewer", "imagery"], "name": "NASA-Space-Weather-Media-Viewer", "languages": ["Java"]}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2014-09-10"}, "contact": {"email": "pa-allen"}, "repositoryURL": "https://sourceforge.net/projects/tascnasa", "description": "Tool for Analysis of Surface Cracks (TASC) is a computer program created in MATLAB to enable easy computation of nonlinear J-integral solutions for surface cracked plates in tension by accessing and interpolating between the 600 nonlinear surface crack solutions documented in NASA/TP-2011-217480. The only required inputs are the surface crack dimensions (2c and a), plate cross-section dimensions (W and B), and linear plus power law material properties of elastic modulus, yield strength, and strain hardening coefficient. With the geometry and material parameters entered, TASC interpolates to the appropriate J(\u03a6) vs. crack mouth opening displacement (CMOD) and far-field tension stress, \u03c3, vs. CMOD solution, providing the full solution as CMOD ranges from zero out to the CMOD limit of the solution space for the given input parameters. TASC was developed by the Material and Processes Laboratory at NASA's Marshall Space Flight Center.", "organization": "MSFC", "homepageURL": "https://sourceforge.net/projects/tascnasa/", "contributors": ["pa-allen"], "laborHours": 16, "tags": ["technology", "analysis", "nlp:crack propagation", "nlp:crack geometry", "cracks", "tool", "nlp:geometry", "nlp:stress analysi", "nlp:plates (structural members)", "nlp:tensile stres", "surface", "nlp:yield point", "displacement", "nlp:crack", "nlp:computer program", "nlp:structural analysi"], "name": "Tool for Analysis of Surface Cracks (TASC)", "languages": ["MATLAB"]}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "BSD", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2011-11-20"}, "contact": {"email": "jplsr"}, "repositoryURL": "https://sourceforge.net/projects/datacasting/files/latest/download", "description": "Datacasting is a RSS publish-subscribe method for delivering Earth Science data. A Feed Reader provides feed filtering, data download, and the ability to mash-up data with information related to geophysical events.", "organization": "JPL", "homepageURL": "http://datacasting.jpl.nasa.gov/", "contributors": ["jplsr"], "laborHours": 30, "tags": ["filter", "nlp:seismology", "datacasting", "nlp:information management", "RSS", "nlp:earth surface", "data", "geophysics", "earth science", "nlp:data processing", "nlp:geography", "nlp:data reduction", "nlp:information system", "nlp:earth (planet)", "geophysical events", "nlp:earth science", "nlp:data acquisition"], "name": "Earth Science Datacasting", "languages": ["XML"]}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "BSD", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2014-07-08"}, "contact": {"email": "jplsr"}, "repositoryURL": "https://sourceforge.net/projects/ion-dtn/files/latest/download", "description": "The Interplanetary Overlay Network (ION) software distribution is an implementation of Delay-Tolerant Networking (DTN) architecture as described in Internet RFC 4838. It includes implementations of the DTN Bundle Protocol, the Licklider Transmission Protocol, and two CCSDS application protocols that have been adapted to run over the BP/LTP stack: the CCSDS File Delivery Protocol and Asynchronous Message Service.", "organization": "JPL", "homepageURL": "https://sourceforge.net/projects/ion-dtn/", "contributors": ["jplsr", "hkruse", "sburleig", "shawnostermann"], "laborHours": 372512, "tags": ["nlp:message", "nlp:file maintenance (computers)", "interplanetary overlay network", "nlp:protocol (computers)", "nlp:architecture (computers)", "earth science", "nlp:computer network", "nlp:computer program", "nlp:message processing", "nlp:computer", "ION", "nlp:data transmission", "nlp:internet", "distribution", "software", "network"], "name": "Interplanetary Overlay Network (ION) Software Distribution (DTN)", "languages": ["XML"]}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "BSD", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2011-12-05"}, "contact": {"email": "jplsr"}, "repositoryURL": "https://sourceforge.net/projects/dptoolkit/files/latest/download", "description": "The Data Productivity Toolkit is a collection of linux command-line tools designed to facilitate the analysis of text-based data sets. Modeled after the general linux pipeline tools such as awk, grep, and sed, the kit provides powerful tools for selecting/combining data, performing statistics, and visualizing results. The tools are all written in python and in many instances provide a command-line API to basic python and numpy/scipy/matplotlib routines.", "organization": "JPL", "homepageURL": "https://sourceforge.net/projects/dptoolkit/", "contributors": ["jplsr"], "laborHours": 80, "tags": ["nlp:data base", "nlp:on-line system", "nlp:data system", "productivity", "data collection", "data", "nlp:data processing", "nlp:data reduction", "nlp:pipeline", "toolkit", "nlp:data management", "nlp:data structure", "nlp:statistical analysi", "nlp:data acquisition"], "name": "Data Productivity Toolkit", "languages": ["Python"]}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2014-09-08"}, "contact": {"email": "segfaulthunter"}, "repositoryURL": "https://github.com/sunpy/sunpy", "description": "The SunPy project is an effort to create an open-source software library for solar physics using the Python programming language. More information at http://www.sunpy.org.", "organization": "GSFC", "homepageURL": "http://www.sunpy.org", "contributors": ["segfaulthunter", "Cadair", "khughitt", "ehsteve", "wafels", "derdon", "ayshih", "DanRyanIrish", "aringlis", "rhewett", "drewleonard42", "kaichogami", "dpshelio", "VaticanCameos", "nabobalis", "mattearnshaw", "gunner272", "amras1", "CyclingNinja", "ndchorley", "quintusdias", "mjm159", "rubendv", "rajul-iitkgp", "Hypnus1803", "ankit-maverick", "ToyDragon", "larrymanley", "JordanBallew", "transientlunatic", "mateoi", "examon", "astrofrog", "bmampaey", "jaylenw", "airyens", "freekv"], "laborHours": 19840, "tags": ["nlp:programming language", "nlp:high level language", "repository", "nlp:software engineering", "nlp:library", "nlp:computer program", "nlp:software development tool", "nlp:computer systems program", "nlp:information system", "libary", "solar", "physics", "nlp:machine oriented language", "nlp:computer programming"], "name": "SunPy", "languages": ["Python"]}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "GPLv3", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2013-05-01"}, "contact": {"email": "pkolano"}, "repositoryURL": "https://sourceforge.net/projects/mutil/files/latest/download", "description": "Mutil is a set of standard utilities that employ multiple types of parallelism and other optimizations to achieve maximum performance on modern file systems. Multi-threading is used to ensure that nodes are kept as busy as possible. Double buffering allows individual operations within a single task to be overlapped using asynchronous I/O. Multi-node cooperation allows different nodes to take part in the same task. Split file processing allows multiple threads to operate concurrently on the same file. Finally, additional optimizations such as buffer management help eliminate other bottlenecks that can reduce performance. Mutil currently includes drop-in replacements for cp and md5sum from GNU coreutils, which have achieved 10/30x rates on one/many nodes.", "organization": "ARC", "homepageURL": "http://mutil.sourceforge.net", "contributors": ["pkolano"], "laborHours": 16, "tags": ["nlp:buffer storage", "multi-thread", "nlp:information management", "optimization", "utilities", "nlp:operating systems (computers)", "parallelism", "nlp:systems analysi", "nlp:parallel processing (computers)", "nlp:data management", "nlp:management system", "nlp:distributed processing", "nlp:computer systems design", "nodes", "processing", "file", "nlp:optimization"], "name": "Multi-Threaded Multi-Node Utilities (Mutil)", "languages": ["Perl"]}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2012-09-06"}, "contact": {"email": "pkolano"}, "repositoryURL": "https://sourceforge.net/projects/mesh/files/latest/download", "description": "Mesh is a secure, lightweight grid middleware that is based on the addition of a single sign-on capability to the built-in public key authentication mechanism of SSH using system call interposition. Resources may be added to a Mesh-based grid in a matter of minutes using just five small files and two environment variable settings. Mesh adheres to fundamental security principles and was designed to be compatible with strong security mechanisms including two-factor authentication, SSH bastions, and restrictive firewalls. Mesh uses a remote command model, which is based on stock SSH clients and the syntax and commands already understood by users, thus requires no additional software or knowledge to utilize effectively. Several existing services have been integrated with Mesh to provide resource discovery and query, high performance file transfer, and job management.", "organization": "ARC", "homepageURL": "http://mesh.sourceforge.net", "contributors": ["pkolano"], "laborHours": 86005, "tags": ["nlp:human-computer interface", "nlp:information management", "nlp:security", "ssh", "host", "nlp:computer network", "nlp:computer systems program", "nlp:computational grid", "nlp:applications programs (computers)", "nlp:computer program", "middleware", "nlp:computer information security", "nlp:computer programming"], "name": "Middleware Using Existing SSH Hosts (MESH)", "languages": ["Perl", "C"]}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2013-05-13"}, "contact": {"email": "pkolano"}, "repositoryURL": "https://sourceforge.net/projects/ballast/files/latest/download", "description": "Ballast is a tool for balancing user load across SSH servers based on configurable criteria such as CPU load and system availability. Ballast is invoked as part of the SSH login process, hence has access to the user name, which is not available in traditional load balancers. This gives ballast the unique ability to perform user-specific load balancing, which has several benefits including separating users who have historically generated high loads and providing a common login interface to users who may be separated based on other criteria such as system accessibility. Ballast includes a simple client, a lightweight data server, and a data collection agent.", "organization": "ARC", "homepageURL": "http://ballast.sourceforge.net", "contributors": ["pkolano"], "laborHours": 688, "tags": ["clustering", "nlp:data base", "nlp:data system", "nlp:human-computer interface", "ssh", "ballast", "nlp:interface", "host", "nlp:data management", "nlp:information system", "nlp:data base management system", "nlp:information retrieval", "nlp:data acquisition", "nlp:loads (forces)"], "name": "Balancing Load Across Systems (Ballast)", "languages": ["Perl", "C"]}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2014-08-12"}, "contact": {"email": "pkolano"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/LHD/LHD.zip", "description": "Software implementation of JPL published paper for performing lossless hyper-spectral and milti-spectral data compression. The implementation was executed to confirm the results obtained by JPL independently. Implemented JPL published paper and its revised version presented to the CCSDS hyper/multi-spectral data compression working group. The implementation follows every step listed in the relevant papers and usess C-code for simplicity. The software takes 3-dimensional test data provided by the CCSDS working group and created predictor error results that can be further encoded with other known techniques.", "organization": "GSFC", "homepageURL": "https://opensource.gsfc.nasa.gov/projects/LHD", "contributors": ["pkolano"], "laborHours": 192, "tags": ["CCSDS", "nlp:coding", "milti-spectral", "hyper-spectral", "data", "nlp:software engineering", "nlp:data reduction", "nlp:error correcting code", "nlp:error", "nlp:error detection code", "compression", "nlp:data compression", "nlp:error analysi", "lossless", "nlp:computer program", "nlp:c (programming language)"], "name": "Lossless Hyper-multi-spectral data compression software", "languages": ["C"]}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2013-03-08"}, "contact": {"email": "btrivedi"}, "repositoryURL": "https://sourceforge.net/projects/s4pm/files/latest/download", "description": "The Simple, Scalable, Script-based Science Processor for Measurements (S4PM) is a system for highly automated processing of science data, scalable up to large processing systems and scalable down to small, special-purpose processing strings.", "organization": "GSFC", "homepageURL": "https://sourceforge.net/projects/s4pm", "contributors": ["btrivedi", "clynnes", "sberrick"], "laborHours": 14608, "tags": ["nlp:data system", "nlp:optical data processing", "script-based", "automation", "simple", "data", "nlp:data processing equipment", "nlp:data processing", "nlp:data reduction", "nlp:architecture (computers)", "nlp:signal processing", "scalable", "process", "measurements", "nlp:central processing unit", "science", "nlp:image processing", "nlp:data acquisition"], "name": "Simple, Scalable, Script-based Science Processor for Measurements (S4PM)", "languages": ["Perl"]}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2014-09-16"}, "contact": {"email": "opensource@gsfc.nasa.gov"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/G-SDSU/G-SDSU-core.tar.gz", "description": "G-SDSU core modules enables users to insert their own satellite simulator to convert model-simulated atmosphere states to various types of satellite observable signals (radiance or backscattering signals), and to compare such data with comparable measurements collected by corresponding satellite level-1 measurement.", "organization": "GSFC", "homepageURL": "https://opensource.gsfc.nasa.gov/projects/G-SDSU/index.php", "contributors": ["opensource@gsfc.nasa.gov"], "laborHours": 3344, "tags": ["mission", "nlp:simulator", "nlp:data simulation", "algorithm", "atmoshpere", "modeling", "observation", "nlp:computerized simulation", "nlp:simulation", "nlp:radiance", "nlp:satellite instrument", "nlp:atmospheric model", "GPM", "nlp:satellite observation", "nlp:mathematical model", "measurements", "nlp:satellite transmission", "satellite"], "name": "Goddard Satellite Data Simulation Unit (G-SDSU)", "languages": ["C"]}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}, {"name": "GPLv3", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2013-04-24"}, "contact": {"email": "boller8"}, "repositoryURL": "https://sourceforge.net/projects/visbard/files/latest/download", "description": "ViSBARD (Visual System for Browsing, Analysis, and Retrieval of Data) is an interactive visualization and analysis tool for space physics data. It provides an integrated 3-D/2-D environment to analyze measurements across many spacecraft and MHD models.", "organization": "GSFC", "homepageURL": "https://spdf.gsfc.nasa.gov/research/visualization/visbard/index.html", "contributors": ["boller8"], "laborHours": 325264, "tags": ["retrieval", "space", "nlp:data retrieval", "nlp:data base", "data", "nlp:data reduction", "MHD", "models", "visual", "tool", "browse", "nlp:data processing", "nlp:systems analysi", "nlp:aerospace environment", "nlp:mathematical model", "nlp:spacecraft environment", "analysis", "nlp:data system", "nlp:scientific visualization", "system", "physics"], "name": "Visual System for Browsing, Analysis and Retrieval of Data (ViSBARD)", "languages": ["C", "Java"]}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2013-04-24"}, "contact": {"email": "kenneth.r.morris@nasa.gov"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/GSRadar/GS-Radar.tar", "description": "This software enables easy comparison of ground- and space-based radar observations. The software was initially designed to compare ground radar reflectivity from operational, ground-based, S- and C-band meteorological radars with comparable measurements from the Tropical Rainfall Measuring Mission satellite's Precipitation Radar instrument. The software is also applicable to other ground-based and space-based radars. The software allows both ground and space based radar data to be compared for validation purposes.", "organization": "GSFC", "homepageURL": "https://opensource.gsfc.nasa.gov/projects/GSRadar/index.php", "contributors": ["kenneth.r.morris@nasa.gov", "mathew.r.schwaller@nasa.gov"], "laborHours": 6608, "tags": ["ground", "nlp:precipitation particle measurement", "space", "volume", "comparison", "nlp:satellite instrument", "nlp:radar tracking", "matching", "nlp:meteorological radar", "nlp:satellite observation", "nlp:radar data", "nlp:precipitation (meteorology)", "nlp:c band", "validation", "radar", "nlp:rain", "software", "nlp:trmm satellite"], "name": "Ground and space radar volume matching and comparison software", "languages": ["C"]}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2014-09-16"}, "contact": {"email": "Steven Pawson"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/GEOS-5/GEOSagcm-Eros_7_24.tar.gz", "description": "The Global Modeling and Assimilation Office (GMAO) has delivered the next generation general circulation model, GEOS-5. This system represents a new paradigm for systems development, in that GEOS-5 has been developed with the Earth System Modeling Framework (ESMF) for its internal architecture using the MAPL software toolkit developed for GEOS-5.", "organization": "GSFC", "homepageURL": "https://opensource.gsfc.nasa.gov/projects/GEOS-5/index.php", "contributors": ["Steven Pawson"], "laborHours": 239968, "tags": ["nlp:architecture (computers)", "nlp:dynamic model", "Coupled", "circulation", "Model", "software", "Land", "Atmosphere", "Stand-alone", "earth science", "nlp:software engineering", "nlp:computer programming", "Weather", "CGM", "Prediction", "Seasonal", "nlp:assimilation", "Forecasting", "nlp:atmospheric general circulation model", "Numerical", "Biology", "nlp:atmospheric model", "nlp:software development tool", "nlp:mathematical model", "GEOS-5", "analysis", "Climate", "nlp:computer program", "Experimental", "Ocean"], "name": "GEOS-5 GCM Modeling Software", "languages": ["C"]}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2016-10-26"}, "contact": {"email": "stevenhughes"}, "repositoryURL": "https://sourceforge.net/projects/gmat/files/GMAT/GMAT-R2016a/files/latest/download", "description": "The General Mission Analysis Tool (GMAT), developed at the Goddard Space Flight Center, is the world\u2019s only enterprise, multi-mission, open source software system for space mission design, optimization, and navigation. The system supports missions in flight regimes ranging from low Earth orbit to lunar, libration point, and deep space missions. GMAT is developed by a team of NASA, private industry, public, and private contributors and is used for real-world mission support, engineering studies, as a tool for education, and public engagement.", "organization": "GSFC", "homepageURL": "http://gmat.gsfc.nasa.gov/", "contributors": ["stevenhughes"], "laborHours": 33152, "tags": ["visualization", "nlp:navigation", "nlp:space mission", "mission", "nlp:support system", "mathematics", "tool", "nlp:systems analysi", "nlp:software engineering", "nlp:systems engineering", "planning", "nlp:mission planning", "nlp:applications programs (computers)", "nlp:space navigation", "Simulations", "physics", "nlp:design analysi"], "name": "General Mission Analysis Tool (GMAT R2016a)", "languages": ["C++"]}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-11-02"}, "contact": {"email": "djcinsb"}, "repositoryURL": "https://sourceforge.net/projects/gmat/files/GMAT/GMAT-R2015a/files/latest/download", "description": "The General Mission Analysis Tool (GMAT), developed at the Goddard Space Flight Center, is the world\u2019s only enterprise, multi-mission, open source software system for space mission design, optimization, and navigation. The system supports missions in flight regimes ranging from low Earth orbit to lunar, libration point, and deep space missions. GMAT is developed by a team of NASA, private industry, public, and private contributors and is used for real-world mission support, engineering studies, as a tool for education, and public engagement.", "organization": "GSFC", "homepageURL": "http://gmat.gsfc.nasa.gov/", "contributors": ["djcinsb", "jjkparker", "qure0013", "space_egd", "stevenhughes", "wendys-dev", "dcooley", "dktkgks", "hykim9501", "jbez", "lindajun", "mhkim0522", "shawnhoffman", "tgrubb", "tnguye2"], "laborHours": 438592, "tags": ["visualization", "nlp:navigation", "nlp:space mission", "mission", "nlp:support system", "mathematics", "tool", "nlp:systems analysi", "nlp:software engineering", "nlp:systems engineering", "planning", "nlp:mission planning", "nlp:applications programs (computers)", "nlp:space navigation", "Simulations", "physics", "nlp:design analysi"], "name": "General Mission Analysis Tool (GMAT R2015a)", "languages": ["C++"]}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2014-05-13"}, "contact": {"email": "bwiegand"}, "repositoryURL": "https://sourceforge.net/projects/gmsec/files/latest/download", "description": "The Goddard Mission Services Evolution Center (GMSEC) program was established in 2001 to coordinate ground and flight data systems development and services at GSFC with the ultimate goal to efficiently support current and future GSFC mission services. The GMSEC architecture is a ground systems architecture that spans the full mission lifecycle from development through operations. The architecture provides a secure, scalable and extensible communications and data system that supports all aspects of a mission from onboard processing through the Mission Operations Center (MOC) to public access on the Internet. The architecture includes an Application Programming Interface (API) and message bus to provide a publish and subscribe communication mechanism. The GMSEC architecture and source code are based on an enterprise architecture approach with a message-oriented cross-platform enterprise middleware (information software bus).", "organization": "GSFC", "homepageURL": "https://sourceforge.net/projects/gmsec/", "contributors": ["bwiegand", "mhandy"], "laborHours": 475120, "tags": ["nlp:architecture (computers)", "nlp:computer systems program", "flight", "mission", "data", "nlp:software engineering", "support", "systems", "MOC", "nlp:applications programs (computers)", "nlp:onboard data processing", "nlp:data transmission", "middleware", "nlp:ground operational support system", "ground", "GMSEC", "API", "nlp:information system", "nlp:computer program", "nlp:computer programming"], "name": "Goddard Mission Services Evolution Center Architecture (GMSEC) API", "languages": ["C++", "C", "Java", "Perl"]}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-05-06"}, "contact": {"email": "Dennis Koga"}, "repositoryURL": "https://ti.arc.nasa.gov/m/opensource/downloads/bigView.tar.gz", "description": "BigView allows for interactive panning and zooming of images of arbitrary size on desktop PCs running linux. Additionally, it can work in a multi-screen environment where multiple PCs cooperate to view a single large image. Using this software, one can explore -- on relatively modest machines -- images such as the Mars Orbiter Camera mosaic [92160x33280 pixels].", "organization": "ARC", "homepageURL": "https://ti.arc.nasa.gov/opensource/projects/bigview/", "contributors": ["Dennis Koga"], "laborHours": 24928, "tags": ["nlp:programming environment", "nlp:camera", "nlp:image analysi", "nlp:personal computer", "nlp:software engineering", "nlp:computer program", "bigview", "nlp:mars (planet)", "PC", "composite", "nlp:unix (operating system)", "image processing", "nlp:ccd camera", "linux", "nlp:image processing", "image"], "name": "BigView"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-05-06"}, "contact": {"email": "Dennis Koga"}, "repositoryURL": "https://ti.arc.nasa.gov/m/opensource/downloads/BlockGP.tar.gz", "description": "Block GP is a Gaussian Process regression framework for multimodal data, that can be an order of magnitude more scalable than existing state-of-the-art nonlinear regression algorithms. The framework builds local Gaussian Processes on semantically meaningful partitions of the data and provides higher prediction accuracy than a single global model with very high confidence.", "organization": "ARC", "homepageURL": "https://ti.arc.nasa.gov/opensource/projects/block-gp/", "contributors": ["Dennis Koga"], "laborHours": 960, "tags": ["guassian", "nlp:algorithm", "algorithm", "nlp:stochastic processe", "data", "nlp:prediction", "block-GP", "nlp:prediction analysis technique", "nlp:accuracy", "scalable", "nlp:regression analysi", "nlp:mathematical model", "regression", "multimodal", "nlp:linear prediction", "nlp:estimating", "nlp:random processe"], "name": "Block-GP: Scalable Gaussian Process Regression"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2004-01-26"}, "contact": {"email": "Dennis Koga"}, "repositoryURL": "http://www.nas.nasa.gov/Resources/Software/Open-Source/Downloads/Code/code-1_0b1.tar.gz", "description": "CODE is a software framework for control and observation in distributed environments. The basic functionality of the framework allows a user to observe a distributed set of resources, services, and applications. A user can also use the framework to manage distributed resources, services, and applications.", "organization": "ARC", "homepageURL": "http://www.nas.nasa.gov/Resources/Software/Open-Source/code.html", "contributors": ["Dennis Koga"], "laborHours": 12640, "tags": ["nlp:programming environment", "nlp:human-computer interface", "application", "nlp:operating systems (computers)", "observation", "nlp:software engineering", "nlp:software development tool", "nlp:computer systems program", "distributed environments", "nlp:applications programs (computers)", "nlp:computer", "nlp:computer program", "control", "nlp:computer programming"], "name": "CODE software framework"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-05-04"}, "contact": {"email": "Dennis Koga"}, "repositoryURL": "https://ti.arc.nasa.gov/m/opensource/downloads/MPE_E_Std_API_Distribution_2010_08_25.zip", "description": "The purpose of this Opensource forum is to promote the development of a JAVA based Application Programming Interface for the field of Mass Properties Engineering.", "organization": "ARC", "homepageURL": "https://ti.arc.nasa.gov/opensource/projects/e-standards-mass-properties-engineering/", "contributors": ["Dennis Koga"], "laborHours": 1216, "tags": ["nlp:programming environment", "java", "mass", "nlp:human-computer interface", "properties", "nlp:interface", "nlp:mechanical engineering", "engineering", "nlp:systems engineering", "data object manipulation", "nlp:engineering", "nlp:standard", "nlp:java (programming language)", "nlp:measuring instrument", "nlp:computer programming"], "name": "E-Standards for Mass Properties Engineering"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-05-06"}, "contact": {"email": "Dennis Koga"}, "repositoryURL": "https://ti.arc.nasa.gov/m/opensource/downloads/gmp-1.0.0.tar.gz", "description": "The Geometry Manipulation Protocol (GMP) is a library which serializes datatypes between XML and ANSI C data structures to support CFD applications. This library currently provides a description of geometric configurations, general moving-body scenarios (prescribed and/or 6-DOF), and control surface settings.", "organization": "ARC", "homepageURL": "https://ti.arc.nasa.gov/opensource/projects/gmp/", "contributors": ["Dennis Koga"], "laborHours": 20432, "tags": ["GMP", "geometry", "nlp:surface propertie", "nlp:protocol (computers)", "nlp:three dimensional bodie", "nlp:computational fluid dynamic", "earth science", "nlp:rigid structure", "nlp:library", "library", "XML", "nlp:aerodynamic configuration", "CFD", "nlp:spacecraft configuration", "ANSI C"], "name": "Geometry Manipulation Protocol (GMP)"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-05-06"}, "contact": {"email": "Dennis Koga"}, "repositoryURL": "https://ti.arc.nasa.gov/m/opensource/downloads/growler-0.3.5.tar.gz", "description": "Growler is a C++-based distributed object and event architecture. It is written in C++, and supports serialization of C++ objects as part of its Remote Method Invocation, Event Channels, and in its Interface Definition Language. Its primary application has been in support of interactive, distributed visualization, computational steering, and concurrent visualization, but it is a general purpose system for distributed programming.", "organization": "ARC", "homepageURL": "http://growler.sourceforge.net/", "contributors": ["Dennis Koga"], "laborHours": 102032, "tags": ["GMP", "data visualization", "nlp:programming language", "nlp:high level language", "remote method invocation", "nlp:scientific visualization", "nlp:architecture (computers)", "nlp:c++ (programming language)", "event channels", "nlp:parallel processing (computers)", "nlp:parallel programming", "nlp:distributed processing", "C++", "object", "distributed", "nlp:object-oriented programming", "IDL", "nlp:computer programming"], "name": "Growler"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-05-06"}, "contact": {"email": "Dennis Koga"}, "repositoryURL": "https://ti.arc.nasa.gov/m/opensource/downloads/IND2.1.2.1-NASA-OSA.tar.gz", "description": "IND is applicable to most data sets consisting of independent instances, each described by a fixed length vector of attribute values. An attribute value may be a number, one of a set of attribute specific symbols, or omitted. One of the attributes is delegated the 'target' and IND grows trees to predict the target. Prediction can then be done on new data or the decision tree printed out for inspection.", "organization": "ARC", "homepageURL": "https://ti.arc.nasa.gov/opensource/projects/ind/", "contributors": ["Dennis Koga"], "laborHours": 14144, "tags": ["nlp:symbol", "nlp:decision theory", "manipulation", "prediction", "nlp:binary data", "nlp:prediction", "IND", "nlp:trees (mathematics)", "nlp:inspection", "nlp:data structure", "nlp:vectors (mathematics)", "nlp:prediction analysis technique", "decision tree", "data processing", "nlp:decision making"], "name": "IND: Creation and Manipulation of Decision Trees from Data"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-05-06"}, "contact": {"email": "Dennis Koga"}, "repositoryURL": "https://ti.arc.nasa.gov/m/opensource/downloads/ipg-es-1.0.tar.gz", "description": "The Execution Service allows users to submit, monitor, and cancel complex jobs. Each job consists of a set of tasks that perform actions such as executing applications and managing data. Each task is executed based on a starting condition that is an expression on the states of other tasks. This formulation allows tasks to be executed in parallel and also allows a user to specify tasks to execute when other tasks succeed, fail or are cancelled.", "organization": "ARC", "homepageURL": "https://ti.arc.nasa.gov/opensource/projects/ipg/", "contributors": ["Dennis Koga"], "laborHours": 25856, "tags": ["nlp:task", "nlp:state estimation", "parallel", "nlp:steady state", "nlp:user requirement", "data management", "IPG", "data processing", "execution service"], "name": "IPG Execution Service"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-05-06"}, "contact": {"email": "Dennis Koga"}, "repositoryURL": "https://ti.arc.nasa.gov/m/opensource/downloads/JavaGenes.0.7.68.tar.gz", "description": "JavaGenes is a fairly general purpose evolutionary software system written in Java. It implements several versions of the genetic algorithm, simulated annealing, stochastic hill climbing and other search techniques. JavaGenes has been used to evolve molecules, atomic force field parameters, digital circuits, Earth Observing Satellite schedules, and antennas.", "organization": "ARC", "homepageURL": "https://ti.arc.nasa.gov/opensource/projects/javagenes/", "contributors": ["Dennis Koga"], "laborHours": 205936, "tags": ["nlp:earth observing system (eos)", "java", "nlp:algorithm", "algorithm", "nlp:genetic algorithm", "nlp:simulated annealing", "nlp:antenna design", "javagenes", "search", "EOS", "nlp:superconducting device", "genetic", "nlp:applications programs (computers)", "nlp:computer program", "nlp:satellite communication"], "name": "JavaGenes"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-05-06"}, "contact": {"email": "Dennis Koga"}, "repositoryURL": "https://ti.arc.nasa.gov/opensource/projects/libibvpp", "description": "Libibvpp is a C++ wrapper around libibverbs, which is part of the OpenFabrics software suite (www.openfabrics.org).", "organization": "ARC", "homepageURL": "https://ti.arc.nasa.gov/opensource/projects/libibvpp/", "contributors": ["Dennis Koga"], "laborHours": 24304, "tags": ["nlp:stability", "openfabrics", "libibverbs", "nlp:c++ (programming language)", "nlp:software development tool", "nlp:computer systems program", "wrapper", "C++", "nlp:circuit", "nlp:reliability", "libibvpp", "nlp:computer program", "nlp:radiation", "nlp:boundary layer", "nlp:computer programming"], "name": "Libibvpp"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-05-06"}, "contact": {"email": "Dennis Koga"}, "repositoryURL": "https://ti.arc.nasa.gov/m/opensource/downloads/L2-OSA-unix_2.7.8.2.tar.gz", "description": "Livingstone2 is a reusable artificial intelligence (AI) software system designed to assist spacecraft, life support systems, chemical plants or other complex systems in operating robustly with minimal human supervision, even in the face of hardware failures or unexpected events. Livingstone2 diagnoses the current state of the spacecraft or other system and recommends commands or repair actions that will allow the system to continue operations.", "organization": "ARC", "homepageURL": "https://ti.arc.nasa.gov/opensource/projects/livingstone2/", "contributors": ["Dennis Koga"], "laborHours": 436176, "tags": ["nlp:life support system", "nlp:system failure", "nlp:failure", "nlp:hardware", "nlp:complex system", "AI", "nlp:failure analysi", "diagnostics", "nlp:spacecraft environment", "life support", "spacecraft", "livingstone2", "autonomous", "nlp:computer program", "artificial intelligence", "operation", "nlp:artificial intelligence", "nlp:maintenance"], "name": "Livingstone2"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-05-06"}, "contact": {"email": "Dennis Koga"}, "repositoryURL": "https://ti.arc.nasa.gov/m/opensource/downloads/Mariana_.tgz", "description": "Mariana is an algorithm that efficiently optimizes the hyperparameters for Support Vector Machines for regression and classification.", "organization": "ARC", "homepageURL": "https://ti.arc.nasa.gov/opensource/projects/mariana/", "contributors": ["Dennis Koga"], "laborHours": 3456, "tags": ["nlp:support system", "nlp:computation", "mariana", "nlp:vector analysi", "classification", "algorithm", "hyperparameters", "nlp:algorithm", "nlp:machine learning", "nlp:vectors (mathematics)", "nlp:classification", "nlp:regression analysi", "nlp:estimating", "regression", "nlp:vector quantization"], "name": "Mariana"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-05-06"}, "contact": {"email": "Dennis Koga"}, "repositoryURL": "https://ti.arc.nasa.gov/m/opensource/downloads/MST_v1-0b.tgz", "description": "The MST is a simulation framework, supporting the development of autonomy technology for planetary exploration vehicles. The MST provides a software test bed which includes simulated robotic platforms, sensors, and environments.", "organization": "ARC", "homepageURL": "https://ti.arc.nasa.gov/opensource/projects/mission-simulation-toolkit/", "contributors": ["Dennis Koga"], "laborHours": 63872, "tags": ["test bed", "sensor", "nlp:robotic", "nlp:simulation", "nlp:test vehicle", "nlp:environment simulation", "nlp:software engineering", "nlp:underwater vehicle", "planetary exploration", "nlp:software development tool", "nlp:sensor", "MST", "autonomous", "nlp:autonomy", "nlp:test stand", "robotics", "mission simulation toolkit"], "name": "Mission Simulation ToolKit (MST)"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-05-06"}, "contact": {"email": "Dennis Koga"}, "repositoryURL": "https://ti.arc.nasa.gov/m/opensource/downloads/MFSim1_0.zip", "description": "Multi-Fidelity Simulator, MFSim is a pluggable framework for creating an air traffic flow simulator at multiple levels of fidelity. The framework is designed to allow low-fidelity simulations of the entire US Airspace to be completed very quickly (on the order of seconds). The framework allows higher-fidelity plugins to be added to allow higher-fidelity simulations to occur in certain regions of the airspace concurrently with the low-fidelity simulation of the full airspace.", "organization": "ARC", "homepageURL": "https://ti.arc.nasa.gov/opensource/projects/mfsim/", "contributors": ["Dennis Koga"], "laborHours": 993056, "tags": ["nlp:airspace", "nlp:air flow", "air traffic flow", "MFS", "nlp:simulator", "simulator", "nlp:simulation", "nlp:air traffic control", "nlp:flight simulation", "nlp:computerized simulation", "nlp:traffic", "nlp:control simulation", "MFSim", "aviation", "nlp:systems simulation", "multi-fidelity", "airspace"], "name": "Multi-Fidelity Simulator (MFSim)"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-05-06"}, "contact": {"email": "Dennis Koga"}, "repositoryURL": "https://ti.arc.nasa.gov/m/opensource/downloads/nodemon-0.3.3.tar.gz", "description": "NodeMon is a resource utilization monitor tailored to the Altix architecture, but is applicable to any Linux system or cluster. It allows distributed resource monitoring via the Growler software infrastructure. It is modular, with existing modules for monitoring of cpu, memory, network, and numalink activity.", "organization": "ARC", "homepageURL": "https://ti.arc.nasa.gov/opensource/projects/nodemon/", "contributors": ["Dennis Koga"], "laborHours": 23456, "tags": ["monitor", "nodemon", "nlp:architecture (computers)", "nlp:module", "nlp:computer storage device", "nlp:computer network", "resource", "nlp:software engineering", "nlp:monitor", "nlp:computer systems program", "utilization", "growler", "nlp:unix (operating system)", "nlp:central processing unit", "modular", "nlp:computer program"], "name": "NodeMon"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-05-06"}, "contact": {"email": "Dennis Koga"}, "repositoryURL": "https://ti.arc.nasa.gov/m/opensource/downloads/ipg-pour-1.0.tar.gz", "description": "Pour is a general-purpose information service framework designed to accommodate a wide variety of information types with support for high volume, low frequency periodic updates, user-specified updates, and automatic updates collected on-demand when needed. Information is stored exclusively in XML and retrieved using standard XPath queries over a single unified namespace independent of the information's source.", "organization": "ARC", "homepageURL": "https://ti.arc.nasa.gov/opensource/projects/pour/", "contributors": ["Dennis Koga"], "laborHours": 7920, "tags": ["pour", "nlp:support system", "nlp:information dissemination", "nlp:frequency", "nlp:information management", "xpath", "nlp:user requirement", "information service", "xml", "nlp:information system", "nlp:standard", "nlp:information retrieval", "nlp:information theory", "nlp:document markup language"], "name": "Pour"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-05-06"}, "contact": {"email": "Dennis Koga"}, "repositoryURL": "https://ti.arc.nasa.gov/m/opensource/downloads/robus2.zip", "description": "The ROBUS-2 Protocol Processor (RPP) is a custom-designed hardware component implementing the functionality of the ROBUS-2 fault-tolerant communication system. The Reliable Optical Bus (ROBUS) is the core communication system of the Scalable Processor-Independent Design for Enhanced Reliability (SPIDER), a general-purpose fault-tolerant integrated modular architecture currently under development at NASA Langley Research Center. ROBUS is a time-division multiple access (TDMA) broadcast communication system with medium access control by means of time-indexed communication schedule. ROBUS-2 is a developmental version of the ROBUS providing guaranteed fault-tolerant services to the attached processing elements (PEs), in the presence of a bounded number of faults.", "organization": "ARC", "homepageURL": "https://ti.arc.nasa.gov/opensource/projects/robus-2/", "contributors": ["Dennis Koga"], "laborHours": 7408, "tags": ["rpp", "nlp:fault tolerance", "nlp:real time operation", "fault-tolerant", "spider", "nlp:protocol (computers)", "nlp:computer component", "nlp:architecture (computers)", "nlp:data processing equipment", "robus", "fault tolerant", "nlp:computer systems design", "nlp:systems engineering", "nlp:channels (data transmission)", "robus-2", "nlp:computer", "processing elements", "TDMA"], "name": "ROBUS-2"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-05-06"}, "contact": {"email": "Dennis Koga"}, "repositoryURL": "https://ti.arc.nasa.gov/m/opensource/downloads/SequenceMiner.tar.gz", "description": "sequenceMiner was developed to address the problem of detecting and describing anomalies in large sets of high-dimensional symbol sequences. sequenceMiner works by performing unsupervised clustering (grouping) of sequences using the normalized longest common subsequence (LCS) as a similarity measure, followed by a detailed analysis of outliers to detect anomalies. sequenceMiner utilizes a new hybrid algorithm for computing the LCS that has been shown to outperform existing algorithms by a factor of five. sequenceMiner also includes new algorithms for outlier analysis that provide comprehensible indicators as to why a particular sequence was deemed to be an outlier. This provides analysts with a coherent description of the anomalies identified in the sequence, and why they differ from more 'normal' sequences.", "organization": "ARC", "homepageURL": "https://c3.ndc.nasa.gov/dashlink/algorithm/sequenceminer-algorithm/", "contributors": ["Dennis Koga"], "laborHours": 1120, "tags": ["nlp:symbol", "nlp:computation", "detection", "longest common sequence", "cluster", "nlp:algorithm", "sequenceMiner", "algorithm", "outlier", "nlp:anomaly", "LCS", "nlp:problem solving", "nlp:set theory", "nlp:systems analysi", "nlp:combinatorial analysi", "nlp:sequencing", "nlp:cluster analysi"], "name": "sequenceMiner"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-05-06"}, "contact": {"email": "Dennis Koga"}, "repositoryURL": "https://ti.arc.nasa.gov/m/opensource/downloads/shift-3.1.tgz", "description": "Shift is a lightweight framework for high performance local and remote file transfers that provides resiliency across a wide variety of failure scenarios through various techniques. These include end-to-end integrity via cryptographic hashes, throttling of transfers to prevent resource exhaustion, balancing transfers across resources based on load and availability, and parallelization of transfers across multiple source and destination hosts for increased redundancy and performance.", "organization": "ARC", "homepageURL": "https://ti.arc.nasa.gov/opensource/projects/shift/", "contributors": ["Dennis Koga"], "laborHours": 6112, "tags": ["nlp:performance prediction", "nlp:failure", "nlp:file maintenance (computers)", "nlp:availability", "parallel", "data transfer", "shift", "file transfer", "nlp:failure analysi", "nlp:structural failure", "nlp:redundancy", "nlp:reliability", "Self-Healing Independent File Transfer", "nlp:healing", "nlp:loads (forces)"], "name": "Self-Healing Independent File Transfer (Shift)"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-05-06"}, "contact": {"email": "Dennis Koga"}, "repositoryURL": "https://ti.arc.nasa.gov/m/opensource/downloads/ipg-surfer-1.0.tar.gz", "description": "Surfer is an extensible framework designed to select and rank grid resources where a resource is defined to be anything that may need selecting such as compute resources, storage resources, data resources, etc.", "organization": "ARC", "homepageURL": "http://www.nas.nasa.gov/~kolano/projects/surfer.html", "contributors": ["Dennis Koga"], "laborHours": 17296, "tags": ["nlp:data system", "nlp:earth resource", "surfer", "data", "nlp:grid", "nlp:computer storage device", "nlp:data processing equipment", "resource", "nlp:data management", "nlp:resource allocation", "nlp:systems engineering", "ranking", "nlp:data storage", "nlp:optimization"], "name": "Surfer"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-05-06"}, "contact": {"email": "Dennis Koga"}, "repositoryURL": "https://ti.arc.nasa.gov/m/opensource/downloads/ipg-swim-1.0.tar.gz", "description": "Swim is a software information service for the grid built on top of Pour, which is an information service framework developed at NASA. Swim provides true software resource discovery integrated with the tools used by administrators to install software.", "organization": "ARC", "homepageURL": "http://people.nas.nasa.gov/~kolano/projects/swim.html", "contributors": ["Dennis Koga"], "laborHours": 2192, "tags": ["nlp:information dissemination", "nlp:information management", "swim", "nlp:software engineering", "resource", "nlp:nasa program", "discovery", "information service", "nlp:software development tool", "nlp:information system", "nlp:computational grid", "nlp:applications programs (computers)", "nlp:computer program", "nlp:computer programming"], "name": "Swim"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-05-06"}, "contact": {"email": "Dennis Koga"}, "repositoryURL": "https://ti.arc.nasa.gov/m/opensource/downloads/ikos/ikos_arbos.0.1.tar.gz", "description": "IKOS is a C++ library designed to facilitate the development of sound static analyzers based on Abstract Interpretation. Specialization of a static analyzer for an application or family of applications is critical for achieving both precision and scalability. Developing such an analyzer is arduous and requires significant expertise in Abstract Interpretation. ", "organization": "ARC", "homepageURL": "https://ti.arc.nasa.gov/opensource/ikos/", "contributors": ["Dennis Koga"], "laborHours": 9616, "tags": ["application", "nlp:kernel function", "IKOS", "nlp:c++ (programming language)", "nlp:precision", "abstract interpretation", "nlp:analyzer", "library", "nlp:library", "nlp:inference", "nlp:signal analyzer", "static analyzer", "C++", "nlp:abstract", "nlp:reliability", "nlp:product development"], "name": "Inference Kernel for Open Static Analyzers (IKOS)"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2009-02-03"}, "contact": {"email": "Nikunj Oza"}, "repositoryURL": "https://github.com/Buzz-Beater/SIAM-2007-Text-Mining", "description": "This is the dataset used for the SIAM 2007 Text Mining Competition. This is a subset of the Aviation Safety Reporting System (ASRS) dataset.", "organization": "ARC", "homepageURL": "https://c3.nasa.gov/dashlink/resources/138/", "contributors": ["Nikunj Oza"], "laborHours": 240, "tags": ["reporting", "nlp:mining", "nlp:aeronautic", "nlp:safety device", "nlp:aircraft safety", "text mining", "aviation", "nlp:data mining", "nlp:systems engineering", "system", "nlp:civil aviation", "nlp:flight safety", "nlp:safety factor", "safety", "nlp:safety"], "name": "SIAM 2007 Text Mining Competition data set"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-02-27"}, "contact": {"email": "Christa Peters-Lidard"}, "repositoryURL": "https://lis.gsfc.nasa.gov/sites/default/files/LIS/LIS_public_release_7_2r/LDT_public_release_7.2r.tar.gz", "description": "The Land Information System Verification Toolkit (LVT) is a hybrid Fortran90 and C software tool designed to enable the evaluation, analysis and comparison of outputs generated by the Land Information System (LIS). LIS is a software framework to support land surface modeling and data assimilation.", "organization": "GSFC", "homepageURL": "https://opensource.gsfc.nasa.gov/projects/LVT/index.php", "contributors": ["Christa Peters-Lidard"], "laborHours": 63296, "tags": ["LVT", "nlp:data system", "land surface", "LIS", "nlp:earth surface", "nlp:software engineering", "nlp:systems analysi", "nlp:software development tool", "nlp:information system", "nlp:proving", "nlp:applications programs (computers)", "nlp:computer program", "verification", "nlp:assimilation", "data analysis"], "name": "Land Information System Verification Toolkit (LVT)"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-02-27"}, "contact": {"email": "Joseph Howard"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/Matlab_Code_V/CodeV%20v2007a.zip", "description": "Matlab-CodeV toolkit: software enabling rapid transfer of optical modeling data into the Matlab environment for custom performance analyses, integrated modeling, wavefront sensing and control operations, and systems modeling.", "organization": "GSFC", "homepageURL": "https://opensource.gsfc.nasa.gov/projects/Matlab_Code_V/index.php", "contributors": ["Joseph Howard"], "laborHours": 880, "tags": ["optical", "matlab", "modeling", "nlp:remote sensing", "nlp:systems analysi", "nlp:software engineering", "CodeV", "nlp:systems engineering", "nlp:software development tool", "nlp:computer systems program", "nlp:data transfer (computers)", "data conversion", "nlp:automatic control", "nlp:applications programs (computers)", "nlp:computer program"], "name": "Matlab-CodeV Toolkit"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-02-27"}, "contact": {"email": "Joseph Howard"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/Matlab/Matlab_OSLO.zip", "description": "Matlab-OSLO toolkit: software enabling rapid transfer of optical modeling data into the Matlab environment for custom performance analyses, integrated modeling, wavefront sensing and control operations, and systems modeling.", "organization": "GSFC", "homepageURL": "https://opensource.gsfc.nasa.gov/projects/Matlab/index.php", "contributors": ["Joseph Howard"], "laborHours": 464, "tags": ["optical", "matlab", "modeling", "nlp:remote sensing", "nlp:systems analysi", "nlp:software engineering", "nlp:systems engineering", "nlp:software development tool", "nlp:computer systems program", "nlp:data transfer (computers)", "data conversion", "nlp:automatic control", "nlp:applications programs (computers)", "nlp:computer program", "OSLO"], "name": "Matlab-OSLO Toolkit"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-02-27"}, "contact": {"email": "Joseph Howard"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/Matlab_Zemax/15151%20ZEMAX%20v2007a.zip", "description": "Matlab-Zemax toolkit: software enabling rapid transfer of optical modeling data into the Matlab environment for custom performance analyses, integrated modeling, wavefront sensing and control operations, and systems modeling.", "organization": "GSFC", "homepageURL": "https://opensource.gsfc.nasa.gov/projects/Matlab_Zemax/index.php", "contributors": ["Joseph Howard"], "laborHours": 96, "tags": ["optical", "matlab", "modeling", "nlp:remote sensing", "nlp:systems analysi", "nlp:software engineering", "nlp:systems engineering", "nlp:software development tool", "nlp:computer systems program", "nlp:data transfer (computers)", "data conversion", "nlp:automatic control", "zemax", "nlp:applications programs (computers)", "nlp:computer program"], "name": "Matlab-zemax Toolkit"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-02-27"}, "contact": {"email": "Richard Ullman"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/ODL_XML/odl_java.tgz", "description": "Converts an HDF-EOS ODL metadata file into appropriate XML. Written in Java.", "organization": "GSFC", "homepageURL": "https://opensource.gsfc.nasa.gov/projects/ODL_XML/index.php", "contributors": ["Richard Ullman"], "laborHours": 10096, "tags": ["nlp:earth observing system (eos)", "nlp:thermionic converter", "nlp:scattering function", "nlp:power converter", "nlp:barium oxide", "XML", "nlp:phase control", "ODL", "data conversion", "nlp:reliability", "nlp:java (programming language)", "nlp:document markup language", "nlp:optimization"], "name": "ODL to XML Converter"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-02-27"}, "contact": {"email": "Peter MacNiece"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/paramesh/paramesh3.3_beta.tar.gz", "description": "PARAMESH is a package of Fortran 90 subroutines designed to provide an application developer with an easy route to extend an existing serial code which uses a logically cartesian structured mesh into a parallel code with adaptive mesh refinement (AMR).", "organization": "GSFC", "homepageURL": "https://opensource.gsfc.nasa.gov/projects/paramesh/index.php", "contributors": ["Peter MacNiece"], "laborHours": 83648, "tags": ["nlp:fortran", "AMR", "nlp:coding", "nlp:subroutine", "adaptive mesh refinement", "nlp:computational grid", "nlp:electronic packaging", "data conversion", "nlp:circuit", "nlp:computer program", "nlp:grid generation (mathematics)", "nlp:route", "nlp:computer programming"], "name": "PARAMESH"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-02-27"}, "contact": {"email": "Thomas Clune"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/FUNIT/pFUnit.tar", "description": "pFunit is a Fortran analog to various other xUnit testing frameworks which have been developed within the software community,and is intended to enable test driven development (TDD) within the scientific/technical programming community.", "organization": "GSFC", "homepageURL": "https://opensource.gsfc.nasa.gov/projects/FUNIT/index.php", "contributors": ["Thomas Clune"], "laborHours": 2272, "tags": ["nlp:fortran", "nlp:evaluation", "nlp:software engineering", "nlp:computer program", "nlp:mathematical programming", "nlp:software development tool", "test driven development", "nlp:analog computer", "software development", "testing", "nlp:electronic equipment test", "nlp:performance test", "nlp:computer programming"], "name": "pFUnit"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-02-27"}, "contact": {"email": "Richard Ullman"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/UFM/UFM.zip", "description": "The User-friendly Metadata (UFM) tool functions as a filter, taking input from standard input (STDIN) and writing output to standard output (STDOUT) and/or standard error (STDERR).", "organization": "GSFC", "homepageURL": "https://opensource.gsfc.nasa.gov/projects/UFM/index.php", "contributors": ["Richard Ullman"], "laborHours": 22384, "tags": ["input", "output", "nlp:functions (mathematics)", "STDIN", "standard", "metadata", "nlp:error analysi", "nlp:error function", "nlp:electronic filter", "UFM", "nlp:filter", "nlp:linear filter", "nlp:estimating", "nlp:error", "nlp:error signal", "nlp:root-mean-square error"], "name": "User Friendly Metadata (UFM)"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-02-27"}, "contact": {"email": "Richard Ullman"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/xml2he/xml2he5.tar.gz", "description": "Program that takes an XML representation of the contents of an HDF-EOS file and recreates the file from that description.", "organization": "GSFC", "homepageURL": "https://opensource.gsfc.nasa.gov/projects/xml2he/index.php", "contributors": ["Richard Ullman"], "laborHours": 1856, "tags": ["nlp:computation", "HDF", "nlp:image", "nlp:image converter", "nlp:frequency converter", "nlp:simulation", "nlp:systems analysi", "nlp:knowledge representation", "nlp:computer program", "XML", "nlp:voltage converters (dc to dc)", "EOS", "data conversion", "nlp:analog to digital converter", "converter"], "name": "XML to HDF-EOS Converter"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-02-27"}, "contact": {"email": "Richard Ullman"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/xml2odl/xml2odl.zip", "description": "Converts an XML file to an HDF-EOS ODL metadata file.", "organization": "GSFC", "homepageURL": "https://opensource.gsfc.nasa.gov/projects/xml2odl/index.php", "contributors": ["Richard Ullman"], "laborHours": 592, "tags": ["nlp:earth observing system (eos)", "nlp:thermionic converter", "nlp:scattering function", "nlp:power converter", "nlp:barium oxide", "XML", "nlp:phosphorus compound", "nlp:phase control", "ODL", "data conversion", "nlp:reliability", "converter", "nlp:document markup language", "nlp:optimization"], "name": "XML to ODL Converter"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-02-10"}, "contact": {"email": "William D. Pence"}, "repositoryURL": "ftp://heasarc.gsfc.nasa.gov/software/fitsio/c/cfitsio_latest.tar.gz", "description": "CFITSIO is a library of C and Fortran subroutines for reading and writing data files in FITS (Flexible Image Transport System) data format. CFITSIO provides simple high-level routines for reading and writing FITS files that insulate the programmer from the internal complexities of the FITS format. CFITSIO also provides many advanced features for manipulating and filtering the information in FITS files.", "organization": "GSFC", "homepageURL": "http://heasarc.gsfc.nasa.gov/docs/software/fitsio/fitsio.html", "contributors": ["William D. Pence"], "laborHours": 115248, "tags": ["nlp:data system", "FITS", "nlp:subroutine", "nlp:image analysi", "nlp:format", "nlp:data processing", "nlp:digital data", "nlp:data management", "nlp:data transfer (computers)", "nlp:information system", "flexible image transport system", "data validation", "nlp:image processing"], "name": "CFITSIO"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-03-10"}, "contact": {"email": "William D. Pence"}, "repositoryURL": "https://github.com/ericmandel/funtools", "description": "This is a small C library for FITS I/O originally written by John Roll at SAO. It is now maintained and distributed as part of the FUNTOOLS utility package.", "organization": "GSFC", "homepageURL": "https://github.com/ericmandel/funtools", "contributors": ["William D. Pence"], "laborHours": 139248, "tags": ["nlp:roll", "nlp:utility", "nlp:stability", "FITS", "SAO", "nlp:library", "nlp:circuit", "flexible image transport system", "nlp:electronic packaging", "nlp:reliability", "nlp:environment", "data validation", "FUNTOOLS", "nlp:radiation", "nlp:boundary layer"], "name": "fitsy/funtools"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2007-01-22"}, "contact": {"email": "William D. Pence"}, "repositoryURL": "ftp://ftp.eso.org/pub/eclipse/latest/eclipse-main-5.0.0.tar.gz", "description": "The qfits library is a small, portable C library that provides low level support for accessing FITS images, headers and tables.", "organization": "GSFC", "homepageURL": "http://www.eso.org/sci/software/eclipse/qfits/", "contributors": ["William D. Pence"], "laborHours": 49264, "tags": ["nlp:image processing", "nlp:support system", "nlp:stability", "FITS", "nlp:tables (data)", "nlp:image analysi", "nlp:library", "nlp:circuit", "flexible image transport system", "nlp:reliability", "data validation", "nlp:radiation", "qfits"], "name": "qfits"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2011-12-09"}, "contact": {"email": "Phil Newman"}, "repositoryURL": "http://heasarc.gsfc.nasa.gov/fitsio/CCfits/CCfits-2.4.tar.gz", "description": "The CCfits library is build on top of CFITSIO and provides an interface that allows the user to manipulate FITS data through high-level object-oriented building blocks.", "organization": "GSFC", "homepageURL": "http://heasarc.gsfc.nasa.gov/fitsio/CCfits/", "contributors": ["Phil Newman"], "laborHours": 58112, "tags": ["nlp:data base", "FITS", "nlp:building", "data", "nlp:data processing", "SAO", "nlp:library", "CCfits", "nlp:data reduction", "nlp:user requirement", "nlp:solid-solid interface", "nlp:object-oriented programming", "flexible image transport system", "nlp:graphical user interface", "nlp:data acquisition", "data validation", "CFITSIO"], "name": "CCfits Library"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "1997-10-01"}, "contact": {"email": "William D. Pence"}, "repositoryURL": "http://www.cv.nrao.edu/fits/src/c++fits-09.076.tar.gz", "description": "The AIPS++ FITS library is available separately from the AIPS++ distribution.  Currently there is limited documentation.  This defines a set of C++ objects to read and write FITS files.", "organization": "GSFC", "homepageURL": "http://www.cv.nrao.edu/fits/src/", "contributors": ["William D. Pence"], "laborHours": 5680, "tags": ["nlp:file maintenance (computers)", "FITS", "AIPS++FITS", "data", "nlp:c++ (programming language)", "nlp:library", "AIPS++", "nlp:set theory", "nlp:angular distribution", "nlp:distribution function", "flexible image transport system", "nlp:spatial distribution", "nlp:circuit", "nlp:reliability", "nlp:documentation", "data validation"], "name": "AIPS++FITS Library"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2013-11-30"}, "contact": {"email": "Theodore Gull"}, "repositoryURL": "https://github.com/wlandsman/IDLAstro", "description": "TThe IDL Astronomy Library contains four different sets of procedures for reading, writing, and modifying FITS files. The reason for having four different methods of FITS I/O with IDL is partly historical, as different groups developed the software independently. However, each method also has its own strengths and weakness for any particular task. For example, the procedure MRDFITS() -- which can read a FITS table into an IDL structure --is the easiest procedure for analyzing FITS files at the IDL prompt level (provided that one is comfortable with IDL structures). But mapping a table into an IDL structure includes extra overhead, so that when performing FITS I/O at the procedure level, it may be desirable to use more efficient procedures such as FITS_READ and FTAB_EXT.", "organization": "GSFC", "homepageURL": "http://idlastro.gsfc.nasa.gov/fitsio.html", "contributors": ["Theodore Gull"], "laborHours": 32768, "tags": ["nlp:file maintenance (computers)", "FITS_*", "READFITS", "IDL", "nlp:computer systems program", "FITS", "WRITEFITS", "data", "nlp:software engineering", "flexible image transport system", "data conversion", "IDLAstro", "nlp:computer technique", "FTAB_*", "nlp:astronomy", "nlp:hierarchy", "nlp:library", "MWRFITS", "nlp:tables (data)", "nlp:computer program", "MRDFITS", "FX*", "nlp:computer programming"], "name": "IDLAstro"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-05-06"}, "contact": {"email": "William D. Pence"}, "repositoryURL": "https://github.com/nom-tam-fits/nom-tam-fits", "description": "A full function 100% Java library for reading and writing FITS files.", "organization": "GSFC", "homepageURL": "http://heasarc.gsfc.nasa.gov/docs/heasarc/fits/java/", "contributors": ["William D. Pence"], "laborHours": 35632, "tags": ["java", "FITS", "nlp:functions (mathematics)", "data", "nlp:scattering function", "nlp:library", "nlp:barium oxide", "nlp:systems engineering", "nlp:phase control", "flexible image transport system", "data conversion", "nlp:information retrieval", "nlp:reliability", "nlp:java (programming language)", "nlp:optimization"], "name": "nom-tam-fits"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2008-05-16"}, "contact": {"email": "William D. Pence"}, "repositoryURL": "https://github.com/Starlink/starjava", "description": "STIL/starlink is a pure Java library for generic input, output and processing of tabular data. It presents to the application programmer a view of a table which looks the same regardless of whether it came from a FITS file, a VOTable, an ASCII text file, a query on a relational database, or whatever.", "organization": "GSFC", "homepageURL": "https://github.com/Starlink/starjava", "contributors": ["William D. Pence"], "laborHours": 2145056, "tags": ["nlp:data base", "java", "nlp:query language", "FITS", "STIL", "nlp:tables (data)", "nlp:input/output routine", "data", "nlp:data processing", "nlp:data processing equipment", "nlp:data management", "nlp:distributed processing", "binary", "starlink", "flexible image transport system", "data conversion", "nlp:data base management system", "nlp:information retrieval"], "name": "Starlink/starjava"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-04-16"}, "contact": {"email": "William D. Pence"}, "repositoryURL": "https://github.com/astrojs/fitsjs", "description": "A standalone JavaScript library for reading the FITS astronomical file format. This library is built for modern browsers supporting the DataView object. These include at least Chrome 9, Firefox 15, and Safari 6. This library may be used to read various forms of the FITS format. This implementation is under active development. In its current state it supports the following: reading of multiple header data units, reading of FITS images, reading of data cubes, reading of binary tables, reading of ASCII Tables, and decompressing images using the Rice algorithm. ", "organization": "GSFC", "homepageURL": "https://github.com/astrojs/fitsjs/", "contributors": ["William D. Pence"], "laborHours": 4432, "tags": ["ASCII", "nlp:image", "FITS", "nlp:algorithm", "nlp:coding", "nlp:tables (data)", "data", "nlp:format", "nlp:image analysi", "nlp:digital data", "nlp:data management", "binary", "flexible image transport system", "data compression", "javascript", "nlp:imaging technique", "rice algorithm", "nlp:image processing"], "name": "fitsjs"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2013-06-06"}, "contact": {"email": "William D. Pence"}, "repositoryURL": "http://search.cpan.org/~pratzlaff/Astro-FITS-CFITSIO-1.10/CFITSIO.pm", "description": "A Perl module incorporating the CFITSIO library has been developed using XS wrappers. Most useful CFITSIO calls have direct Perl counterparts. Users will need the C version of CFITSIO to link to.", "organization": "GSFC", "homepageURL": "http://search.cpan.org/~pratzlaff/Astro-FITS-CFITSIO-1.10/", "contributors": ["William D. Pence"], "laborHours": 5088, "tags": ["FITS", "perl", "data", "nlp:module", "nlp:user requirement", "nlp:library", "nlp:systems engineering", "flexible image transport system", "data conversion", "nlp:information retrieval", "nlp:optimization", "nlp:reliability", "nlp:computer program", "CFITSIO", "nlp:electronic module", "nlp:c (programming language)"], "name": "CFITSIO.pm"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2014-12-30"}, "contact": {"email": "William D. Pence"}, "repositoryURL": "http://www.cpan.org/modules/by-module/PDL/Data-Frame-0.003.tar.gz", "description": "A FITS reader is provided within the Perl Data Language module.  It handles FITS images and binary tables. PDL is a Perl module providing mechanisms to manipulate arrays of data efficiently.", "organization": "GSFC", "homepageURL": "http://www.cpan.org/modules/by-module/PDL/", "contributors": ["William D. Pence"], "laborHours": 352, "tags": ["nlp:data base", "FITS", "perl", "nlp:tables (data)", "data", "nlp:module", "nlp:data reduction", "nlp:data processing", "nlp:image analysi", "nlp:array", "binary", "flexible image transport system", "data conversion", "nlp:machine oriented language", "nlp:data acquisition", "nlp:image processing", "CFITSIO"], "name": "PDL FITS capabilities"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-05-06"}, "contact": {"email": "William D. Pence"}, "repositoryURL": "http://fits.gsfc.nasa.gov/software/mfitsio-1.2.4-src.tar.gz", "description": "Damian Eads (at Los Alamos at that time) wrote a MatLab interface to the CFITSIO library using a tool called 'mex'. MFITSIO supports reading and writing FITS images, image subsets, and headers. (UPDATE, June 2013: MFITSIO is no longer available from the Los Alamos web site, however, the last version (1.2.4) of the MFITSIO source code .tar file has been retrieved from the Internet Archive WayBack Machine and made available here. The mfitsio interface has not been maintained for many years, and some users have reported problems with installing the software.)", "organization": "GSFC", "homepageURL": "http://fits.gsfc.nasa.gov/fits_libraries.html#mfitsio", "contributors": ["William D. Pence"], "laborHours": 944, "tags": ["FITS", "nlp:coding", "matlab", "nlp:world wide web", "data", "nlp:software engineering", "nlp:library", "nlp:software development tool", "MFITSIO", "flexible image transport system", "data conversion", "nlp:applications programs (computers)", "nlp:computer program", "nlp:internet", "nlp:image processing", "nlp:information retrieval"], "name": "MFITSIO"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2014-04-30"}, "contact": {"email": "William D. Pence"}, "repositoryURL": "http://fits.gsfc.nasa.gov/software/gfitsio_v5.2_Apr_2014.zip", "description": "George Gatling (NRL, email = george.gatling  'at' nrl.navy.mil) wrote an interface to the CFITSIO library for LabVIEW 2013 or later under Microsoft Windows . It supports reading and writing FITS images and ASCII and binary tables.", "organization": "GSFC", "homepageURL": "http://fits.gsfc.nasa.gov/fits_libraries.html#LabVIEW", "contributors": ["William D. Pence"], "laborHours": 3216, "tags": ["nlp:human-computer interface", "FITS", "nlp:pattern recognition", "nlp:tables (data)", "data", "nlp:interface", "GFITSIO", "nlp:library", "Labview", "nlp:image analysi", "nlp:image resolution", "binary", "nlp:electronic mail", "nlp:imagery", "flexible image transport system", "data conversion", "nlp:image processing"], "name": "GFITSIO"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2014-07-17"}, "contact": {"email": "William D. Pence"}, "repositoryURL": "http://docs.astropy.org/en/stable/io/fits/index.html#module-astropy.io.fits", "description": "PyFITS is a set of Python modules which read and write most FITS formats.", "organization": "GSFC", "homepageURL": "http://www.stsci.edu/institute/software_hardware/pyfits/", "contributors": ["William D. Pence"], "laborHours": 11728, "tags": ["nlp:computation", "nlp:image", "FITS", "nlp:stability", "nlp:simulation", "data", "nlp:module", "nlp:format", "nlp:systems analysi", "nlp:set theory", "python", "binary", "flexible image transport system", "data conversion", "nlp:transmitter", "nlp:electronic module"], "name": "PyFITS"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-04-17"}, "contact": {"email": "William D. Pence"}, "repositoryURL": "https://github.com/esheldon/fitsio", "description": "fitsio is a full featured python library to read and write data to FITS files. This is a python extension written in c and python. Data are read into numerical python arrays. A version of cfitsio is bundled with this package, which is used, in particular, to read and write images in tile-compressed format.", "organization": "GSFC", "homepageURL": "https://github.com/esheldon/fitsio", "contributors": ["William D. Pence"], "laborHours": 118336, "tags": ["nlp:image", "FITS", "fitsio", "data", "nlp:format", "nlp:image analysi", "cfitsio", "nlp:digital data", "python", "nlp:data management", "nlp:array", "flexible image transport system", "data conversion", "nlp:applications programs (computers)", "nlp:electronic packaging", "nlp:image processing", "nlp:imaging technique"], "name": "Python/fitsio"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2009-04-08"}, "contact": {"email": "William D. Pence"}, "repositoryURL": "https://pypi.python.org/packages/source/p/pfits/pfits-0.0.2.tar.gz", "description": "This package uses the CFITSIO library to interface to FITS files from Python. Particular attention has been paid to supporting ASCII and BINARY tables with fixed and variable-length entries. Data I/O is handled through numpy arrays. Note: this library appears to not have been updated since 2009 and may no longer be supported.", "organization": "GSFC", "homepageURL": "https://pypi.python.org/pypi/pfits", "contributors": ["William D. Pence"], "laborHours": 70416, "tags": ["nlp:file maintenance (computers)", "ASCII", "FITS", "nlp:tables (data)", "nlp:binary data", "data", "nlp:data processing", "nlp:data reduction", "nlp:library", "python", "nlp:array", "binary", "nlp:circuit", "flexible image transport system", "data conversion", "nlp:atmospheric entry", "nlp:electronic packaging", "PFITS"], "name": "PFITS"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2016-11-26"}, "contact": {"email": "William D. Pence"}, "repositoryURL": "http://www.astro.umd.edu/~harris/r/FITSio_2.0-0.zip", "description": "FITSio is a contributed R package for reading and writing FITS images and reading binary tables within the R software environment. It has no dependencies other than the base R installation. The FITSio contributed package source code is available directly from the R project web site under the 'contributed extension packages' link.", "organization": "GSFC", "homepageURL": "http://fits.gsfc.nasa.gov/fits_libraries.html#Rlang", "contributors": ["William D. Pence"], "laborHours": 32, "tags": ["nlp:data base", "nlp:installing", "data visualization", "FITS", "nlp:coding", "data", "nlp:software development tool", "nlp:computer systems program", "FITSio", "nlp:data link", "flexible image transport system", "nlp:applications programs (computers)", "nlp:computer program", "R language", "nlp:image processing", "nlp:computer programming"], "name": "fitsio"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2012-02-21"}, "contact": {"email": "William D. Pence"}, "repositoryURL": "https://www.spacetelescope.org/static/projects/fits_liberator/v301files/FITSLiberator3.zip", "description": "Liberator is a free plug-in for Adobe Photoshop or Photoshop Elements 2 for manipulating FITS images with those programs. A color composite 'Action' file is also available to simplify the process of creating color composite images from 3 separate red, green, and blue images.", "organization": "GSFC", "homepageURL": "http://www.spacetelescope.org/projects/fits_liberator/", "contributors": ["William D. Pence"], "laborHours": 256, "tags": ["nlp:file maintenance (computers)", "nlp:european space agency", "adobe", "liberator", "nlp:color photography", "nlp:composite material", "data visualization", "FITS", "data", "nlp:nasa program", "flexible image transport system", "nlp:european space program", "nlp:image processing", "nlp:color", "nlp:image analysi", "image processing", "ESO", "nlp:computer program", "ESA"], "name": "ESA/ESO/NASA FITS Liberator"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2014-02-12"}, "contact": {"email": "William D. Pence"}, "repositoryURL": "https://github.com/siravan/fits", "description": "Package fits reads and processes FITS files. It is written in pure golang and is not a wrapper around another library or a direct translation of another library to golang. The main purpose is to provide a native golang solution to reading FITS file and to assess the suitability of golang for scientific and numerical applications.", "organization": "GSFC", "homepageURL": "https://github.com/siravan/fits", "contributors": ["William D. Pence"], "laborHours": 544, "tags": ["nlp:translating", "nlp:file maintenance (computers)", "FITS", "nlp:packaging", "data", "nlp:computer storage device", "nlp:library", "golang", "nlp:newton-raphson method", "flexible image transport system", "data processing", "nlp:applications programs (computers)", "go", "nlp:electronic packaging", "nlp:optimization", "nlp:information retrieval"], "name": "golang fits reader"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2014-07-09"}, "contact": {"email": "William D. Pence"}, "repositoryURL": "https://github.com/astrogo/cfitsio", "description": "A set of CGo bindings to some of the most commonly used routines in the CFITSIO library (written in C).", "organization": "GSFC", "homepageURL": "https://github.com/astrogo/cfitsio", "contributors": ["William D. Pence"], "laborHours": 4176, "tags": ["nlp:computation", "nlp:image", "nlp:estimating", "wrapper", "data processing", "CFITSIO", "nlp:loran c", "nlp:stability", "FITS", "data", "flexible image transport system", "C", "nlp:systems analysi", "golang", "go", "nlp:transmitter", "nlp:simulation", "nlp:set theory", "nlp:c (programming language)"], "name": "golang wrapper"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-02-06"}, "contact": {"email": "William D. Pence"}, "repositoryURL": "https://github.com/astrogo/fitsio", "description": "Go package to read and write FITS files. It is written in pure golang and is not a wrapper around another library.", "organization": "GSFC", "homepageURL": "https://github.com/astrogo/fitsio", "contributors": ["William D. Pence"], "laborHours": 5984, "tags": ["nlp:bending theory", "FITS", "nlp:packaging", "data", "nlp:scattering function", "nlp:library", "nlp:barium oxide", "nlp:phosphorus compound", "golang", "nlp:phase control", "flexible image transport system", "data processing", "nlp:electronic packaging", "go", "nlp:reliability", "nlp:optimization"], "name": "native golang fits package"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-02-27"}, "contact": {"email": "Vicki Zanoni"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/Alias/alias2_1.tar", "description": "The Advanced Land Image Assessment Systems (ALIAS) supports radiometric and geometric image processing for the Advanced Land Imager (ALI) instrument on board NASA\u2019s Earth Observing-1 (EO-1) satellite. ALIAS consists of two processing subsystems for radiometric and geometric processing of the ALI\u2019s multispectral imagery. The radiometric processing subsystem characterizes and corrects, where possible, radiometric qualities including: detector operability; gain; bias; coherent, impulse and random noise; signal-to-noise ratios (SNR); saturation levels; striping and banding; and the stability of detector performance. The geometric processing subsystem and analysis capabilities support sensor alignment calibrations; sensor chip assembly (SCA)-to-SCA alignments and related issues; geodetic accuracy assessments; modulation transfer function (MTF) characterizations; and perform image-to-image characterizations. The ALIAS also characterizes and corrects band-to-band registration, and performs systematic, precision and terrain correction of ALI images. The ALIAS can geometrically correct and automatically mosaic the SCA image strips into a seamless, map-projected image. The ALIAS was developed through collaboration between NASA and the U.S. Geological Survey (USGS).", "organization": "GSFC", "homepageURL": "https://opensource.gsfc.nasa.gov/projects/Alias/Alias.zip", "contributors": ["Vicki Zanoni"], "laborHours": 315552, "tags": ["nlp:modulation transfer function", "nlp:infrared imagery", "nlp:satellite imagery", "nlp:signal to noise ratio", "nlp:radiometric correction", "nlp:satellite-borne instrument", "EO-1", "nlp:imagery", "Advanced Land Imager", "image processing", "nlp:landsat satellite", "nlp:calibrating", "nlp:measuring instrument"], "name": "ALIAS"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-02-27"}, "contact": {"email": "David McComas"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/ut-assert/ut-assert%20v1_0%2011-24-14.zip", "description": "The ut-assert unit test tools provide a unit test framework and a collection of utilities that are designed to facilitate unit testing.", "organization": "GSFC", "homepageURL": "https://opensource.gsfc.nasa.gov/projects/ut-assert/index.php", "contributors": ["David McComas"], "laborHours": 1616, "tags": ["nlp:utility", "assert", "nlp:evaluation", "regression testing", "nlp:systems engineering", "nlp:test facility", "nlp:test", "nlp:data acquisition", "unit test", "nlp:acceptability", "nlp:electronic equipment test", "nlp:test equipment", "nlp:performance test"], "name": "Assert-Based Unit Test Tools (UT-Assert)"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-02-27"}, "contact": {"email": "Christopher Lynnes"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/CEOP/CEOP.tar.gz", "description": "A gateway using OPeNDAP, implemented as a plug-in to the Hyrax server, for accessing WCS data.", "organization": "GSFC", "homepageURL": "https://opensource.gsfc.nasa.gov/projects/CEOP/index.php", "contributors": ["Christopher Lynnes"], "laborHours": 23488, "tags": ["nlp:data system", "nlp:tables (data)", "nlp:data processing equipment", "nlp:data reduction", "nlp:data processing", "nlp:data management", "earth science data", "nlp:satellite observation", "nlp:communication satellite", "networking", "nlp:data transmission", "opendap", "ACCESS", "nlp:data acquisition"], "name": "CEOP Satellite Data Server"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-02-27"}, "contact": {"email": "James Tilton"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/HSEG/core_rhsegV1.47.tar.gz", "description": "The RHSEG software provides hierarchical segmentation (pre-processing) of image and image-like data. The software significantly improves the extraction of patterns from complex data sets and is optimized for speed and accuracy. This algorithm provides the user with precise control for selecting the desired level of detail from the hierarchy of results.", "organization": "GSFC", "homepageURL": "https://opensource.gsfc.nasa.gov/projects/HSEG/index.php", "contributors": ["James Tilton"], "laborHours": 17184, "tags": ["nlp:algorithm", "nlp:pattern recognition", "application", "object based image analysis", "nlp:hierarchy", "nlp:image analysi", "nlp:data processing", "nlp:computer program", "nlp:software development tool", "image processing", "nlp:applications programs (computers)", "nlp:image processing", "RHSEG", "nlp:imaging technique"], "name": "Core RHSEG Software Package"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-02-27"}, "contact": {"email": "Christopher Lynnes"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/DQSS/dqss_64.tar", "description": "The Data Quality Screening Service (DQSS) is designed to help automate the filtering of remote sensing data on behalf of science users.", "organization": "GSFC", "homepageURL": "https://opensource.gsfc.nasa.gov/projects/DQSS/index.php", "contributors": ["Christopher Lynnes"], "laborHours": 10544, "tags": ["nlp:data base", "nlp:data system", "quality", "nlp:quality control", "nlp:remote sensing", "nlp:data reduction", "nlp:data processing", "nlp:user requirement", "nlp:remote sensor", "remote sensing", "nlp:data transmission", "data filtering", "nlp:data acquisition"], "name": "Data Quality Screening Service (DQSS)"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-02-27"}, "contact": {"email": "Richard Ullman"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/ECS_Metadata_validate/schemavalidator.zip", "description": "The ECS Schema Validation tool validates an XML Document based on the BMGT Granule or Collection Schema, and generate reports listing all invalid elements.", "organization": "GSFC", "homepageURL": "https://opensource.gsfc.nasa.gov/projects/ECS_Metadata_validate/index.php", "contributors": ["Richard Ullman"], "laborHours": 13792, "tags": ["nlp:stability", "nlp:radiation", "validator", "nlp:finite element method", "nlp:tool", "nlp:software development tool", "EOS", "nlp:circuit", "nlp:reliability", "data validation", "nlp:document markup language", "nlp:data acquisition", "nlp:boundary layer"], "name": "ECS Metadata Validator"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-02-27"}, "contact": {"email": "Robert Harberts"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/edg/edg.zip", "description": "The Earth Observing System Data Gateway (EDG) was developed in response to the earth science community's need for a one-stop-shopping interface to search for data and order data granules from distributed data archives. This innovation enables users to explore, discover, and order available data from geographically distributed data providers through a standard interface.", "organization": "GSFC", "homepageURL": "https://opensource.gsfc.nasa.gov/projects/edg/index.php", "contributors": ["Robert Harberts"], "laborHours": 233888, "tags": ["nlp:data base", "nlp:earth observing system (eos)", "nlp:data system", "nlp:interface", "nlp:earth observations (from space)", "Earth science", "nlp:user requirement", "nlp:data processing equipment", "nlp:data management", "nlp:data base management system", "data interchange", "nlp:data acquisition", "interface"], "name": "EDG"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-02-27"}, "contact": {"email": "Eric Sokolowsky"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/NFMW/nfmw-20081204.zip", "description": "The NFMW reads Earth science models and produces web pages that display the desired area, time, and elevation, using WMS (Web Map Service).", "organization": "GSFC", "homepageURL": "https://opensource.gsfc.nasa.gov/projects/NFMW/index.php", "contributors": ["Eric Sokolowsky"], "laborHours": 24304, "tags": ["data visualization", "nlp:mapping", "nlp:real time operation", "nlp:time dependence", "earth science", "web map service", "nlp:elevation", "nlp:atmospheric model", "nlp:mathematical model", "nlp:earth (planet)", "nlp:relief map", "nlp:earth science", "nlp:map"], "name": "Forecast Model Web Map Service (NFMW)"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-02-27"}, "contact": {"email": "Mathew Schwaller"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/GPMV/GPM_VN_visualization_master.tar", "description": "The GPM displays grand- and space-based radar observations for easy comparison and validation. Inteded for meteorologists and other sciences; not end users.", "organization": "GSFC", "homepageURL": "https://opensource.gsfc.nasa.gov/projects/GPMV/index.php", "contributors": ["Mathew Schwaller"], "laborHours": 6128, "tags": ["data visualization", "nlp:space mission", "nlp:scientific visualization", "earth science", "GVS", "nlp:comparison", "GPM", "nlp:mission planning", "nlp:proving", "nlp:meteorology", "meteorology", "nlp:precipitation (meteorology)", "nlp:radar data", "nlp:graphical user interface", "nlp:display device"], "name": "Global Precipitation Mission (GPM) Visualization Tool for Validation Network Geometrically-Matched Ground- and Space-based Radar Data"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-02-27"}, "contact": {"email": "Mathew Schwaller"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/GPM/GPMGV_VN_IDL_CODE.tar", "description": "The GPM Collects various data sets from TRMM spacecraft, re-samples it, and generates statistics.", "organization": "GSFC", "homepageURL": "https://opensource.gsfc.nasa.gov/projects/GPM/index.php", "contributors": ["Mathew Schwaller"], "laborHours": 5712, "tags": ["TRMM", "earth science", "GVS", "nlp:ground based control", "nlp:data sampling", "nlp:spacecraft instrument", "nlp:comparison", "GPM", "nlp:radar data", "data processing", "nlp:precipitation (meteorology)", "nlp:statistical analysi", "nlp:radar", "nlp:ground support equipment", "nlp:trmm satellite"], "name": "Global Precipitation Radar (GPM) Space and Ground Radar Comparison"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-02-27"}, "contact": {"email": "Richard Ullman"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/hemu/HEMU.zip", "description": "HDF-EOS Metadata Updater updates metadata inside an HDF-EOS file.", "organization": "GSFC", "homepageURL": "https://opensource.gsfc.nasa.gov/projects/hemu/index.php", "contributors": ["Richard Ullman"], "laborHours": 10432, "tags": ["nlp:file maintenance (computers)", "nlp:stability", "updater", "HDF-EOS", "EOSDIS", "EOS", "nlp:circuit", "nlp:reliability", "nlp:environment", "data file manipulator", "nlp:radiation", "nlp:boundary layer"], "name": "HDF-EOS Metadata Updater"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-02-27"}, "contact": {"email": "Richard Ullman"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/hdfeos2netcdf/hdfeos5-netcdf.tar", "description": "The HDF-EOS to netCDF Convertor takes an HDF-EOS dataset and outputs a netCDF file that preserves as much as possible of the dataset's data and metadata using the CF conventions for netCDF.", "organization": "GSFC", "homepageURL": "https://opensource.gsfc.nasa.gov/projects/hdfeos2netcdf/index.php", "contributors": ["Richard Ullman"], "laborHours": 544, "tags": ["nlp:data base", "nlp:file maintenance (computers)", "nlp:earth observing system (eos)", "nlp:stability", "updater", "HDF-EOS", "EOSDIS", "EOS", "nlp:circuit", "data conversion", "nlp:reliability", "nlp:environment", "nlp:boundary layer", "nlp:radiation"], "name": "HDF-EOS to netCDF Convertor"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-02-27"}, "contact": {"email": "Richard Ullman"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/heserve/heserve.zip", "description": "The HDF-EOS Web Server converts HDF-EOS metadata into human-readable HTML and publishes it to a local web server (which must be pre-configured).", "organization": "GSFC", "homepageURL": "https://opensource.gsfc.nasa.gov/projects/heserve/index.php", "contributors": ["Richard Ullman"], "laborHours": 1248, "tags": ["nlp:earth observing system (eos)", "server", "nlp:bending theory", "nlp:molecular rotation", "nlp:scattering function", "HDF-EOS", "nlp:barium oxide", "EOSDIS", "nlp:phosphorus compound", "EOS", "nlp:phase control", "data conversion", "nlp:reliability", "nlp:document markup language", "nlp:optimization"], "name": "HDF-EOS Web Server"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-02-27"}, "contact": {"email": "Richard Ullman"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/XML_DTD_Schemas/schemavalidator.zip", "description": "The HDFEOS XML DTD and Schemas is a set of DTD and schemas for HDFEOS files.", "organization": "GSFC", "homepageURL": "https://opensource.gsfc.nasa.gov/projects/XML_DTD_Schemas/index.php", "contributors": ["Richard Ullman"], "laborHours": 13792, "tags": ["server", "nlp:computation", "nlp:image", "nlp:stability", "nlp:simulation", "nlp:format", "nlp:systems analysi", "HDF-EOS", "nlp:set theory", "EOSDIS", "EOS", "nlp:estimating", "data validation", "nlp:transmitter", "nlp:fatigue (materials)"], "name": "HDFEOS XML DTD and Schemas"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-02-27"}, "contact": {"email": "Dan Marinelli"}, "repositoryURL": "https://opensource.gsfc.nasa.gov/projects/HDF/HDF.zip", "description": "This is a Java language software plug-in to The HDF Group's (formerly of NCSA at University of Illinois at Urbana-Champaign) HDFView which provides an HDF-EOS interface for both versions of HDF (4 and 5) of HDF-EOS. Browse and edit functions are provided.", "organization": "GSFC", "homepageURL": "https://opensource.gsfc.nasa.gov/projects/HDF/index.php", "contributors": ["Dan Marinelli"], "laborHours": 208, "tags": ["nlp:language programming", "nlp:functions (mathematics)", "nlp:interface", "nlp:software engineering", "HDF-EOS", "nlp:computer program", "EOSDIS", "nlp:software development tool", "nlp:computer systems program", "EOS", "nlp:java (programming language)", "data validation", "nlp:machine oriented language", "nlp:computer programming"], "name": "HDFView HDF-EOS Plug-in"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2016-09-06"}, "contact": {"email": "David Nelson"}, "repositoryURL": "https://github.com/nasa/MINX", "description": "MINX, which stands for MISR INteractive eXplorer, is an interactive visualization and analysis program written in IDL and designed to make MISR data more accessible to science users. Its principal use is to retrieve heights and motion for aerosol plumes and clouds using stereoscopic methods.", "organization": "JPL", "homepageURL": "http://misr.jpl.nasa.gov/", "contributors": ["David Nelson", "Sebastian Val"], "laborHours": 31056, "tags": ["nlp:aerosol", "Visualization", "Analysis", "nlp:plume", "nlp:scientific visualization", "nlp:cloud", "nlp:data processing", "nlp:data reduction", "nlp:cloud physic", "nlp:computer program", "Toolkit", "nlp:clouds (meteorology)", "nlp:cloud seeding"], "name": "MINX"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2019-02-27"}, "contact": {"email": "lewismc"}, "repositoryURL": "https://github.com/nasa/podaac_tools_and_services", "description": "A meta-repository which essentially lists code related to all tools and services software for NASA JPL's PO.DAAC", "organization": "JPL", "homepageURL": "https://github.com/nasa/podaac_tools_and_services", "contributors": ["lewismc"], "laborHours": 1, "tags": ["sst", "ocean-winds", "oceanography", "nlp:computer systems program", "ocean-circulation", "nlp:computer program integrity", "nlp:software engineering", "nlp:nasa program", "nlp:systems engineering", "sea", "nlp:programming environment", "ost", "nlp:computer program", "nlp:software development tool", "sea-surface-temperature", "gravity", "sea-surface-salinity", "nlp:applications programs (computers)", "sss", "podaac", "physical-oceanography", "services", "tools", "sea-ice", "ocean-surface-topography", "nlp:computer programming"], "name": "PO.DAAC Tools and Services"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2016-09-28"}, "contact": {"email": "naylor-b"}, "repositoryURL": "https://github.com/OpenMDAO/testflo", "description": "A simple python testing framework that can run unit tests under MPI (or not).", "organization": "ARC", "homepageURL": "https://github.com/OpenMDAO/testflo/archive/master.zip", "contributors": ["naylor-b", "swryan", "kmarstellar"], "laborHours": 752, "tags": ["nlp:ground test", "nlp:psychological test", "MPI", "nlp:materials test", "nlp:full scale test", "python", "openmdao", "nlp:test facility", "unit testing", "nlp:test", "nlp:acceptability", "nlp:electronic equipment test", "nlp:test equipment", "nlp:performance test"], "name": "OpenMDAO: testflo"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2016-09-28"}, "contact": {"email": "naylor-b"}, "repositoryURL": "https://github.com/OpenMDAO/OpenMDAO", "description": "OpenMDAO is a high-performance computing platform for systems analysis and optimization that enables you to decompose your models, making them easier to build and maintain, while still solving them in a tightly-coupled manner with efficient parallel numerical methods.", "organization": "ARC", "homepageURL": "https://github.com/OpenMDAO/OpenMDAO/archive/master.zip", "contributors": ["naylor-b", "swryan", "kmarstellar", "Kenneth-T-Moore", "dwmunster", "JustinSGray", "hschilling", "crobinsonut", "thearn", "adamnagel", "relf", "timothy-thomas", "fcapristan", "fzahle", "jaredthomas68", "volgy", "amoondra", "ksmyth", "shamsheersc19", "pziegfeld", "sanbales", "lattmann", "jonathonw"], "laborHours": 58912, "tags": ["nlp:performance prediction", "nlp:computation", "optimization", "nlp:stochastic processe", "nlp:nonlinearity", "nlp:systems analysi", "python", "openmdao", "nlp:systems engineering", "nlp:mathematical model", "nlp:model", "systems analysis", "nlp:performance test", "nlp:optimization"], "name": "OpenMDAO"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2016-09-14"}, "contact": {"email": "swryan"}, "repositoryURL": "https://github.com/OpenMDAO/benchmark", "description": "Prototype of a benchmarking/regression tool.", "organization": "ARC", "homepageURL": "https://github.com/OpenMDAO/benchmark/archive/master.zip", "contributors": ["swryan", "kmarstellar"], "laborHours": 656, "tags": ["benchmark", "nlp:stability", "nlp:radiation", "nlp:machine tool", "python", "openmdao", "nlp:tool", "nlp:regression analysi", "nlp:circuit", "regression", "nlp:reliability", "nlp:environment", "nlp:boundary layer", "nlp:prototype"], "name": "OpenMDAO: benchmark"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2016-08-11"}, "contact": {"email": "swryan"}, "repositoryURL": "https://github.com/OpenMDAO/CADRE", "description": "OpenMDAO plug-in.", "organization": "ARC", "homepageURL": "https://github.com/OpenMDAO/CADRE/archive/master.zip", "contributors": ["swryan", "kmarstellar"], "laborHours": 2496, "tags": ["nlp:molecular rotation", "nlp:bending theory", "nlp:cyclic hydrocarbon", "nlp:scattering function", "nlp:barium oxide", "python", "openmdao", "nlp:phosphorus compound", "nlp:phase control", "nlp:data smoothing", "regression", "nlp:reliability", "benchmark", "nlp:optimization"], "name": "OpenMDAO: Cadre"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2016-06-10"}, "contact": {"email": "jcchin"}, "repositoryURL": "https://github.com/OpenMDAO/NRELTraining", "description": "An old problem used for NREL Training, converted to OpenMDAO 1.x", "organization": "ARC", "homepageURL": "https://github.com/OpenMDAO/NRELTraining/archive/master.zip", "contributors": ["jcchin", "thearn", "Kenneth-T-Moore"], "laborHours": 3968, "tags": ["training", "nlp:stability", "nlp:problem solving", "nlp:training analysi", "nlp:boundary value problem", "python", "openmdao", "nlp:conference", "nlp:circuit", "NREL", "nlp:reliability", "nlp:environment", "nlp:boundary layer", "nlp:radiation"], "name": "OpenMDAO: NRELTraining"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2016-04-11"}, "contact": {"email": "hwangjt"}, "repositoryURL": "https://github.com/OpenMDAO/MBI", "description": "MBI sub-branch of the OpenMDAO repository.", "organization": "ARC", "homepageURL": "https://github.com/OpenMDAO/MBI/archive/master.zip", "contributors": ["hwangjt", "naylor-b", "JustinSGray", "hschilling", "thearn"], "laborHours": 320, "tags": ["nlp:stability", "supercomputer", "openmdao", "fortran", "nlp:circuit", "nlp:reliability", "nlp:environment", "NAS", "nlp:radiation", "nlp:boundary layer"], "name": "OpenMDAO: MBI"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2016-01-20"}, "contact": {"email": "fcapristan"}, "repositoryURL": "https://github.com/OpenMDAO/flops_wrapper", "description": "OpenMDAO component wrapper for FLOPS.", "organization": "ARC", "homepageURL": "https://github.com/OpenMDAO/flops_wrapper/archive/master.zip", "contributors": ["fcapristan", "kmarsteller", "setowns1", "hschilling", "Kenneth-T-Moore", "pziegfeld"], "laborHours": 2416, "tags": ["nlp:failure", "nlp:vibration", "nlp:component reliability", "nlp:structural design", "nlp:load distribution (forces)", "nlp:production engineering", "nlp:materials test", "python", "openmdao", "nlp:aerospace engineering", "flops", "nlp:cavitation flow", "nlp:solid"], "name": "OpenMDAO: flops_wrapper"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-09-03"}, "contact": {"email": "naylor-b"}, "repositoryURL": "https://github.com/OpenMDAO/OpenMDAO-Framework", "description": "A python based open-source (Apache 2.0) engineering analysis framework designed to facilitate the use of MDAO. To add issues, visit our user forums at http://www.openmdao.org/forum . NOTE: this version is no longer being developed. The current active version can be found here: https://github.com/OpenMDAO/OpenMDAO.", "organization": "ARC", "homepageURL": "https://github.com/OpenMDAO/OpenMDAO-Framework/archive/dev.zip", "contributors": ["naylor-b", "swryan", "setowns1", "hschilling", "Kenneth-T-Moore", "pziegfeld", "JustinSGray", "justinopenmdao", "thearn", "crobinsonut", "cnkavanaugh", "cwmine", "jcchin", "dykeag", "eshendricks", "relf", "andrewning", "fzahle", "youngklee"], "laborHours": 102368, "tags": ["nlp:failure", "nlp:network analysi", "framework", "nlp:user requirement", "nlp:hydroelectricity", "nlp:systems analysi", "python", "openmdao", "nlp:systems engineering", "MDAO", "nlp:reliability", "nlp:computer program", "nlp:optimization", "nlp:radiation source"], "name": "OpenMDAO: OpenMDAO-Framework"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-03-24"}, "contact": {"email": "kmarsteller"}, "repositoryURL": "https://github.com/OpenMDAO/OpenMDAO-Procedures", "description": "Procedures for OpenMDAO maintainers.", "organization": "ARC", "homepageURL": "https://github.com/OpenMDAO/OpenMDAO-Procedures/archive/master.zip", "contributors": ["kmarsteller", "naylor-b", "Kenneth-T-Moore", "pziegfeld"], "laborHours": 256, "tags": ["nlp:molecular rotation", "nlp:bending theory", "nlp:cyclic hydrocarbon", "nlp:scattering function", "nlp:barium oxide", "python", "openmdao", "nlp:phosphorus compound", "nlp:phase control", "nlp:data smoothing", "nlp:optimization", "nlp:reliability", "mdao", "procedures", "maintainers"], "name": "OpenMDAO: OpenMDAO-Procedures"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2015-02-17"}, "contact": {"email": "swryan"}, "repositoryURL": "https://github.com/OpenMDAO/airline-allocation", "description": "Airline allocation problem.", "organization": "ARC", "homepageURL": "https://github.com/OpenMDAO/airline-allocation/archive/master.zip", "contributors": ["swryan", "crobinsonut", "hschilling"], "laborHours": 1040, "tags": ["nlp:failure", "allocation", "nlp:problem solving", "airline", "nlp:scattering function", "nlp:airline operation", "python", "openmdao", "nlp:conference", "nlp:systems engineering", "nlp:civil aviation", "nlp:commercial aircraft", "nlp:reliability", "mdao", "nlp:optimization"], "name": "OpenMDAO: OpenMDAO-airline-allocation"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2014-08-20"}, "contact": {"email": "swryan"}, "repositoryURL": "https://github.com/OpenMDAO/openmdao_testapp", "description": "Web app to manage openmdao automated testing.", "organization": "ARC", "homepageURL": "https://github.com/OpenMDAO/openmdao_testapp/archive/master.zip", "contributors": ["swryan", "crobinsonut", "hschilling"], "laborHours": 272, "tags": ["nlp:failure", "application", "nlp:vibration", "nlp:scattering function", "nlp:materials test", "nlp:barium oxide", "python", "openmdao", "nlp:systems engineering", "nlp:phosphorus compound", "nlp:missile", "nlp:phase control", "nlp:reliability", "testing", "mdao"], "name": "OpenMDAO: openmdao_testapp"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2014-07-16"}, "contact": {"email": "treforevans"}, "repositoryURL": "https://github.com/OpenMDAO/marathon-aircraft", "description": "Aero-Velo Marathon Aircraft.", "organization": "ARC", "homepageURL": "https://github.com/OpenMDAO/marathon-aircraft/archive/master.zip", "contributors": ["treforevans", "JustinSGray"], "laborHours": 224, "tags": ["nlp:aircraft part", "nlp:military aircraft", "aircraft", "nlp:aircraft performance", "nlp:aircraft structure", "nlp:aircraft design", "nlp:aircraft engine", "nlp:aircraft maintenance", "python", "openmdao", "aeronautics", "nlp:commercial aircraft", "nlp:aircraft production", "nlp:aircraft control", "mdao"], "name": "OpenMDAO: marathon-aircraft"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2014-04-18"}, "contact": {"email": "treforevans"}, "repositoryURL": "https://github.com/OpenMDAO/pyV3D", "description": "Python web-based geometry viewer.", "organization": "ARC", "homepageURL": "https://github.com/OpenMDAO/pyV3D/archive/master.zip", "contributors": ["treforevans", "JustinSGray"], "laborHours": 9440, "tags": ["mdao", "geometry", "nlp:stability", "openmdao", "nlp:flow geometry", "nlp:circuit", "nlp:reliability", "nlp:environment", "nlp:boundary layer", "viewer", "nlp:radiation", "C"], "name": "OpenMDAO: pyV3D"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2014-04-18"}, "contact": {"email": "naylor-b"}, "repositoryURL": "https://github.com/OpenMDAO/pygem", "description": "Python wrappers for the GEM libraries diamond and quartz.", "organization": "ARC", "homepageURL": "https://github.com/OpenMDAO/pygem/archive/master.zip", "contributors": ["naylor-b", "Kenneth-T-Moore"], "laborHours": 13248, "tags": ["gem", "nlp:stability", "nlp:diamond", "nlp:quartz crystal", "nlp:quartz", "openmdao", "wrapper", "nlp:diamond film", "nlp:circuit", "nlp:reliability", "nlp:environment", "nlp:boundary layer", "mdao", "nlp:radiation", "C"], "name": "OpenMDAO: pygem"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2013-12-05"}, "contact": {"email": "naylor-b"}, "repositoryURL": "https://github.com/OpenMDAO/GEM", "description": "Geometry Environment for MDAO.", "organization": "ARC", "homepageURL": "https://github.com/OpenMDAO/GEM/archive/master.zip", "contributors": ["naylor-b", "JustinSGray"], "laborHours": 17024, "tags": ["gem", "nlp:stability", "nlp:environment simulation", "openmdao", "nlp:flow geometry", "nlp:aerospace environment", "wrapper", "nlp:circuit", "nlp:reliability", "nlp:environment", "nlp:boundary layer", "mdao", "nlp:radiation", "C", "nlp:environmental test"], "name": "OpenMDAO: GEM"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2013-01-24"}, "contact": {"email": "haimes"}, "repositoryURL": "https://github.com/OpenMDAO/EGADS", "description": "EGADS: Engineering Geometry Aerospace Design System.", "organization": "ARC", "homepageURL": "https://github.com/OpenMDAO/EGADS/archive/master.zip", "contributors": ["haimes", "JustinSGray"], "laborHours": 34128, "tags": ["nlp:aerospace industry", "geometry", "nlp:structural engineering", "nlp:structural design", "nlp:systems engineering", "openmdao", "nlp:aerospace system", "nlp:aerospace engineering", "nlp:engineering management", "wrapper", "nlp:computer aided design", "aerospace", "mdao", "nlp:design analysi", "C", "nlp:mechanical engineering"], "name": "OpenMDAO: EGADS"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2013-12-04"}, "contact": {"email": "kmarsteller"}, "repositoryURL": "https://github.com/OpenMDAO/SimplePylab", "description": "Simple script to create virtual environment with numpy, scipy, matplotlib and ipython.", "organization": "ARC", "homepageURL": "https://github.com/OpenMDAO/SimplePylab/archive/master.zip", "contributors": ["kmarsteller"], "laborHours": 816, "tags": ["gem", "geometry", "nlp:mars surface", "nlp:sediment", "nlp:solar terrestrial interaction", "python", "openmdao", "nlp:silicate", "nlp:mars (planet)", "nlp:tectonic", "nlp:planetary evolution", "mdao", "nlp:biological evolution", "nlp:mineralogy", "nlp:mechanical property"], "name": "OpenMDAO: SimplePylab"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2013-12-04"}, "contact": {"email": "JustinSGray"}, "repositoryURL": "https://github.com/OpenMDAO/EngSketchPad", "description": "ESP: The Engineering Sketch Pad.", "organization": "ARC", "homepageURL": "https://github.com/OpenMDAO/EngSketchPad/archive/master.zip", "contributors": ["JustinSGray"], "laborHours": 48432, "tags": ["nlp:stability", "python", "openmdao", "nlp:conference", "nlp:systems engineering", "nlp:circuit", "nlp:reliability", "nlp:environment", "nlp:boundary layer", "nlp:production engineering", "mdao", "nlp:radiation"], "name": "OpenMDAO: EngSketchPad"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2017-11-09"}, "contact": {"email": "cullo7"}, "repositoryURL": "https://github.com/nasa/RVLib", "description": "The RandomVariable Library is an C++ open source library for representing statistical uncertainty in a precise, readable, and usable manner. Value uncertainty can be represented with a parametric distribution such as Gaussian or a nonparametric distribution such as a weighted sample set. The library enables sampling from a parametric or fitting to a parametric distribution. Calculations may also be performed on multiple RandomVariable objects by sampling/overlaying techniques.", "organization": "ARC", "homepageURL": "https://github.com/nasa/RVLib/archive/master.zip", "contributors": ["cullo7", "shankarsankararaman", "teubert"], "laborHours": 544, "tags": ["nlp:normal density function", "c++", "nlp:computation", "nlp:probability theory", "nlp:independent variable", "statistics", "nlp:set theory", "library", "nlp:object-oriented programming", "nlp:estimating", "nlp:statistical distribution", "uncertainty", "nlp:random variable", "nlp:random processe"], "name": "C++ Random Variable Library"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2017-12-08"}, "contact": {"email": "jrwelstead"}, "repositoryURL": "https://github.com/nasa/openvsp3plugin", "description": "The OpenVSP3Plugin is a JAVA software tool that allows for the interface between OpenVSP and an analysis framework such as Phoenix Integration\u2019s ModelCenter or the NASA developed OpenMDAO software. The OpenVSP3Plugin is designed to work on any computer desktop platform (Mac, Linux, and Windows) that has a local installation of JAVA.", "organization": "LaRC", "homepageURL": "https://github.com/nasa/openvsp3plugin", "contributors": ["jrwelstead", "jfenbert"], "laborHours": 1392, "tags": ["OpenVSP", "nlp:human-computer interface", "nlp:interface", "Geometry", "nlp:software engineering", "nlp:computer program", "nlp:software development tool", "nlp:unix (operating system)", "nlp:computer", "OpenMDAO", "ModelCenter", "nlp:applications programs (computers)", "nlp:java (programming language)", "nlp:computer programming"], "name": "OpenVSP3Plugin"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2016-06-23"}, "contact": {"email": "larc-sra@mail.nasa.gov"}, "repositoryURL": "https://github.com/NASA-DEVELOP/CBCHI", "description": "Chesapeake Bay Chlorophyll Hotspot Identifier (CBCHI) takes in raw Landsat 8 surface reflectance products and produces two maps to be opened in ArcMap that can be used to identify chlorophyll hotspots. It also creates a true color image.", "organization": "LaRC", "homepageURL": "https://software.nasa.gov/software/LAR-18794-1", "contributors": ["larc-sra@mail.nasa.gov", "kdottiemo"], "laborHours": 64, "tags": ["nlp:reflectance", "nlp:color", "nlp:photomapping", "nlp:satellite imagery", "nlp:surface propertie", "nlp:image processing", "chlorophyll", "nlp:thematic mapping", "nlp:image analysi", "ArcMap", "Landsat 8", "nlp:landsat satellite", "nlp:chlorophyll", "Chesapeake Bay"], "name": "Chesapeake Bay Chlorophyll Hotspot Identifier (CBCHI)"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2018-07-16"}, "contact": {"email": "tclune"}, "repositoryURL": "https://github.com/Goddard-Fortran-Ecosystem/gFTL", "description": "This project provides Fortran templates for defining software containers.   Of necessity the capabilities are a bit manual as compared to C++ STL, but still quite useful.  Container types supported for now are Vector, Set, and Map.   Contained objects can be specified as any intrinsic type or derived type.   This includes deferred length strings and/or unlimited polymorphic entities.   The container can contain a single static type or allow for subtypes.   In the polymorphic case, the container can either keep deep copies (allocatable) or shallow references (pointer).", "organization": "GSFC", "homepageURL": "https://github.com/Goddard-Fortran-Ecosystem/gFTL/wiki", "contributors": ["tclune", "doronf-cortica"], "laborHours": 6832, "tags": ["Templates", "nlp:mapping", "nlp:manual", "nlp:string theory", "nlp:c++ (programming language)", "Containers", "nlp:library", "nlp:template", "nlp:software development tool", "nlp:computer program", "Fortran", "nlp:object-oriented programming", "nlp:computer programming"], "name": "The Goddard Fortran Template Library", "languages": ["Fortran"]}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2017-12-01"}, "contact": {"email": "JordanRHiggins"}, "repositoryURL": "https://github.com/nasa/SAFE-DART", "description": "Software Architecture Framework for Extensibility using Dynamic Assembly of Reflective Types (SAFE-DART) is a framework for Qt-based C++ applications which simplifies the process of writing modular object-oriented code.", "organization": "GRC", "homepageURL": "https://github.com/nasa/SAFE-DART", "contributors": ["JordanRHiggins"], "laborHours": 960, "tags": ["nlp:programming environment", "Framework", "nlp:c++ (programming language)", "nlp:architecture (computers)", "nlp:software engineering", "Qt", "nlp:computer programming", "nlp:software development tool", "C++", "nlp:applications programs (computers)", "nlp:computer program", "nlp:object-oriented programming", "nlp:c (programming language)"], "name": "SAFE-DART"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2018-01-18"}, "contact": {"email": "tjlang"}, "repositoryURL": "https://github.com/nasa/ISS_Camera_Geolocate", "description": "Python software library that facilitates the geolocation of photographs and video frames from the International Space Station (ISS).", "organization": "MSFC", "homepageURL": "https://github.com/nasa/ISS_Camera_Geolocate/wiki", "contributors": ["tjlang"], "laborHours": 384, "tags": ["nlp:video communication", "nlp:camera", "Cameras", "Earth Science", "nlp:video signal", "Meteorology", "Photographs", "nlp:software engineering", "nlp:library", "Toolkit", "nlp:photography", "nlp:ccd camera", "nlp:aerial photography", "nlp:computer program", "ISS", "nlp:international space station"], "name": "ISS Camera Geolocate"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2018-01-30"}, "contact": {"email": "scspiegel"}, "repositoryURL": "https://github.com/nasa/gfr", "description": "GFR (Glenn Flux Reconstruction) is a high-order computational fluid dynamics (CFD) Fortran code for large-eddy simulations. It is based on the simple and efficient flux reconstruction method and accurate to arbitrary order through a user-supplied input parameter. It is currently capable of using unstructured grids containing quadrilateral and hexahedra elements. The current release only supports UNIX-like operating systems.", "organization": "GRC", "homepageURL": "https://github.com/nasa/gfr", "contributors": ["scspiegel"], "laborHours": 38464, "tags": ["nlp:grid generation (mathematics)", "nlp:computational fluid dynamic", "nlp:simulation", "nlp:computerized simulation", "nlp:finite element method", "LES", "nlp:digital simulation", "nlp:unix (operating system)", "CFD", "nlp:unstructured grids (mathematics)", "nlp:computational grid", "nlp:computer program", "Fortran", "Flux Reconstruction"], "name": "GFR", "languages": ["Fortran"]}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2018-03-08"}, "contact": {"email": "Charles Thompson"}, "repositoryURL": "https://github.com/nasa/MISR-View", "description": "misr_view is a graphical user interface-driven display and analysis tool for use with MISR files that use the HDF-EOS 'grid' interface. The display and analysis tools include simultaneous display of several data planes through color assignment, contrast enhancement, pseudo coloring, data value query, image rotation, creation of stereo anaglyphs, zooming, linked analysis and view windows, vector overlays and map projections.", "organization": "JPL", "homepageURL": "http://misr.jpl.nasa.gov/", "contributors": ["Charles Thompson", "Jeffery Hall"], "laborHours": 15920, "tags": ["nlp:color", "Visualization", "Earth Science", "Analysis", "nlp:human-computer interface", "nlp:computer graphic", "nlp:image enhancement", "nlp:stereophotography", "nlp:stereoscopy", "nlp:color photography", "nlp:graphical user interface", "nlp:image processing", "nlp:display device"], "name": "MISR View", "languages": ["IDL"]}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2018-03-13"}, "contact": {"email": "Lewis.J.Mcgibbney@jpl.nasa.gov"}, "repositoryURL": "http://senssoft.incubator.apache.org/releases/", "description": "Apache SensSoft is a user activity logging and analytics system that enables developers to instrument and extract design and user insights from their applications. SensSoft incorporates a number of components that work together to provide user-experience researchers, project managers and software developers insights about how web applications are used. UserALE.js is an open source tool to quickly and efficiently instrument a JavaScript frontend application.", "organization": "JPL", "homepageURL": "http://senssoft.incubator.apache.org/", "contributors": ["Lewis.J.Mcgibbney@jpl.nasa.gov"], "laborHours": 576, "tags": ["Analytics", "nlp:human-computer interface", "nlp:software engineering", "nlp:systems engineering", "nlp:software development tool", "nlp:computer systems program", "Logging", "Instrumentation", "nlp:applications programs (computers)", "nlp:project management", "nlp:computer program", "nlp:design analysi", "nlp:computer programming"], "name": "Apache SensSoft (Incubating) UserALE.js", "languages": ["JavaScript"]}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2018-03-13"}, "contact": {"email": "Lewis.J.Mcgibbney@jpl.nasa.gov"}, "repositoryURL": "https://github.com/ESIPFed/sweet", "description": "Apache SensSoft is a user activity logging and analytics system that enables developers to instrument and extract design and user insights from their applications. SensSoft incorporates a number of components that work together to provide user-experience researchers, project managers and software developers insights about how web applications are used. UserALE.js is an open source tool to quickly and efficiently instrument a JavaScript frontend application.", "organization": "JPL", "homepageURL": "https://github.com/ESIPFed/sweet", "contributors": ["Lewis.J.Mcgibbney@jpl.nasa.gov"], "laborHours": 96, "tags": ["nlp:evaluation", "nlp:computer programming", "nlp:software engineering", "nlp:systems engineering", "nlp:software development tool", "nlp:computer systems program", "Ontology", "nlp:applications programs (computers)", "nlp:project management", "nlp:computer program", "nlp:design analysi", "Earth System Science"], "name": "SWEET Ontology Suite", "languages": ["W3C Turtle"]}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2017-11-16"}, "contact": {"email": "jordan.s.vaa@nasa.gov"}, "repositoryURL": "https://github.com/NASA-DEVELOP/LCD", "description": "The Normalized Difference Vegetation Index (NDVI) for the study time period is calculated and then compared to the maximum and minimum NDVI from a baseline range of years in order to calculate Relative Greenness (RG). The change in RG from the previous year is found, and this allows the user to identify abrupt change in vegetation.", "organization": "LaRC", "homepageURL": "https://github.com/NASA-DEVELOP/LCD", "contributors": ["jordan.s.vaa@nasa.gov"], "laborHours": 500, "tags": ["Data & Image Processing", "nlp:time dependence", "nlp:change detection", "nlp:refractivity", "nlp:time measurement", "nlp:vegetation", "nlp:vegetative index", "nlp:finite difference theory"], "name": "LCD"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2018-03-19"}, "contact": {"email": "JDilger"}, "repositoryURL": "https://github.com/NASA-DEVELOP/LUCT", "description": "We used the Google Earth Engine Code interface to create a classification of land use on the United States Virgin Islands (USVI). We used six classes: water, low density residential, high-density residential, forest/shrub, agriculture and barren. We included DEM, classification points, and landsat imagery bands to analyze the imagery.", "organization": "LaRC", "homepageURL": "https://github.com/NASA-DEVELOP/LUCT", "contributors": ["JDilger"], "laborHours": 208, "tags": ["nlp:forest", "Data & Image Processing", "nlp:thematic mapping", "nlp:earth surface", "nlp:remote sensing", "nlp:water", "nlp:land use", "nlp:united state", "nlp:classification", "nlp:imagery", "nlp:vegetation"], "name": "LUCT", "languages": ["JavaScript"]}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2018-01-08"}, "contact": {"email": "rba.eos@gmail.com"}, "repositoryURL": "https://github.com/NASA-DEVELOP/SET", "description": "Beta version of the Skyglow Estimation Toolbox. Documentation -> https://nasa-develop.github.io/SET/", "organization": "LaRC", "homepageURL": "https://github.com/NASA-DEVELOP/SET", "contributors": ["rba.eos@gmail.com", "Stanley Yu", "kenton.w.ross@nasa.gov", "Margaret Mulhern"], "laborHours": 20320, "tags": ["Data & Image Processing", "nlp:computation", "nlp:image", "nlp:stability", "nlp:simulation", "nlp:systems analysi", "nlp:set theory", "nlp:estimate", "nlp:estimating", "nlp:state estimation", "nlp:fatigue (materials)"], "name": "SET"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2018-03-02"}, "contact": {"email": "jordan.s.vaa@nasa.gov"}, "repositoryURL": "https://github.com/NASA-DEVELOP/COVER", "description": "This code develops calibration models using linear regression models with in-situ field data. The calibration models are then used to predict biomass (log), nitrogen percent, and nitrogen content for Landsat images from 2006-2016. Model results and data tables are output as separate files for each field season (i.e. winter and spring seasons).", "organization": "LaRC", "homepageURL": "https://github.com/NASA-DEVELOP/COVER", "contributors": ["jordan.s.vaa@nasa.gov"], "laborHours": 90, "tags": ["Data & Image Processing", "nlp:satellite imagery", "nlp:radiometric correction", "nlp:image analysi", "nlp:remote sensing", "nlp:hydrology model", "nlp:regression analysi", "nlp:landsat satellite", "nlp:calibrating", "nlp:image processing", "nlp:biomas"], "name": "COVER"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2018-02-02"}, "contact": {"email": "jordan.s.vaa@nasa.gov"}, "repositoryURL": "https://github.com/NASA-DEVELOP/WRIT", "description": "For the AcoFixDual_Tool: Geolocates and rescales ACOLITE output to make it useful in ArcMap.", "organization": "LaRC", "homepageURL": "https://github.com/NASA-DEVELOP/WRIT", "contributors": ["jordan.s.vaa@nasa.gov"], "laborHours": 40, "tags": ["Data & Image Processing", "nlp:electron", "nlp:stability", "nlp:fabrication", "nlp:oscillator", "nlp:crystal defect", "nlp:conference", "nlp:energy conversion", "nlp:electron transition", "nlp:performance test", "nlp:direct current"], "name": "WRIT"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2017-11-17"}, "contact": {"email": "jordan.s.vaa@nasa.gov"}, "repositoryURL": "https://github.com/NASA-DEVELOP/SAVeTrEE", "description": "SAVeTrEE is a script within Google Earth Engine for classifying areas of vegetation mortality. It prompts the user for a year, duration, and spectral index for which a mortality map should be produced, then fits a trend line to an imagery time sequence of vegetative spectral index values calculated from Landsat multispectral data.", "organization": "LaRC", "homepageURL": "https://github.com/NASA-DEVELOP/SAVeTrEE", "contributors": ["jordan.s.vaa@nasa.gov"], "laborHours": 160, "tags": ["Data & Image Processing", "nlp:mapping", "nlp:satellite imagery", "nlp:vegetative index", "nlp:earth surface", "nlp:remote sensing", "nlp:landsat satellite", "nlp:earth (planet)", "nlp:map", "nlp:vegetation", "nlp:earth resources program"], "name": "SAVeTrEE"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2017-11-20"}, "contact": {"email": "jordan.s.vaa@nasa.gov"}, "repositoryURL": "https://github.com/NASA-DEVELOP/RIFRAF", "description": "This software was created to address concerns of fire managers in the Missouri River Basin. Previously, fire managers inferred a regional fire risk from separate sources, (i.e. temperature maps, drought indices, and precipitation averages).", "organization": "LaRC", "homepageURL": "https://github.com/NASA-DEVELOP/RIFRAF", "contributors": ["jordan.s.vaa@nasa.gov"], "laborHours": 100, "tags": ["Data & Image Processing", "nlp:river", "nlp:fire prevention", "nlp:risk", "nlp:fire", "nlp:structural basin", "nlp:precipitation", "nlp:refractivity", "nlp:computer program", "nlp:drought", "nlp:river basin"], "name": "RIFRAF"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2017-08-30"}, "contact": {"email": "jordan.s.vaa@nasa.gov"}, "repositoryURL": "https://github.com/NASA-DEVELOP/HAE", "description": "Using the cloud-based computing power of Google Earth Engine (GEE), the Hydrologic Anomaly Index (HAE) is capable of uploading and analyzing large amounts of Earth observation climate data for the purpose of hydrologic analysis and monitoring. The end-user will be able to pull from and modify a library of scripts that are stored in Earth Engine, as well as upload and access data stored on a private data catalog. The final stage of development of the tool will include a more user-friendly application built using Google\u2019s App Engine, in which users will be able to display data products and interactive maps.", "organization": "LaRC", "homepageURL": "https://github.com/NASA-DEVELOP/HAE", "contributors": ["jordan.s.vaa@nasa.gov"], "laborHours": 500, "tags": ["Data & Image Processing", "nlp:anomaly", "nlp:earth observations (from space)", "nlp:catalogs (publications)", "nlp:library", "nlp:satellite observation", "nlp:engine monitoring instrument", "nlp:applications programs (computers)", "nlp:climate", "nlp:climatology", "nlp:clouds (meteorology)"], "name": "HAE"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2017-08-07"}, "contact": {"email": "jordan.s.vaa@nasa.gov"}, "repositoryURL": "https://github.com/NASA-DEVELOP/CCROP", "description": "Cover Crop Remotely Observed Performance (CCROP): The Maryland Department of Agriculture (MDA) is interested in verifying winter cover crop implementation and analyzing cover crop productivity using satellite imagery.", "organization": "LaRC", "homepageURL": "https://github.com/NASA-DEVELOP/CCROP", "contributors": ["jordan.s.vaa@nasa.gov"], "laborHours": 30, "tags": ["Data & Image Processing", "nlp:crop identification", "nlp:satellite imagery", "nlp:performance prediction", "nlp:productivity", "nlp:crop growth", "nlp:farm crop", "nlp:conference", "nlp:satellite observation", "nlp:winter", "nlp:agriculture"], "name": "CCROP"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2017-08-07"}, "contact": {"email": "jordan.s.vaa@nasa.gov"}, "repositoryURL": "https://github.com/NASA-DEVELOP/FAULT", "description": "Flood Analysis Utilizing Landsat and ArcMap Tools (FAULT): This product was created in an effort to automate flood analysis throughout the Mississippi River Basin.", "organization": "LaRC", "homepageURL": "https://github.com/NASA-DEVELOP/FAULT", "contributors": ["jordan.s.vaa@nasa.gov"], "laborHours": 120, "tags": ["Data & Image Processing", "nlp:river", "nlp:satellite imagery", "nlp:systems analysi", "nlp:structural basin", "nlp:geological fault", "nlp:failure analysi", "nlp:landsat satellite", "nlp:flood", "nlp:river basin", "nlp:water flow"], "name": "FAULT"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2013-12-05"}, "contact": {"email": "jtroberts"}, "repositoryURL": "https://github.com/nasajpl/tiledwms", "description": "Tiled WMS is a software package consisting of image formatting and serving modules which facilitate the deployment of a web service capable of efficiently serving standards-based requests for georeferenced raster imagery at multiple spatial resolutions including, but not limited to, full spatial resolution. The software was originally developed at the Jet Propulsion Laboratory (JPL) to serve global daily composites of MODIS imagery. Since then, it has been deployed and repurposed in other installations, including at the Physical Oceanography Distributed Active Archive Center (PO.DAAC) in support of the State of the Oceans (SOTO) visualization tool (http://podaac-tools.jpl.nasa.gov/soto/), the Lunar Mapping and Modeling Project (LMMP) (http://lmmp.nasa.gov), and GIBS. Tiled WMS has also been used to serve data from JPL for NASA WorldWind and to produce movies at the Hayden Planetarium.", "organization": "JPL", "homepageURL": "https://github.com/nasajpl/tiledwms", "contributors": ["jtroberts", "jeffreyrhall"], "laborHours": 2144, "tags": ["Global Imagery Browse Services", "nlp:scientific visualization", "nlp:image analysi", "nlp:software engineering", "nlp:computer program", "nlp:software development tool", "nlp:imagery", "nlp:applications programs (computers)", "nlp:high resolution", "GIBS", "nlp:image processing", "nlp:deployment"], "name": "tiledwms"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2018-04-12"}, "contact": {"email": "wmb@waynemosesburke.com"}, "repositoryURL": "https://github.com/nasa-jpl/T-ENTacle", "description": "Extracting structured information from PDFs - and later, diagrams", "organization": "JPL", "homepageURL": "https://github.com/nasa-jpl/T-ENTacle", "contributors": ["wmb@waynemosesburke.com", "adidier17", "asitang", "vlall"], "laborHours": 2496, "tags": ["nlp:petrology", "nlp:mars surface", "nlp:mineral", "nlp:meteoritic composition", "Extract information", "nlp:planetary geology", "nlp:geochronology", "nlp:tectonic", "nlp:magma", "nlp:mineralogy", "nlp:mechanical property"], "name": "T-ENTacle"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2017-09-12"}, "contact": {"email": "wmb@waynemosesburke.com"}, "repositoryURL": "https://github.com/nasa-jpl/ASSESS", "description": "Automatic Semantic Search Engine for Suitable Standards (ASSESS)", "organization": "JPL", "homepageURL": "https://github.com/nasa-jpl/ASSESS", "contributors": ["wmb@waynemosesburke.com", "adidier17", "giuseppetotaro"], "laborHours": 8208, "tags": ["nlp:gas turbine engine", "nlp:computation", "nlp:searching", "Automatic", "nlp:engine test", "nlp:semantic", "nlp:aircraft engine", "nlp:engine monitoring instrument", "nlp:engine design", "nlp:optimization", "Search Engine", "nlp:linguistic", "Semantic"], "name": "ASSESS"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2018-04-16"}, "contact": {"email": "Elliott Liggett"}, "repositoryURL": "https://github.com/nasa-jpl/LiveView", "description": "LiveView2 is a Qt frontend GUI for cuda_take, it displays focal plane data and basic analysis (such as the std. dev, dark subtraction, FFT, Spectral Profile, and Video Savant*-like* playback). Plots are implemented using the QCustomPlot library, which generates live color maps, bar graphs, and line graphs within the Qt C++ environment.", "organization": "JPL", "homepageURL": "https://github.com/nasa-jpl/LiveView", "contributors": ["Elliott Liggett", "jackiryan"], "laborHours": 27072, "tags": ["nlp:on-line system", "nlp:graphs (charts)", "nlp:graph theory", "nlp:spectrum analysi", "nlp:mapping", "focal plane", "nlp:computer graphic", "nlp:data processing", "Qt", "nlp:digital data", "C++", "Qt frontend GUI", "nlp:plotting", "nlp:map", "QCustomPlot"], "name": "LiveView"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2017-08-02"}, "contact": {"email": "StevenJenkinsJPL"}, "repositoryURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.ontologies.analysis", "description": "The ontology analysis workflow is intended for validating ontologies based on the core IMCE ontologies. It uses OWL ontologies (TODO: OML AS INPUT) as input, and produces test reports in the quasi-standard JUnit format. The following will walk through the environment setup, and give instructions on how to run the workflow (a) locally and (b) on a CI system such as Jenkins.", "organization": "JPL", "homepageURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.ontologies.analysis", "contributors": ["StevenJenkinsJPL", "sjiherzig"], "laborHours": 336, "tags": ["Jenkins", "JUint", "Java 8 (JDK)", "local", "ontology", "nlp:systems analysi", "nlp:environment simulation", "ontology analysis", "OWL ontologies", "nlp:systems engineering", "nlp:computer program", "nlp:performance test", "SBT", "Make", "JRuby"], "name": "Ontology Analysis"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2018-01-31"}, "contact": {"email": "StevenJenkinsJPL"}, "repositoryURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.ontologies.public", "description": "JPL's IMCE ontologies for Model-Based Systems Engineering", "organization": "JPL", "homepageURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.ontologies.public", "contributors": ["StevenJenkinsJPL", "sjiherzig", "NicolasRouquette"], "laborHours": 177232, "tags": ["ontology", "engineering", "nlp:systems engineering", "nlp:aircraft model", "nlp:engineering management", "nlp:", "systems engineering", "nlp:mathematical model", "nlp:engineering", "nlp:model", "model-based", "nlp:reliability", "nlp:spacecraft model", "nlp:optimization"], "name": "Ontology Public"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2018-04-14"}, "contact": {"email": "StevenJenkinsJPL"}, "repositoryURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.ontologies.workflow", "description": "The ontology processing and profile generation workflow is intended for validating and generating MagicDraw-compatible SysML profiles for core IMCE ontologies. It uses OWL ontologies (TODO: OML AS INPUT) as input. The following will walk through the environment setup, and give instructions on how to run the workflow (a) locally and (b) on a CI system such as Jenkins.", "organization": "JPL", "homepageURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.ontologies.workflow", "contributors": ["StevenJenkinsJPL", "sjiherzig", "NicolasRouquette", "bsatoriu"], "laborHours": 5536, "tags": ["nlp:data processing equipment", "nlp:data processing", "nlp:environment simulation", "nlp:parallel processing (computers)", "ontology processing", "OWL ontologies", "SysML profiles", "nlp:systems engineering", "nlp:signal processing", "nlp:reactor core", "MagicDraw-compatible", "ontology profile generation", "nlp:onboard data processing", "nlp:image processing", "nlp:temperature profile"], "name": "Ontology Workflow"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2018-04-12"}, "contact": {"email": "NicolasRouquette"}, "repositoryURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml", "description": "Eclipse Tycho-based organization of the Ontological Modeling Language (OML)", "organization": "JPL", "homepageURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml", "contributors": ["NicolasRouquette", "dyates"], "laborHours": 151232, "tags": ["nlp:eclipse", "nlp:stabilized platform", "nlp:programming language", "nlp:space platform", "nlp:language programming", "Eclipse Tycho-based organization", "OML", "nlp:core", "nlp:circuit", "nlp:language", "Ontological Modeling Language", "nlp:machine oriented language", "nlp:solar eclips"], "name": "Ontological Modeling Language (OML) Platform & Core Features"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2018-04-11"}, "contact": {"email": "NicolasRouquette"}, "repositoryURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml.tables", "description": "Definition of the normalized schema tables for JPL's Ontological Modeling Framework (OMF) at https://jpl-imce.github.io/gov.nasa.jpl.imce.oml.tables/.", "organization": "JPL", "homepageURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml.tables", "contributors": ["NicolasRouquette"], "laborHours": 16400, "tags": ["nlp:data base", "nlp:computation", "nlp:language programming", "nlp:natural language (computers)", "OML", "nlp:tables (data)", "normalized schema tables", "nlp:object-oriented programming", "nlp:data base management system", "nlp:language", "Ontological Modeling Framework (OMF)", "nlp:machine oriented language", "nlp:linguistic"], "name": "Normalized Database Schema Tables for JPL's Ontological Modeling Language (OML)"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2018-04-11"}, "contact": {"email": "NicolasRouquette"}, "repositoryURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml.development.generators", "description": "The Xcore OMF metamodel/schema is intended to be a single source for several derived artifacts whose contents is a projection of the OMF metamodel/schema. Among such artifacts, the cross-platform normalized database schema tables provide a single source specification for normalized database schema tables cross-compiled for several environments, including JVM (pure Java, pure Scala, mixed Java+Scala), JavaScript (Node.js), mixed (ScalaJS).", "organization": "JPL", "homepageURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml.development.generators", "contributors": ["NicolasRouquette"], "laborHours": 10336, "tags": ["nlp:data base", "nlp:programming environment", "nlp:specification", "nlp:heat source", "OML", "nlp:java (programming language)", "nlp:tables (data)", "nlp:light source", "nlp:environment simulation", "cross-platform", "tables", "normalized database schema", "Ontological Modeling Framework (OMF)", "nlp:point source", "nlp:radiation source"], "name": "Xtend generators for JPL's Ontological Modeling Framework (OMF)"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2018-04-10"}, "contact": {"email": "NicolasRouquette"}, "repositoryURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.xml.catalog.scope", "description": "This is an enhancement of the Apache XML Commons Resolver library implementation of the OASIS XML Catalog 1.1 specification. OML uses an OASIS XML Catalog to establish a mapping between external URI references (i.e., http URIs) and corresponding local URI references (i.e., file URIs). Stanford's Protege Desktop uses OASIS XML Catalogs for the same purpose.", "organization": "JPL", "homepageURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.xml.catalog.scope", "contributors": ["NicolasRouquette"], "laborHours": 288, "tags": ["nlp:file maintenance (computers)", "Apache", "nlp:specification", "Commons", "nlp:catalogs (publications)", "nlp:computer aided mapping", "nlp:library", "nlp:equipment specification", "XML", "Resolver", "nlp:geodesy", "nlp:standard", "Library", "nlp:document markup language", "nlp:information retrieval"], "name": "gov.nasa.jpl.imce.xml.catalog.scope"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2018-03-08"}, "contact": {"email": "NicolasRouquette"}, "repositoryURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml.frameless", "description": "This Scala library provides a strongly typed API for processing Ontological Modeling Language data on Apache Spark using the expressive type extensions provided by Frameless.", "organization": "JPL", "homepageURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml.frameless", "contributors": ["NicolasRouquette"], "laborHours": 7072, "tags": ["nlp:computation", "nlp:language", "nlp:language programming", "nlp:high level language", "nlp:tables (data)", "nlp:data acquisition", "Scala", "nlp:data reduction", "nlp:library", "API", "Ontological Modeling Framework", "Library", "nlp:machine oriented language", "OMF", "nlp:linguistic"], "name": "Scala/Frameless-based API for the Ontological Modeling Language"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2018-03-08"}, "contact": {"email": "NicolasRouquette"}, "repositoryURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.omf.scala.binding.owlapi", "description": "The OWL API binding for OMF implements the OMF Core functional API using the OWL API. This particular binding captures the conventions and restrictions on the use of OWL2-DL adopted for the development of JPL's Integrated Model-Centric Engineering (IMCE) ontologies.", "organization": "JPL", "homepageURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.omf.scala.binding.owlapi", "contributors": ["NicolasRouquette"], "laborHours": 10080, "tags": ["OWL", "OML", "nlp:systems integration", "nlp:systems engineering", "nlp:aircraft model", "nlp:engineering management", "API", "nlp:mathematical model", "nlp:engineering", "nlp:model", "Ontological Modeling Language", "nlp:spacecraft model", "binding", "nlp:product development", "nlp:computer programming"], "name": "OWL API binding for OMF (Ontological Modeling Framework)"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2018-03-08"}, "contact": {"email": "NicolasRouquette"}, "repositoryURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.omf.scala.core", "description": "The OMG core functional API adopts techniques from the field of functional programming languages, particularly Scala, for specifying the vocabulary of ontological modeling as a set of abstract types (that is, no commitment implied or assumed about any implementation of these abstract types) and a set of functional operations on these abstract types (that is, operations in the mathematical sense of pure functions that compute output values based on input values). This functional paradigm for specifying a domain allows a clean separation between the domain of ontological modeling (i.e., the focus of the OMF Core Functional API) from specific bindings for standards-based technology frameworks such as W3C's OWL, OMG's UML/SysML and, potentially, others. More importantly, the functional nature of this OMF Core API allows decoupling algorithms for analyzing, constructing, auditing, verifying, reasoning about OMF ontological models independently of the particular technology in which these ontological models are represented.", "organization": "JPL", "homepageURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.omf.scala.core", "contributors": ["NicolasRouquette"], "laborHours": 4656, "tags": ["nlp:programming language", "nlp:computation", "nlp:algorithm", "nlp:operations research", "ontological models", "nlp:computerized simulation", "functional programming", "API", "nlp:mathematical model", "abstract types", "ontological modeling", "nlp:mathematical programming", "nlp:model", "nlp:linguistic", "nlp:computer programming"], "name": "OMF (Ontological Modeling Framework) Core Functional API"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2018-03-08"}, "contact": {"email": "NicolasRouquette"}, "repositoryURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml.resolver", "description": "This library provides an implementation of the OML Resolver API.", "organization": "JPL", "homepageURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml.resolver", "contributors": ["NicolasRouquette"], "laborHours": 3392, "tags": ["nlp:symbol", "JSON", "serialization", "nlp:computation", "nlp:image", "nlp:stability", "nlp:tables (data)", "nlp:simulation", "ontological models", "nlp:systems analysi", "library", "resolver", "nlp:estimating", "nlp:transmitter", "nlp:fatigue (materials)", "symbol table"], "name": "Symbol table resolver for the JSON serialization of JPL's Ontological Modeling Framework Schema."}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2018-03-01"}, "contact": {"email": "NicolasRouquette"}, "repositoryURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml.doc", "description": "The documentation about the Ontological Modeling Language specification", "organization": "JPL", "homepageURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml.doc", "contributors": ["NicolasRouquette"], "laborHours": 992, "tags": ["nlp:specification", "nlp:programming language", "nlp:language programming", "document", "OML", "nlp:equipment specification", "nlp:computer programming", "nlp:reliability", "nlp:language", "Ontological Modeling Language", "nlp:documentation", "nlp:machine oriented language", "nlp:linguistic"], "name": "JPL's Ontological Modeling Language Specification Document"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2018-02-06"}, "contact": {"email": "NicolasRouquette"}, "repositoryURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.ontologies.fuseki", "description": "Configuration for setting up a Fuseki server for the IMCE ontology workflows", "organization": "JPL", "homepageURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.ontologies.fuseki", "contributors": ["NicolasRouquette", "StevenJenkinsJPL"], "laborHours": 32, "tags": ["server", "nlp:aircraft configuration", "ontology", "nlp:scattering function", "nlp:barium oxide", "configuration", "nlp:systems engineering", "nlp:phosphorus compound", "IMCE", "nlp:missile", "nlp:spacecraft configuration", "Fuseki", "nlp:reliability", "nlp:phase control", "nlp:optimization", "workflow"], "name": "Configuration for setting up a Fuseki server for the IMCE ontology workflows"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2017-12-28"}, "contact": {"email": "NicolasRouquette"}, "repositoryURL": "https://github.com/JPL-IMCE/imce.third_party.other_scala_libraries", "description": "Aggregate of Akka, Play, Scalaz, ScalaCheck, ScalaTest, Spray libraries", "organization": "JPL", "homepageURL": "https://github.com/JPL-IMCE/imce.third_party.other_scala_libraries", "contributors": ["NicolasRouquette"], "laborHours": 32, "tags": ["nlp:aggregate", "nlp:stability", "libraries", "aggregate", "nlp:library", "library", "nlp:circuit", "nlp:spray characteristic", "nlp:reliability", "nlp:environment", "nlp:boundary layer", "nlp:radiation", "nlp:sprayer"], "name": "IMCE Third-Party Other Scala Libraries"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2017-11-29"}, "contact": {"email": "NicolasRouquette"}, "repositoryURL": "https://github.com/JPL-IMCE/imce.sbt.plugin", "description": "This sbt plugin aggregates a few community plugins used across several projects in JPL's Integrated Model-Centric Engineering initiative and in OMG's Tool Infrastructure Working Group. There is an inherent tradeoff between maintaining slight variations of similar build configurations across multiple projects (i.e. no common sbt plugin) and defining a common sbt plugin reused across multiple projects to simplify their build configurations. Conceptually, the scope and purpose of this sbt plugin is very similar to the elegant nice-sbt-settings. Practically, nice-sbt-settings is indeed nicer.", "organization": "JPL", "homepageURL": "https://github.com/JPL-IMCE/imce.sbt.plugin", "contributors": ["NicolasRouquette", "sjiherzig", "dwijnand"], "laborHours": 688, "tags": ["nlp:configuration management", "aggregate", "nlp:tradeoff", "nlp:systems engineering", "nlp:aircraft model", "nlp:engineering management", "community plugin", "nlp:mathematical model", "nlp:engineering", "nlp:model", "nlp:systems integration", "sbt plugin", "nlp:java (programming language)"], "name": "JPL's IMCE SBT Plugin for Java, Scala, AspectJ projects"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2017-10-18"}, "contact": {"email": "NicolasRouquette"}, "repositoryURL": "https://github.com/JPL-IMCE/imce.third_party.owlapi_libraries", "description": "This project builds an aggregate of the OWL API published by several organizations, including: net.sourceforge.owlapi (the official OWL API as the de-facto reference implementation of the W3C OWL Functional Syntax Specification), and org.openrdf.sesame (the Eclipse RDF4J Sesame implementation of W3C Resource Description Framework, RDF)", "organization": "JPL", "homepageURL": "https://github.com/JPL-IMCE/imce.third_party.owlapi_libraries", "contributors": ["NicolasRouquette"], "laborHours": 16, "tags": ["nlp:syntax", "nlp:specification", "nlp:functional design specification", "nlp:earth resource", "libraries", "aggregate", "nlp:systems engineering", "nlp:organization", "nlp:resource allocation", "nlp:standard", "nlp:project management", "nlp:computer programming"], "name": "IMCE Third-Party OWLAPI Libraries"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2017-10-06"}, "contact": {"email": "NicolasRouquette"}, "repositoryURL": "https://github.com/JPL-IMCE/imce.third_party.scala_graph_libraries", "description": "This project builds an aggregates of several Scala libraries for graph data structures published by several organizations: com.assembla.scala-incubator (In-memory graph library intended to fit seamlessly into the Scala Collection Library), and net.liftweb (The JSON library from the Lift web framework for Scala).", "organization": "JPL", "homepageURL": "https://github.com/JPL-IMCE/imce.third_party.scala_graph_libraries", "contributors": ["NicolasRouquette"], "laborHours": 32, "tags": ["nlp:data base", "nlp:graphs (charts)", "nlp:graph theory", "nlp:aggregate", "libraries", "aggregate", "nlp:computer storage device", "nlp:library", "nlp:lift", "graph", "nlp:data storage", "nlp:memory (computers)", "scala", "nlp:data acquisition"], "name": "IMCE Third-Party Scala Graph Libraries"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2017-09-28"}, "contact": {"email": "none listed"}, "repositoryURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.ontologies.analyzed", "description": "There is no description for this software", "organization": "JPL", "homepageURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.ontologies.analyzed", "contributors": ["none listed"], "laborHours": 96, "tags": ["nlp:computer program integrity", "nlp:failure", "nlp:software engineering", "nlp:systems engineering", "nlp:software development tool", "nlp:computer systems program", "nlp:reliability", "ontologies", "nlp:computer program", "nlp:optimization", "nlp:computer programming"], "name": "gov.nasa.jpl.imce.ontologies.loadprod"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2017-03-01"}, "contact": {"email": "NicolasRouquette"}, "repositoryURL": "https://github.com/JPL-IMCE/imce.dynamic_scripts.magicdraw.plugin", "description": "The IMCE Dynamic Scripts plugin is compatible with any edition of MagicDraw 18.0.", "organization": "JPL", "homepageURL": "https://github.com/JPL-IMCE/imce.dynamic_scripts.magicdraw.plugin", "contributors": ["NicolasRouquette"], "laborHours": 4992, "tags": ["scripts", "dynamic", "nlp:stability", "plugin", "nlp:dynamic structural analysi", "nlp:radiation", "MagicDraw", "nlp:conference", "IMCE", "nlp:circuit", "nlp:reliability", "nlp:environment", "nlp:boundary layer", "nlp:fluid dynamic"], "name": "IMCE Dynamic Scripts plugin for MagicDraw 18"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2018-05-01"}, "contact": {"email": "lewis.j.mcgibbney@jpl.nasa.gov"}, "repositoryURL": "http://www.apache.org/dyn/closer.lua/climate/1.3.0/climate-1.3.0-rc1.zip", "description": "Apache Open Climate Workbench is an effort to develop software that performs climate model evaluation using model outputs from a variety of different sources the Earth System Grid Federation, the Coordinated Regional Climate Downscaling Experiment, the U.S. National Climate Assessment and the North American Regional Climate Change Assessment Program and temporal/spatial scales with remote sensing data from NASA, NOAA and other agencies. The toolkit includes capabilities for rebinning, metrics computation and visualization.", "organization": "JPL", "homepageURL": "http://www.apache.org/dyn/closer.lua/climate/1.3.0/climate-1.3.0-rc1.zip", "contributors": ["lewis.j.mcgibbney@jpl.nasa.gov"], "laborHours": 15232, "tags": ["model", "nlp:scientific visualization", "earth", "nlp:climate change", "nlp:remote sensing", "nlp:nasa program", "downscaling", "nlp:atmospheric model", "nlp:computer systems program", "climate change", "climate", "nlp:climate model", "nlp:climate", "nlp:computer program", "assessment", "nlp:earth science", "NOAA"], "name": "Apache Open Climate Workbench 1.3.0"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2017-09-05"}, "contact": {"email": "NicolasRouquette"}, "repositoryURL": "https://github.com/JPL-IMCE/imce.dynamic_scripts.magicdraw.launcher", "description": "This launcher application follows the guidelines for starting MagicDraw 18.5 in a configuration for running MagicDraw 18.5 with the IMCE DynamicScripts plugin for MagicDraw 18.5. installed outside of the MagicDraw installation folder.", "organization": "JPL", "homepageURL": "https://github.com/JPL-IMCE/imce.dynamic_scripts.magicdraw.launcher", "contributors": ["NicolasRouquette"], "laborHours": 208, "tags": ["nlp:installing", "nlp:aircraft configuration", "plugin", "nlp:vibration", "MagicDraw", "nlp:systems engineering", "nlp:aerodynamic configuration", "DynamicScripts", "IMCE", "nlp:spacecraft configuration", "launcher", "nlp:reliability", "nlp:missile", "nlp:launcher", "nlp:optimization"], "name": "Launcher for IMCE's MagicDraw DynamicScripts Plugin"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2017-02-28"}, "contact": {"email": "NicolasRouquette"}, "repositoryURL": "https://github.com/JPL-IMCE/imce.magicdraw.library.enhanced_api#imce-magicdraw-library-for-aspectj-based-md-api-enhancements", "description": "To enable these enhancements at runtime in MD, this library uses the so-called load-time weaving strategy. AspectJ is an aspect-oriented extension to Java. Because AspectJ operates at the level of bytecode, it is also applicable to other languages like Scala that compile to the JVM.", "organization": "JPL", "homepageURL": "https://github.com/JPL-IMCE/imce.magicdraw.library.enhanced_api#imce-magicdraw-library-for-aspectj-based-md-api-enhancements", "contributors": ["NicolasRouquette"], "laborHours": 176, "tags": ["nlp:high level language", "nlp:time dependence", "nlp:language", "AspectJ", "MagicDraw", "load-time", "weaving", "browser", "enhancement", "nlp:library", "IMCE", "nlp:strategy", "diagram", "nlp:hardware description language", "nlp:response time (computers)", "nlp:java (programming language)", "nlp:machine oriented language", "nlp:loads (forces)"], "name": "IMCE MagicDraw Library for AspectJ-based MD API enhancements"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2017-08-30"}, "contact": {"email": "NicolasRouquette"}, "repositoryURL": "https://github.com/JPL-IMCE/imce.dynamic_scripts.generic_dsl", "description": "A textual DSL for specifying browser, diagram & contextualized actions in a modeling tool. This project defines a tool-neutral, generic DSL for specifying 'dynamic scripts'. A dynamic script specifies the location of a modeling function compiled for the JVM that can be invoked for modeling elements matching the applicability criteria specified in the script. The genericity of this DSL is that the applicability criteria can be specified in terms of references to tool-neutral identifiers of metaclasses, stereotypes and library types and the context where scripts are to be made available to users is specified in terms of generic notions of model browser and diagrams; user-interface notions that are widely common to graphical modeling tools.", "organization": "JPL", "homepageURL": "https://github.com/JPL-IMCE/imce.dynamic_scripts.generic_dsl", "contributors": ["NicolasRouquette"], "laborHours": 480, "tags": ["nlp:human-computer interface", "modeling", "dynamic scripts", "textual", "nlp:dynamic model", "generic", "nlp:finite element method", "tool-neutral", "browser", "nlp:position (location)", "nlp:mathematical model", "nlp:library", "diagram", "nlp:computerized simulation", "nlp:model", "nlp:atmospheric model", "nlp:graphical user interface", "DSL"], "name": "JPL Dynamic Scripts Generic DSL"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2017-08-29"}, "contact": {"email": "NicolasRouquette"}, "repositoryURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.profileGenerator.batch", "description": "This program will execute the profile generator application (gov.nasa.jpl.imce.profileGenerator.application), and will package the results. It depends on both the profile generator application and the ontology bundles produced.", "organization": "JPL", "homepageURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.profileGenerator.batch", "contributors": ["NicolasRouquette", "sjiherzig"], "laborHours": 80, "tags": ["execution", "application", "profile", "nlp:computer program", "nlp:electric generator", "generator", "batch", "nlp:radioactive isotope", "nlp:systems engineering", "nlp:gas generator", "nlp:reliability", "nlp:temperature profile", "nlp:optimization", "nlp:random number"], "name": "Profile Generator - Batch Execution"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2017-06-27"}, "contact": {"email": "NicolasRouquette"}, "repositoryURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.ontologies.processor", "description": "This repository contains the files required for creating a docker image with required software for ontology processing.", "organization": "JPL", "homepageURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.ontologies.processor", "contributors": ["NicolasRouquette"], "laborHours": 128, "tags": ["nlp:file maintenance (computers)", "nlp:architecture (computers)", "nlp:image analysi", "ontology", "nlp:data processing", "nlp:computer programming", "nlp:computer program", "nlp:signal processing", "nlp:software development tool", "nlp:computer systems program", "docker", "processing", "nlp:image processing", "image"], "name": "Ontology Processor"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2017-06-01"}, "contact": {"email": "NicolasRouquette"}, "repositoryURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.ontologies.processor", "description": "This repository provides mapping from OTI models (i.e., OMG Tool-neutral Interface for UML) to generic OMF (Ontological Modeling Framework).", "organization": "JPL", "homepageURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.ontologies.processor", "contributors": ["NicolasRouquette"], "laborHours": 1488, "tags": ["OTI", "Framework", "nlp:dynamic model", "nlp:scale model", "Modeling", "nlp:mapping", "Ontological", "nlp:solid-solid interface", "nlp:model", "UML", "OMF", "mapping", "generic", "tool-neutral", "nlp:atmospheric model", "nlp:software development tool", "nlp:mathematical model", "OMG", "nlp:computerized simulation", "nlp:boundary layer"], "name": "Mapping from OTI models to Generic OMF"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2017-05-09"}, "contact": {"email": "NicolasRouquette"}, "repositoryURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml.core", "description": "This repository provides simplified OML for exercising Xcore/Xtext/Xtend code generation and building using gradle.", "organization": "JPL", "homepageURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml.core", "contributors": ["NicolasRouquette"], "laborHours": 87104, "tags": ["nlp:programming language", "Xtext", "gradle", "Ontological", "Xtend", "OML", "Xcore", "nlp:language", "nlp:language programming", "nlp:coding", "nlp:computer programming", "nlp:reactor core", "Modeling", "Language", "nlp:computer program", "nlp:machine oriented language", "nlp:optimization", "nlp:linguistic"], "name": "Ontological Modeling Language core build (Xcore, Xtext, Xtend)"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2017-04-18"}, "contact": {"email": "NicolasRouquette"}, "repositoryURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.profileGenerator.application", "description": "Generator from Ontological Modeling Framework (OMF) vocabularies to profiles extending UML/SysML", "organization": "JPL", "homepageURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.profileGenerator.application", "contributors": ["NicolasRouquette", "sjiherzig"], "laborHours": 1168, "tags": ["nlp:computation", "profiles", "vocabularies", "Ontological", "Framework", "UML/SysML", "nlp:electric generator", "generator", "nlp:systems engineering", "nlp:transformations (mathematics)", "nlp:mathematical model", "nlp:conference", "Modeling", "nlp:optimization", "nlp:reliability", "nlp:temperature profile", "nlp:model", "OMF"], "name": "A MagicDraw DynamicScript application for executing the IMCE profile generator from OMF bundles"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2017-04-04"}, "contact": {"email": "sjiherzig"}, "repositoryURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.templates.scala.g8", "description": "The IMCE Project Template is a Giter8 template project serving as the basis for new Scala projects within the IMCE build ecosystem. Meant for developers familiar with or new to the IMCE platform, this repository contains reference guides and general purpose build and publish scripts for integration with IMCE accounts on Travis CI, Bintray and Github.", "organization": "JPL", "homepageURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.templates.scala.g8", "contributors": ["sjiherzig"], "laborHours": 48, "tags": ["nlp:project planning", "nlp:failure", "project", "Bintray", "nlp:manual", "nlp:ecosystem", "Scala", "Giter8", "TravisCI", "nlp:systems engineering", "IMCE", "GitHub", "nlp:missile", "nlp:project management", "nlp:optimization", "nlp:systems integration", "nlp:reliability", "template"], "name": "IMCE Project Template"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2017-03-01"}, "contact": {"email": "NicolasRouquette"}, "repositoryURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml.specification.parent", "description": "This is a multi-project of mostly Xcore/Xtext/Xtend sources used to generate several components (abstract syntax metamodel; concrete syntax parser, doc, ...). There are several Xtend-based code generators that produce Scala source code.", "organization": "JPL", "homepageURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml.specification.parent", "contributors": ["NicolasRouquette"], "laborHours": 6496, "tags": ["nlp:syntax", "OML", "IMCE", "centric", "model", "nlp:systems engineering", "composite", "language", "nlp:language", "integrated", "ontological", "nlp:model", "nlp:bionic", "nlp:programming language", "modeling", "engineering", "nlp:mathematical model", "nlp:specification", "Xtend", "generator", "nlp:coder", "scala", "nlp:computer programming"], "name": "Composite project for JPL's Integrated Model-Centric Engineering (IMCE) Ontological Modeling Language (OML) Specification"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2016-12-13"}, "contact": {"email": "NicolasRouquette"}, "repositoryURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.metrology.isoiec80000.magicdraw.library", "description": "This contains changes from previous versions. In IMCE.ISO80000-5 Thermodynamics::Units -- 'cubic metre ratio per pascasl' has a slot value: hasReducedFactors=false -- 'metre coefficient per kelvin' has a slot value: hasReducedFactors=false", "organization": "JPL", "homepageURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.metrology.isoiec80000.magicdraw.library", "contributors": ["NicolasRouquette"], "laborHours": 16, "tags": ["nlp:slot antenna", "model", "nlp:slot", "engineering", "MagicDraw", "nlp:library", "nlp:atmospheric model", "IMCE", "centric", "nlp:mathematical model", "nlp:model", "integrated", "Library", "IEC", "ISO"], "name": "ISO/IEC 80000 MagicDraw library resource from JPL's Integrated Model-Centric Engineering (IMCE)"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2017-01-12"}, "contact": {"email": "NicolasRouquette"}, "repositoryURL": "https://github.com/JPL-IMCE/imce.third_party.jena_libraries", "description": "This project builds an aggregate of several Apache Jena libraries published by the following organizations: 1) org.apache.jena A Java framework for building Semantic Web & Linked Data applications 2) org.apache.httpcomponents Toolset of low-level Java components focused on HTTP and associated protocols 3) xerces XML parsers for Java.", "organization": "JPL", "homepageURL": "https://github.com/JPL-IMCE/imce.third_party.jena_libraries", "contributors": ["NicolasRouquette"], "laborHours": 16, "tags": ["nlp:data base", "Apache", "nlp:computation", "nlp:protocol (computers)", "libraries", "nlp:semantic", "aggregate", "nlp:organization", "nlp:computer", "nlp:java (programming language)", "nlp:document markup language", "nlp:object-oriented programming", "nlp:linguistic", "Jena"], "name": "IMCE Third-Party Jena Libraries"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2017-01-11"}, "contact": {"email": "NicolasRouquette"}, "repositoryURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.magicdraw.projectUsageIntegrityChecker", "description": "Project Usage Integrity Checker for MagicDraw 18", "organization": "JPL", "homepageURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.magicdraw.projectUsageIntegrityChecker", "contributors": ["NicolasRouquette"], "laborHours": 7024, "tags": ["integrity", "nlp:failure", "usage", "nlp:vibration", "nlp:scattering function", "MagicDraw", "nlp:barium oxide", "nlp:systems engineering", "nlp:phosphorus compound", "nlp:missile", "nlp:phase control", "nlp:reliability", "checker", "nlp:optimization"], "name": "Project Usage Integrity Checker for MagicDraw 18"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2016-11-18"}, "contact": {"email": "NicolasRouquette"}, "repositoryURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.semmle", "description": "Configuration for Semmle Analysis of JPL's open-source projects", "organization": "JPL", "homepageURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.semmle", "contributors": ["NicolasRouquette"], "laborHours": 96, "tags": ["analysis", "nlp:failure", "nlp:aircraft configuration", "nlp:vibration", "nlp:configuration management", "nlp:systems analysi", "semmle", "nlp:systems engineering", "open-source", "nlp:spacecraft configuration", "nlp:reliability", "nlp:optimization", "nlp:radiation source"], "name": "Configuration for Semmle Analysis of JPL's open-source projects"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2016-11-04"}, "contact": {"email": "NicolasRouquette"}, "repositoryURL": "https://github.com/JPL-IMCE/imce.spark.data", "description": "This is a prototype to explore SPARK idioms for loading & analyzing OMF Schema tabular data.", "organization": "JPL", "homepageURL": "https://github.com/JPL-IMCE/imce.spark.data", "contributors": ["NicolasRouquette"], "laborHours": 112, "tags": ["nlp:data system", "nlp:computation", "schema", "SPARK", "nlp:simulation", "nlp:prototype", "nlp:data processing", "nlp:systems analysi", "nlp:data reduction", "nlp:digital data", "prototype", "nlp:estimating", "nlp:structural analysi", "tabular", "OMF"], "name": "Prototyping SPARK-based analysis of IMCE OMF Schema data"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2016-11-26"}, "contact": {"email": "NicolasRouquette"}, "repositoryURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.profileGenerator.model.profile", "description": "Model for representing SysML profiles, used as an intermediate format in the profile generation process.", "organization": "JPL", "homepageURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.profileGenerator.model.profile", "contributors": ["NicolasRouquette", "sjiherzig"], "laborHours": 272, "tags": ["profile", "nlp:dynamic model", "nlp:format", "nlp:wave generation", "nlp:electric generator", "generator", "nlp:atmospheric model", "nlp:signal generator", "nlp:mathematical model", "nlp:vortex generator", "nlp:model", "SysML", "nlp:boundary layer"], "name": "Profile Generator - Profile Model"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2016-10-26"}, "contact": {"email": "NicolasRouquette"}, "repositoryURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.profileGenerator.model.bundle", "description": "Model for representing digest bundles, used as an intermediate format in the profile generation process.", "organization": "JPL", "homepageURL": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.profileGenerator.model.bundle", "contributors": ["NicolasRouquette", "sjiherzig"], "laborHours": 208, "tags": ["profile", "bundles", "nlp:format", "nlp:electric generator", "nlp:systems engineering", "nlp:aircraft model", "nlp:mathematical model", "digest", "nlp:reliability", "nlp:model", "nlp:signal generator", "nlp:temperature profile", "nlp:optimization"], "name": "Profile Generator - Bundle Model"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2016-10-24"}, "contact": {"email": "NicolasRouquette"}, "repositoryURL": "https://github.com/JPL-IMCE/imce.third_party.aspectj_libraries", "description": "This project builds an aggregate of the AspectJ libraries published by the following organization: org.aspectj A seamless aspect-oriented extension to the Java programming language.", "organization": "JPL", "homepageURL": "https://github.com/JPL-IMCE/imce.third_party.aspectj_libraries", "contributors": ["NicolasRouquette", "sjiherzig"], "laborHours": 16, "tags": ["nlp:programming language", "libraries", "nlp:language programming", "nlp:high level language", "aggregate", "nlp:computer programming", "AspectJ", "nlp:library", "nlp:organization", "nlp:object-oriented programming", "nlp:language", "nlp:java (programming language)", "nlp:machine oriented language", "Java"], "name": "IMCE Third-Party AspectJ Libraries"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2018-06-26"}, "contact": {"email": "robfalck"}, "repositoryURL": "https://github.com/OpenMDAO/dymos", "description": "Dymos is a library for solving general optimal control problems within the context of multidisciplinary optimization via the OpenMDAO multidisciplinary optimization framework.", "organization": "GRC", "homepageURL": "https://github.com/OpenMDAO/dymos", "contributors": ["robfalck", "JustinSGray"], "laborHours": 2500, "tags": ["nlp:combinatorial analysi", "nlp:computation", "nlp:problem solving", "nlp:time optimal control", "trajectory optimization", "nlp:systems analysi", "python", "openmdao", "nlp:optimal control", "nlp:control", "nlp:automatic control", "nlp:control theory", "optimal control", "nlp:optimization"], "name": "Dymos"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2018-08-21"}, "contact": {"email": "Christopher Teubert"}, "repositoryURL": "https://github.com/nasa/LH2Sim", "description": "'Simulation of Cryogenic Tank with Temperature Stratification' is a MATLAB-based simulation of temperature stratification effects for cryogenic fluid in a tank. It is a reduced dynamical model describing temperature stratification effects driven by natural convection in a liquid hydrogen cryogenic tank. It accounts for storage, loading, and unloading of cryogenic fluid.", "organization": "ARC", "homepageURL": "https://software.nasa.gov/software/ARC-17900-1", "contributors": ["Christopher Teubert", "Matthew Daigle"], "laborHours": 416, "tags": ["nlp:convection", "temperature", "nlp:liquid hydrogen", "MATLAB", "hydrogen", "nlp:propellant tank", "nlp:temperature effect", "nlp:cryogenic", "nlp:hydrogen", "cryogenic", "nlp:free convection", "nlp:cryogenic fluid", "nlp:stratification", "nlp:convection current", "fluid", "stratification"], "name": "Simulation of Cryogenic Tank with Temperature Stratification"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2018-08-21"}, "contact": {"email": "Klaus Pontoppidan"}, "repositoryURL": "https://github.com/spacetelescope/jwst_backgrounds", "description": "jwst_backgrounds is a a simple program to predict the levels of background emission in JWST observations, for use in proposal planning. It accesses a precompiled background cache prepared by Space Telescope Science Institute. The background cache is hosted by the Mikulski Archive for Space Telescopes (MAST), so you need internet access to run the tool with the remote cache. It is possible to download the full background cache to your local machine. Instructions for downloading the background cache can be found at http://archive.stsci.edu/archive_news/2017/08-Aug/index.html#article1.", "organization": "ARC", "homepageURL": "https://jwst.stsci.edu/news-events/news/News%20items/the-jwst-backgrounds-tool-is-now-available", "contributors": ["Klaus Pontoppidan", "janerigby"], "laborHours": 304, "tags": ["Mikulski Archive for Space Telescopes", "MAST", "Archive", "predict", "background", "python", "observations", "nlp:space observations (from earth)", "Mikulski", "emission", "nlp:internet", "nlp:aerospace science", "nlp:telescope", "Space", "Telescopes", "nlp:spaceborne telescope"], "name": "JWST Background Tools"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2018-08-21"}, "contact": {"email": "Curt Tilmes"}, "repositoryURL": "https://github.com/CurtTilmes/perl6-dbpg", "description": "PostgreSQL (https://www.postgresql.org) is an Open Source Relational Database Management System (RDBMS). It includes a C library (libpq) for interacting with the server over the network (https://www.postgresql.org/docs/10/static/libpq.html). This module provides a rich interface to the PostgreSQL libpq library for Perl 6. It includes capabilities for prepared query caching, database connection caching, exception handling, flexible type conversion (including Boolean, Date, DateTime, Byte Arrays, etc. as well as custom types), bulk data copy in and out, listen/notify, transactions, and cursors for large query processing.", "organization": "GSFC", "homepageURL": "https://software.nasa.gov/software/GSC-18031-1", "contributors": ["Curt Tilmes", "Fritz Zaucker"], "laborHours": 752, "tags": ["nlp:data processing equipment", "nlp:computer network", "C library", "nlp:data base management system", "nlp:data base", "Open", "nlp:module", "Database", "Source", "Relational", "caching", "conversion", "C", "nlp:query language", "Management", "nlp:data processing", "nlp:library", "nlp:data management", "RDBMD", "nlp:data system", "System", "PostgreSQL", "processing"], "name": "Perl 6 DBPg PostgreSQL module"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2018-08-21"}, "contact": {"email": "Curt Tilmes"}, "repositoryURL": "https://github.com/CurtTilmes/perl6-epoll", "description": "A simple wrapper exposing the Linux epoll(7) I/O event notification facility within Perl 6.", "organization": "GSFC", "homepageURL": "https://software.nasa.gov/software/GSC-18030-1", "contributors": ["Curt Tilmes"], "laborHours": 80, "tags": ["nlp:failure", "Perl 6", "nlp:scattering function", "nlp:industrial plant", "nlp:systems engineering", "nlp:phosphorus compound", "nlp:test facility", "wrapper", "nlp:missile", "notification", "nlp:reliability", "nlp:research facility", "linux", "nlp:phase control"], "name": "Perl 6 epoll"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2018-08-21"}, "contact": {"email": "tclune"}, "repositoryURL": "https://github.com/nasa/gFTL", "description": "This innovation creates the capability for Fortran software developers to routinely declare and use specialized software containers for arbitrary types of data. The capability is somewhat analogous to that of the C Standard Template Library but with important differences. Although the number of containers are expected to grow, the current supported cases are Vector, Map, and Set. Contained items can be of any intrinsic type or user-defined derived type. The user can also indicate that the contained objects are polymorphic and/or pointers with corresponding implications for the semantics of using those containers.", "organization": "GSFC", "homepageURL": "https://software.nasa.gov/software/GSC-17742-1", "contributors": ["tclune"], "laborHours": 6688, "tags": ["nlp:semantic", "nlp:software engineering", "nlp:library", "nlp:template", "nlp:software development tool", "nlp:computer systems program", "nlp:standard", "containers", "nlp:computer program", "Fortran", "nlp:object-oriented programming", "software", "nlp:computer programming"], "name": "Fortran Template Library (gFTL) for managing collections of objects via software containers"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2018-08-21"}, "contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "repositoryURL": "https://sourceforge.net/projects/gmat/files/latest/download", "description": "The General Mission Analysis Tool (GMAT) is the world's only enterprise, multi-mission, open source software system for space mission design, optimization, and navigation. The system supports missions in flight regimes ranging from low Earth orbit to lunar, libration point, and deep space missions. GMAT is developed by a team of NASA, private industry, public, and private contributors and is used for real-world mission support, engineering studies, as a tool for education, and public engagement.", "organization": "GSFC", "homepageURL": "https://software.nasa.gov/software/GSC-18094-1", "contributors": ["gsfc-softwarerequest@mail.nasa.gov"], "laborHours": 37504, "tags": ["LRO", "nlp:manned space flight", "Wind", "space", "Advanced Composition Explorer", "Solar and Heliospheric Observatory", "nlp:space navigation", "orbit", "mission", "nlp:systems engineering", "Solar Dynamics Observatory", "nlp:mission planning", "TESS", "ACE", "open", "nlp:design analysi", "nlp:navigation", "nlp:space mission", "Transiting Exoplanet Survey Satellite", "SOHO", "nlp:systems analysi", "nlp:software development tool", "nlp:applications programs (computers)", "optimizer", "non-linear", "SDO", "Lunar Reconnaissance Orbiter"], "name": "General Mission Analysis Tool (GMAT) Version R2018a"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2018-08-21"}, "contact": {"email": "larc-sra@mail.nasa.gov"}, "repositoryURL": "https://github.com/nasa/SROMPy", "description": "The Stochastic Reduced Order Models with Python (SROMPy) software package is code written in Python to help solve uncertainty quantification and propagation problems. Stochastic Reduced Order Models (SROMs) are low-dimensional, discrete representations of a given random vector being modeled that facilitate efficient stochastic calculations. SROMs can be viewed as a smart Monte Carlo method - using the concept for uncertainty propagation is similarly straightforward, but can significantly reduce computation time. An SROM is formed for a given target random vector by solving an optimization problem that determines it's parameters by minimizing the error between the statistics of the SROM and the target. Once the SROM is formed, it can be use to efficiently perform a probabilistic analysis. The SROMPy software package is a tool to solve the optimization problem efficiently to generate an SROM that can be used to propagate uncertainty through a given model.", "organization": "LaRC", "homepageURL": "https://software.nasa.gov/software/LAR-19359-1", "contributors": ["larc-sra@mail.nasa.gov"], "laborHours": 1008, "tags": ["order", "nlp:computation", "calculations", "discrete", "python", "stochastic", "models", "vector", "nlp:statistical analysi", "low-dimensional", "nlp:software development tool", "nlp:error analysi", "nlp:mathematical model", "nlp:applications programs (computers)", "random", "representations", "reduced", "nlp:computerized simulation", "nlp:monte carlo method", "propagation", "nlp:computer program", "nlp:optimization"], "name": "Stochastic Reduced Order Models with Python (SROMPy)"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2018-08-21"}, "contact": {"email": "cesar.a.munoz@nasa.gov"}, "repositoryURL": "https://github.com/nasa/PLEXIL5", "description": "The Plan Execution Interchange Language (PLEXIL) is an open source synchronous language developed by NASA for commanding and monitoring autonomous systems. PLEXIL Formal Interactive Verification Environment (PLEXIL5) is a tool that implements a formal executable semantics of PLEXIL. PLEXIL5 includes a graphical interface that enable access to formal verification techniques such as model-checking, symbolic execution, theorem proving, and static analysis of plans. The graphical environment supports formula editing and visualization of counterexamples, interactive simulation of plans at different granularity levels, and random initialization of external environment variables.", "organization": "LaRC", "homepageURL": "https://software.nasa.gov/software/LAR-19339-1", "contributors": ["cesar.a.munoz@nasa.gov"], "laborHours": 42320, "tags": ["nlp:high level language", "sychronous", "Interchange", "Interactive", "nlp:program verification (computers)", "autonomous", "Execution", "nlp:systems simulation", "nlp:programming language", "nlp:semantic", "nlp:systems analysi", "nlp:mathematical model", "Language", "Environment", "Plan", "nlp:scientific visualization", "nlp:simulation", "nlp:computerized simulation", "Verification", "Formal", "PLEXIL5"], "name": "Formal Interactive Verification Environment for the Plan Execution Interchange Language (PLEXIL5)"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2017-07-16"}, "contact": {"email": "gretastudier"}, "repositoryURL": "https://github.com/nasa/AprilNav", "description": "AprilNav is a mobile indoor real-time landmark navigation system.", "organization": "MSFC", "homepageURL": "https://github.com/nasa/AprilNav", "contributors": ["gretastudier", "tkschuler"], "laborHours": 600, "tags": ["nlp:navigation", "nlp:real time operation", "nlp:navigation instrument", "nlp:time dependence", "Tools", "nlp:time optimal control", "nlp:systems analysi", "nlp:conference", "Autonomous Systems", "nlp:time measurement", "Navigation", "nlp:space navigation", "nlp:inertial navigation"], "name": "AprilNav", "languages": ["C++", "python"]}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2018-08-21"}, "contact": {"email": "jsc-ttco-software-request@mail.nasa.gov"}, "repositoryURL": "https://software.nasa.gov/software/LAR-19128-1", "description": "This is a training tool for individuals to learn how to develop software with NASA-developed Core Flight software (CFS) framework. No agreement is necessary through this catalog. Software is available at open source site.", "organization": "JSC", "homepageURL": "https://software.nasa.gov/software/LAR-19128-1", "contributors": ["jsc-ttco-software-request@mail.nasa.gov"], "laborHours": 1, "tags": ["nlp:programming environment", "core", "training", "framework", "nlp:astronomical catalog", "nlp:catalogs (publications)", "nlp:software engineering", "nlp:nasa program", "nlp:software development tool", "nlp:astronaut training", "flight", "nlp:education", "nlp:applications programs (computers)", "nlp:computer program", "software"], "name": "CFS-101 Training"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2018-08-21"}, "contact": {"email": "larc-sra@mail.nasa.gov"}, "repositoryURL": "https://github.com/NASA-DEVELOP/MARSHe", "description": "This tool includes three general types of scripts. The first one extracts average NDVI values from Landsat 5 and Landsat 8 image collections for specified reference dates (typically a period of 10-15 years). Anomalies in NDVI values are then derived from Landsat 5 & 8 reference image collections from later dates (typically the year after the reference period to present). Various graphs and charts are produced showing positive and negative NDVI changes for specified points. The results are also visualized on the map as either areas of NDVI gain (displayed in green) or NDVI loss (displayed in red). The second types of scripts included scripts that perform unsupervised classifications to determine marsh extent for a variety of years and were made by applying a mask over the specified study area that incorporates elevation data to exclude regions over a specified height above average sea-level. These scripts require the user to choose classified pixel clusters that represent marsh land cover by using the Google Earth Inspector tab and then entering those values into the script to generate the marsh extent maps. Results of these scripts include classification maps for various years (2000, 2005, 2010, 2015, etc.). The user can then decide to export those results into either their Assets or their Drive, or both. A third type of script is used for statistics regarding the classified maps generated in the classification scripts. These statistics include total pixel number and total marsh area calculated into square meters after the marsh extent pixels are clipped to our study area (the State of Maryland).", "organization": "LaRC", "homepageURL": "https://software.nasa.gov/software/LAR-19211-1", "contributors": ["larc-sra@mail.nasa.gov"], "laborHours": 16, "tags": ["nlp:satellite imagery", "nlp:thematic mapping", "nlp:mapping", "nlp:photomapping", "nlp:topography", "nlp:remote sensing", "nlp:map", "evaluation", "Landsat 8", "nlp:landsat satellite", "nlp:classification", "remote", "Landsat 5", "health", "nlp:thematic mappers (landsat)", "sensing", "marsh", "image"], "name": "MaRSHE- Marsh Remote Sensing Health Evaluation"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2018-08-21"}, "contact": {"email": "larc-sra@mail.nasa.gov"}, "repositoryURL": "https://github.com/nasa/TLNS3D", "description": "This software was developed to solve Reynolds-averaged Navier-Stokes Equations to simulate turbulent, viscous flows over three-dimensional configurations. A general multiblock grid is used to model complex configurations. A multi-stage Runge-Kutta pseudo-time stepping scheme is coupled with residual smoothing and multigrid acceleration techniques to form an efficient algorithm. TLNS3D-MB was the first CFD code to demonstrate grid independent convergence rate for transonic viscous flows over wing/fuselage configurations.", "organization": "LaRC", "homepageURL": "https://software.nasa.gov/software/LAR-16666-GS", "contributors": ["larc-sra@mail.nasa.gov"], "laborHours": 29952, "tags": ["nlp:computational fluid dynamic", "nlp:aerodynamic configuration", "nlp:unstructured grids (mathematics)", "nlp:computational grid", "nlp:grid generation (mathematics)", "nlp:navier-stokes equation", "nlp:algorithm", "Stokes", "viscous", "Reynolds", "Reynolds-averaged", "averaged", "nlp:runge-kutta method", "nlp:multigrid method", "turbulent", "equations", "three-dimensional", "Navier-Stokes", "simulate", "Navier", "configurations", "nlp:three dimensional flow"], "name": "TLNS3D"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "ALv2", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2018-09-27"}, "contact": {"email": "jeremyabel"}, "repositoryURL": "https://github.com/googlecreativelab/access-mars", "description": "The Curiosity rover has been on the surface of Mars for over five years. In that time, it has sent over 200,000 photos back to Earth. Using these photos, engineers at JPL have reconstructed the 3D surface of Mars for their scientists to use as a mission planning tool \u2013 surveying the terrain and identifying geologically significant areas for Curiosity to investigate further. And now you can explore the same Martian surface in your browser in an immersive WebVR experience. Access Mars features four important mission locations: the Landing Site, Pahrump Hills, Marias Pass, and Murray Buttes. Additionally, users can visit Curiosity's 'Current Location' for a look at where the rover has been in the past two to four weeks. And while you explore it all, JPL scientist Katie Stack Morgan will be your guide, teaching you about key mission details and highlighting points of interest.", "organization": "JPL", "homepageURL": "https://accessmars.withgoogle.com/", "contributors": ["jeremyabel", "mannytan", "ryburke", "kellyannl", "amenzies"], "laborHours": 60208, "tags": ["nlp:mars surface", "nlp:site selection", "Curiosity Rover", "nlp:topography", "nlp:mars exploration", "nlp:roving vehicle", "nlp:landing site", "nlp:mars landing", "nlp:mars (planet)", "nlp:mars environment", "nlp:terrain", "Mars", "WebVR"], "name": "Access Mars"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "MIT", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2018-11-14"}, "contact": {"email": "maliska"}, "repositoryURL": "https://github.com/nasa/NASA-Acronyms", "description": "This is a tool for defining over 25,000 NASA acronyms.", "organization": "KSC", "homepageURL": "https://nasaacronyms.com/", "contributors": ["maliska"], "laborHours": 78128, "tags": ["nlp:nasa space program", "nlp:failure", "tool", "nlp:vibration", "nasa", "nlp:scattering function", "nlp:barium oxide", "nlp:nasa program", "nlp:systems engineering", "search", "nlp:phase control", "acronym", "nlp:reliability", "nlp:optimization"], "name": "NASA Acronyms"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2018-10-23"}, "contact": {"email": "kbthomp1"}, "repositoryURL": "https://github.com/T-infinity/miniapps", "description": "HyperSolve AD Mini-App uses an in-house developed AD tool that is based on operator-overloading to compute linearizations of a given function.", "organization": "LaRC", "homepageURL": "https://software.nasa.gov/software/LAR-19476-1", "contributors": ["kbthomp1"], "laborHours": 320, "tags": ["nlp:stability", "nlp:functions (mathematics)", "overloading", "operator", "linearization", "function", "nlp:tool", "nlp:linearization", "nlp:distribution function", "nlp:circuit", "nlp:reliability", "nlp:boundary layer", "nlp:radiation", "nlp:operators (mathematics)"], "name": "HyperSolve AD Mini-App"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2018-11-08"}, "contact": {"email": "lukemorrill"}, "repositoryURL": "https://github.com/nasa/mlmcpy", "description": "Python module for applying the Multi-Level Monte Carlo (MLMC) method for uncertainty propagation.", "organization": "LaRC", "homepageURL": "https://github.com/nasa/mlmcpy", "contributors": ["lukemorrill", "jwarner308"], "laborHours": 784, "tags": ["nlp:light transmission", "nlp:radio transmission", "nlp:computation", "multi", "nlp:wave propagation", "nlp:simulation", "nlp:module", "nlp:systems analysi", "level", "python", "nlp:monte carlo method", "nlp:estimating", "monte", "uncertainty", "nlp:electronic module", "carlo"], "name": "Multi-Level Monte Carlo"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2018-11-14"}, "contact": {"email": "peleser"}, "repositoryURL": "https://github.com/nasa/SMCPy", "description": "Python module for uncertainty quantification using a parallel sequential Monte Carlo sampler", "organization": "LaRC", "homepageURL": "https://github.com/nasa/SMCPy", "contributors": ["peleser"], "laborHours": 1120, "tags": ["nlp:probability theory", "nlp:stability", "nlp:computation", "nlp:image", "nlp:simulation", "parameter estimation", "nlp:module", "nlp:systems analysi", "nlp:monte carlo method", "nlp:estimating", "uncertainty quantification", "model calibration", "nlp:electronic module"], "name": "Sequential Monte Carlo Sampling with Python"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2018-11-14"}, "contact": {"email": "gbomarito"}, "repositoryURL": "https://github.com/nasa/bingo", "description": "Bingo is an open source package for performing symbolic regression. Its emphasis lies on the efficient use of HPC resources. For the most part, things should work \"out of the box\", with a few dependencies that are standard in many python installs.", "organization": "LaRC", "homepageURL": "https://github.com/nasa/bingo", "contributors": ["gbomarito"], "laborHours": 34480, "tags": ["nlp:earth resource", "nlp:stability", "nlp:heat source", "nlp:light source", "HPC", "nlp:regression analysi", "symbolic regression", "nlp:electronic packaging", "nlp:circuit", "nlp:reliability", "nlp:point source", "nlp:radiation source"], "name": "Bingo"}, {"permissions": {"usageType": "openSource", "licenses": [{"name": "NASA Open Source", "URL": "https://example.com"}]}, "date": {"metadataLastUpdated": "2019-02-15"}, "contact": {"email": "cesar.a.munoz@nasa.gov"}, "repositoryURL": "https://github.com/nasa/fprock", "description": "FPRoCk is a software library for checking satisfiability of a set of mixed real and floating-point constraints. If this set of constraints has at least one solution, it returns one of the solutions, otherwise it returns UNSAT indicating that the set is unsatisfiable.", "organization": "LaRC", "homepageURL": "https://github.com/nasa/fprock", "contributors": ["cesar.a.munoz@nasa.gov"], "laborHours": 500, "tags": ["nlp:computation", "floating-point SAT solver", "nlp:constraint", "satisfiability (SAT) checker", "nlp:software engineering", "nlp:set theory", "mixed floating-point/real constraints", "nlp:software development tool", "nlp:systems analysi", "real-number SAT solver", "nlp:computer systems program", "nlp:applications programs (computers)", "nlp:computer program", "nlp:computer programming"], "name": "FPRoCK"}, {"name": "NASAaccess: Downloading and reformatting tool for NASA Earth Observation data products", "description": "NASAaccess is R package that can generate gridded ascii tables of climate (CIMP5) and weather data (GPM, TRMM, GLDAS) needed to drive various hydrological models (e.g., SWAT, VIC, RHESSys, ..etc). The package assumes that users have already set up a registration account(s) with Earthdata login as well as authorizing NASA GESDISC data access. Please refer to  https://disc.gsfc.nasa.gov/data-access for further details. The package relies on 'curl' (https://curl.haxx.se/) commands and library to access and download data from NASA remote sensing servers.  Since Mac users have curl as part of macOS, Windows users should make sure that their local machines have 'curl' installed properly.  Creating the .netrc file at the user machine 'Home' directory and storing the user NASA GESDISC logging information in it is needed to execute the package commands. Instructions on creating the .netrc and .urs_cookies files can be accessed at https://wiki.earthdata.nasa.gov/display/EL/How+To+Access+Data+With+cURL+And+Wget.", "permissions": {"licenses": [{"URL": "https://github.com/nasa/NASAaccess/blob/master/LICENSE", "name": "NASA Open Source"}], "usageType": "openSource"}, "tags": ["R", "VIC", "NEX-GDDP", "temperature", "rhessys", "climate", "nlp:climate model", "nlp:climatology", "cimp5", "rainfall runoff model", "precipitation", "gpm", "gldas", "nlp:earth observations (from space)", "nlp:data processing", "nlp:data management", "nlp:applications programs (computers)", "nlp:climate", "nlp:data system", "swat", "nlp:remote sensing", "nlp:information system", "remote sening", "trmm"], "date": {"created": "2017-09-19", "lastModified": "2019-03-11", "metadataLastUpdated": "2019-03-11"}, "contact": {"email": "ibrahim.mohammed@nasa.gov"}, "contributors": [{"name": "Ibrahim Mohammed", "email": "ibrahim.mohammed@nasa.gov", "github": "https://github.com/imohamme"}, {"name": "John Bolten", "email": "john.bolten@nasa.gov"}], "organization": "GSFC", "repositoryURL": "https://github.com/nasa/NASAaccess", "externalURL": "https://doi.org/10.3390/rs10060885", "laborHours": 320}, {"name": "LHASA", "description": "Landslide Hazard Analysis for Situational Awareness", "permissions": {"licenses": [{"URL": "https://github.com/nasa/LHASA/blob/master/LICENSE.pdf", "name": "NASA Open Source"}], "usageType": "openSource"}, "tags": ["analysis", "nlp:stability", "gpm", "awareness", "nlp:conference", "nlp:boundary layer", "nlp:circuit", "nlp:situational awarenes", "nlp:reliability", "nlp:environment", "nlp:hazard", "hazard", "imerg", "nlp:radiation", "landslide"], "date": {"created": "2015-06-01", "lastModified": "2018-11-20", "metadataLastUpdated": "2019-03-13"}, "contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "contributors": [{"name": "Thomas Stanley", "email": "thomas.a.stanley@nasa.gov", "github": "thomasstanley"}, {"name": "Dalia Kirschbaum", "email": "dalia.kirschbaum@nasa.gov", "github": "GLCKirschbaum"}, {"name": "Pat Cappelaere", "email": "pat@cappelaere.com", "github": "cappelaere"}], "organization": "GSFC", "repositoryURL": "https://github.com/nasa/LHASA", "externalURL": "https://software.nasa.gov/software/GSC-17452-1", "laborHours": 16}, {"name": "Core Flight System (cFS) Stored Command Absolute (SCA) application", "description": "The Stored Command Absolute (SCA) application is a core Flight System (cFS) application that is a plug in to the Core Flight Executive (cFE) component of the cFS.  The SCA application allows a system to be commanded 24 hours a day using sequences of absolute time tagged command sequences.", "permissions": {"licenses": [{"URL": "https://github.com/nasa/SCA/blob/master/NOSA_GSC-17537-1.pdf", "name": "NASA Open Source Agreement Version 1.3"}], "usageType": "openSource"}, "tags": ["nlp:real time operation", "management", "nlp:time dependence", "nlp:sequencing", "vehicle"], "date": {"created": "2014-06-06", "lastModified": "2018-02-08", "metadataLastUpdated": "2019-03-04"}, "contact": {"email": "gsfc-softwarerequest@mail.nasa.gov"}, "organization": "GSFC", "contributors": [{"name": "Susanne Strege", "email": "susanne.l.strege@nasa.gov"}, {"name": "Charles Zogby", "email": "charles.a.zogby@nasa.gov"}, {"name": "Elizabeth Timmons", "email": "elizabeth.timmons@nasa.gov"}], "repositoryURL": "https://github.com/nasa/SCA", "externalURL": "https://software.nasa.gov/software/GSC-17537-1", "laborHours": 1872}, {"name": "LAGER (Light-weight Accumulator Gathering Efficiently in Real-time)", "description": "LAGER (Light-weight Accumulator Gathering Efficiently in Real-time) is a reliable software logging system designed to allow multiple logging sources to log to multiple end users.", "permissions": {"licenses": [{"URL": "https://example.com", "name": "NASA Open Source v1.3"}], "usageType": "openSource"}, "tags": ["nlp:real time operation", "logging", "nlp:time dependence", "nlp:light source", "nlp:software engineering", "nlp:user requirement", "high performance", "nlp:systems analysi", "LTTng", "nlp:software development tool", "nlp:computer systems program", "nlp:applications programs (computers)", "nlp:computer program"], "date": {"created": "2018-01-10", "lastModified": "2019-02-06", "metadataLastUpdated": "2019-03-19"}, "contact": {"email": "jsc-ttco-software-request@mail.nasa.gov"}, "contributors": [{"name": "Chuck Claunch", "email": "charles.a.claunch@nasa.gov", "github": "impala454"}, {"name": "Patrick Knauth", "email": "patrick.w.knauth@nasa.gov", "github": "patrickk183"}, {"name": "Jairo Sanchez", "email": "jairo.sanchez@nasa.gov", "github": "dotjairo"}, {"name": "Philip Strawser", "email": "philip.a.strawser@nasa.gov", "github": "pstrawse"}], "organization": "JSC", "repositoryURL": "https://github.com/nasa/lager", "externalURL": "https://software.nasa.gov/software/MSC-26455-1", "laborHours": 2880, "languages": ["C++", "CMake"]}]}